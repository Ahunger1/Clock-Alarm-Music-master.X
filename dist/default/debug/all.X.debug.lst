

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun May 17 15:50:06 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
  1180                           INDF equ 00h ;# 
  1181  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
  1182                           TMR0 equ 01h ;# 
  1183  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
  1184                           PCL equ 02h ;# 
  1185  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
  1186                           STATUS equ 03h ;# 
  1187  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
  1188                           FSR equ 04h ;# 
  1189  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
  1190                           PORTA equ 05h ;# 
  1191  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
  1192                           PORTB equ 06h ;# 
  1193  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
  1194                           PORTC equ 07h ;# 
  1195  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
  1196                           PORTD equ 08h ;# 
  1197  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
  1198                           PORTE equ 09h ;# 
  1199  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
  1200                           PCLATH equ 0Ah ;# 
  1201  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
  1202                           INTCON equ 0Bh ;# 
  1203  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
  1204                           PIR1 equ 0Ch ;# 
  1205  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
  1206                           PIR2 equ 0Dh ;# 
  1207  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
  1208                           TMR1 equ 0Eh ;# 
  1209  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
  1210                           TMR1L equ 0Eh ;# 
  1211  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
  1212                           TMR1H equ 0Fh ;# 
  1213  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
  1214                           T1CON equ 010h ;# 
  1215  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
  1216                           TMR2 equ 011h ;# 
  1217  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
  1218                           T2CON equ 012h ;# 
  1219  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
  1220                           SSPBUF equ 013h ;# 
  1221  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
  1222                           SSPCON equ 014h ;# 
  1223  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
  1224                           CCPR1 equ 015h ;# 
  1225  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
  1226                           CCPR1L equ 015h ;# 
  1227  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
  1228                           CCPR1H equ 016h ;# 
  1229  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
  1230                           CCP1CON equ 017h ;# 
  1231  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
  1232                           RCSTA equ 018h ;# 
  1233  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
  1234                           TXREG equ 019h ;# 
  1235  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
  1236                           RCREG equ 01Ah ;# 
  1237  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
  1238                           CCPR2 equ 01Bh ;# 
  1239  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
  1240                           CCPR2L equ 01Bh ;# 
  1241  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
  1242                           CCPR2H equ 01Ch ;# 
  1243  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
  1244                           CCP2CON equ 01Dh ;# 
  1245  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
  1246                           ADRESH equ 01Eh ;# 
  1247  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
  1248                           ADCON0 equ 01Fh ;# 
  1249  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
  1250                           OPTION_REG equ 081h ;# 
  1251  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
  1252                           TRISA equ 085h ;# 
  1253  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
  1254                           TRISB equ 086h ;# 
  1255  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
  1256                           TRISC equ 087h ;# 
  1257  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
  1258                           TRISD equ 088h ;# 
  1259  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
  1260                           TRISE equ 089h ;# 
  1261  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
  1262                           PIE1 equ 08Ch ;# 
  1263  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
  1264                           PIE2 equ 08Dh ;# 
  1265  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
  1266                           PCON equ 08Eh ;# 
  1267  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
  1268                           OSCCON equ 08Fh ;# 
  1269  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
  1270                           OSCTUNE equ 090h ;# 
  1271  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
  1272                           SSPCON2 equ 091h ;# 
  1273  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
  1274                           PR2 equ 092h ;# 
  1275  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
  1276                           SSPADD equ 093h ;# 
  1277  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
  1278                           SSPMSK equ 093h ;# 
  1279  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
  1280                           MSK equ 093h ;# 
  1281  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
  1282                           SSPSTAT equ 094h ;# 
  1283  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
  1284                           WPUB equ 095h ;# 
  1285  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
  1286                           IOCB equ 096h ;# 
  1287  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
  1288                           VRCON equ 097h ;# 
  1289  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
  1290                           TXSTA equ 098h ;# 
  1291  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
  1292                           SPBRG equ 099h ;# 
  1293  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
  1294                           SPBRGH equ 09Ah ;# 
  1295  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
  1296                           PWM1CON equ 09Bh ;# 
  1297  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
  1298                           ECCPAS equ 09Ch ;# 
  1299  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
  1300                           PSTRCON equ 09Dh ;# 
  1301  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
  1302                           ADRESL equ 09Eh ;# 
  1303  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
  1304                           ADCON1 equ 09Fh ;# 
  1305  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
  1306                           WDTCON equ 0105h ;# 
  1307  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
  1308                           CM1CON0 equ 0107h ;# 
  1309  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
  1310                           CM2CON0 equ 0108h ;# 
  1311  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
  1312                           CM2CON1 equ 0109h ;# 
  1313  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
  1314                           EEDATA equ 010Ch ;# 
  1315  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
  1316                           EEDAT equ 010Ch ;# 
  1317  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
  1318                           EEADR equ 010Dh ;# 
  1319  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
  1320                           EEDATH equ 010Eh ;# 
  1321  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
  1322                           EEADRH equ 010Fh ;# 
  1323  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
  1324                           SRCON equ 0185h ;# 
  1325  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
  1326                           BAUDCTL equ 0187h ;# 
  1327  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
  1328                           ANSEL equ 0188h ;# 
  1329  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
  1330                           ANSELH equ 0189h ;# 
  1331  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
  1332                           EECON1 equ 018Ch ;# 
  1333  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
  1334                           EECON2 equ 018Dh ;# 
  1335  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
  1336                           INDF equ 00h ;# 
  1337  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
  1338                           TMR0 equ 01h ;# 
  1339  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
  1340                           PCL equ 02h ;# 
  1341  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
  1342                           STATUS equ 03h ;# 
  1343  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
  1344                           FSR equ 04h ;# 
  1345  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
  1346                           PORTA equ 05h ;# 
  1347  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
  1348                           PORTB equ 06h ;# 
  1349  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
  1350                           PORTC equ 07h ;# 
  1351  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
  1352                           PORTD equ 08h ;# 
  1353  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
  1354                           PORTE equ 09h ;# 
  1355  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
  1356                           PCLATH equ 0Ah ;# 
  1357  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
  1358                           INTCON equ 0Bh ;# 
  1359  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
  1360                           PIR1 equ 0Ch ;# 
  1361  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
  1362                           PIR2 equ 0Dh ;# 
  1363  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
  1364                           TMR1 equ 0Eh ;# 
  1365  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
  1366                           TMR1L equ 0Eh ;# 
  1367  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
  1368                           TMR1H equ 0Fh ;# 
  1369  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
  1370                           T1CON equ 010h ;# 
  1371  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
  1372                           TMR2 equ 011h ;# 
  1373  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
  1374                           T2CON equ 012h ;# 
  1375  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
  1376                           SSPBUF equ 013h ;# 
  1377  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
  1378                           SSPCON equ 014h ;# 
  1379  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
  1380                           CCPR1 equ 015h ;# 
  1381  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
  1382                           CCPR1L equ 015h ;# 
  1383  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
  1384                           CCPR1H equ 016h ;# 
  1385  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
  1386                           CCP1CON equ 017h ;# 
  1387  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
  1388                           RCSTA equ 018h ;# 
  1389  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
  1390                           TXREG equ 019h ;# 
  1391  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
  1392                           RCREG equ 01Ah ;# 
  1393  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
  1394                           CCPR2 equ 01Bh ;# 
  1395  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
  1396                           CCPR2L equ 01Bh ;# 
  1397  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
  1398                           CCPR2H equ 01Ch ;# 
  1399  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
  1400                           CCP2CON equ 01Dh ;# 
  1401  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
  1402                           ADRESH equ 01Eh ;# 
  1403  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
  1404                           ADCON0 equ 01Fh ;# 
  1405  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
  1406                           OPTION_REG equ 081h ;# 
  1407  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
  1408                           TRISA equ 085h ;# 
  1409  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
  1410                           TRISB equ 086h ;# 
  1411  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
  1412                           TRISC equ 087h ;# 
  1413  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
  1414                           TRISD equ 088h ;# 
  1415  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
  1416                           TRISE equ 089h ;# 
  1417  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
  1418                           PIE1 equ 08Ch ;# 
  1419  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
  1420                           PIE2 equ 08Dh ;# 
  1421  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
  1422                           PCON equ 08Eh ;# 
  1423  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
  1424                           OSCCON equ 08Fh ;# 
  1425  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
  1426                           OSCTUNE equ 090h ;# 
  1427  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
  1428                           SSPCON2 equ 091h ;# 
  1429  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
  1430                           PR2 equ 092h ;# 
  1431  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
  1432                           SSPADD equ 093h ;# 
  1433  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
  1434                           SSPMSK equ 093h ;# 
  1435  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
  1436                           MSK equ 093h ;# 
  1437  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
  1438                           SSPSTAT equ 094h ;# 
  1439  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
  1440                           WPUB equ 095h ;# 
  1441  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
  1442                           IOCB equ 096h ;# 
  1443  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
  1444                           VRCON equ 097h ;# 
  1445  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
  1446                           TXSTA equ 098h ;# 
  1447  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
  1448                           SPBRG equ 099h ;# 
  1449  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
  1450                           SPBRGH equ 09Ah ;# 
  1451  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
  1452                           PWM1CON equ 09Bh ;# 
  1453  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
  1454                           ECCPAS equ 09Ch ;# 
  1455  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
  1456                           PSTRCON equ 09Dh ;# 
  1457  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
  1458                           ADRESL equ 09Eh ;# 
  1459  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
  1460                           ADCON1 equ 09Fh ;# 
  1461  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
  1462                           WDTCON equ 0105h ;# 
  1463  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
  1464                           CM1CON0 equ 0107h ;# 
  1465  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
  1466                           CM2CON0 equ 0108h ;# 
  1467  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
  1468                           CM2CON1 equ 0109h ;# 
  1469  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
  1470                           EEDATA equ 010Ch ;# 
  1471  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
  1472                           EEDAT equ 010Ch ;# 
  1473  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
  1474                           EEADR equ 010Dh ;# 
  1475  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
  1476                           EEDATH equ 010Eh ;# 
  1477  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
  1478                           EEADRH equ 010Fh ;# 
  1479  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
  1480                           SRCON equ 0185h ;# 
  1481  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
  1482                           BAUDCTL equ 0187h ;# 
  1483  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
  1484                           ANSEL equ 0188h ;# 
  1485  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
  1486                           ANSELH equ 0189h ;# 
  1487  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
  1488                           EECON1 equ 018Ch ;# 
  1489  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
  1490                           EECON2 equ 018Dh ;# 
  1491  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
  1492                           INDF equ 00h ;# 
  1493  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
  1494                           TMR0 equ 01h ;# 
  1495  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
  1496                           PCL equ 02h ;# 
  1497  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
  1498                           STATUS equ 03h ;# 
  1499  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
  1500                           FSR equ 04h ;# 
  1501  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
  1502                           PORTA equ 05h ;# 
  1503  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
  1504                           PORTB equ 06h ;# 
  1505  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
  1506                           PORTC equ 07h ;# 
  1507  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
  1508                           PORTD equ 08h ;# 
  1509  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
  1510                           PORTE equ 09h ;# 
  1511  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
  1512                           PCLATH equ 0Ah ;# 
  1513  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
  1514                           INTCON equ 0Bh ;# 
  1515  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
  1516                           PIR1 equ 0Ch ;# 
  1517  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
  1518                           PIR2 equ 0Dh ;# 
  1519  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
  1520                           TMR1 equ 0Eh ;# 
  1521  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
  1522                           TMR1L equ 0Eh ;# 
  1523  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
  1524                           TMR1H equ 0Fh ;# 
  1525  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
  1526                           T1CON equ 010h ;# 
  1527  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
  1528                           TMR2 equ 011h ;# 
  1529  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
  1530                           T2CON equ 012h ;# 
  1531  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
  1532                           SSPBUF equ 013h ;# 
  1533  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
  1534                           SSPCON equ 014h ;# 
  1535  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
  1536                           CCPR1 equ 015h ;# 
  1537  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
  1538                           CCPR1L equ 015h ;# 
  1539  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
  1540                           CCPR1H equ 016h ;# 
  1541  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
  1542                           CCP1CON equ 017h ;# 
  1543  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
  1544                           RCSTA equ 018h ;# 
  1545  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
  1546                           TXREG equ 019h ;# 
  1547  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
  1548                           RCREG equ 01Ah ;# 
  1549  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
  1550                           CCPR2 equ 01Bh ;# 
  1551  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
  1552                           CCPR2L equ 01Bh ;# 
  1553  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
  1554                           CCPR2H equ 01Ch ;# 
  1555  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
  1556                           CCP2CON equ 01Dh ;# 
  1557  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
  1558                           ADRESH equ 01Eh ;# 
  1559  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
  1560                           ADCON0 equ 01Fh ;# 
  1561  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
  1562                           OPTION_REG equ 081h ;# 
  1563  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
  1564                           TRISA equ 085h ;# 
  1565  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
  1566                           TRISB equ 086h ;# 
  1567  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
  1568                           TRISC equ 087h ;# 
  1569  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
  1570                           TRISD equ 088h ;# 
  1571  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
  1572                           TRISE equ 089h ;# 
  1573  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
  1574                           PIE1 equ 08Ch ;# 
  1575  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
  1576                           PIE2 equ 08Dh ;# 
  1577  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
  1578                           PCON equ 08Eh ;# 
  1579  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
  1580                           OSCCON equ 08Fh ;# 
  1581  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
  1582                           OSCTUNE equ 090h ;# 
  1583  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
  1584                           SSPCON2 equ 091h ;# 
  1585  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
  1586                           PR2 equ 092h ;# 
  1587  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
  1588                           SSPADD equ 093h ;# 
  1589  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
  1590                           SSPMSK equ 093h ;# 
  1591  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
  1592                           MSK equ 093h ;# 
  1593  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
  1594                           SSPSTAT equ 094h ;# 
  1595  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
  1596                           WPUB equ 095h ;# 
  1597  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
  1598                           IOCB equ 096h ;# 
  1599  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
  1600                           VRCON equ 097h ;# 
  1601  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
  1602                           TXSTA equ 098h ;# 
  1603  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
  1604                           SPBRG equ 099h ;# 
  1605  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
  1606                           SPBRGH equ 09Ah ;# 
  1607  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
  1608                           PWM1CON equ 09Bh ;# 
  1609  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
  1610                           ECCPAS equ 09Ch ;# 
  1611  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
  1612                           PSTRCON equ 09Dh ;# 
  1613  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
  1614                           ADRESL equ 09Eh ;# 
  1615  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
  1616                           ADCON1 equ 09Fh ;# 
  1617  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
  1618                           WDTCON equ 0105h ;# 
  1619  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
  1620                           CM1CON0 equ 0107h ;# 
  1621  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
  1622                           CM2CON0 equ 0108h ;# 
  1623  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
  1624                           CM2CON1 equ 0109h ;# 
  1625  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
  1626                           EEDATA equ 010Ch ;# 
  1627  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
  1628                           EEDAT equ 010Ch ;# 
  1629  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
  1630                           EEADR equ 010Dh ;# 
  1631  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
  1632                           EEDATH equ 010Eh ;# 
  1633  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
  1634                           EEADRH equ 010Fh ;# 
  1635  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
  1636                           SRCON equ 0185h ;# 
  1637  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
  1638                           BAUDCTL equ 0187h ;# 
  1639  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
  1640                           ANSEL equ 0188h ;# 
  1641  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
  1642                           ANSELH equ 0189h ;# 
  1643  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
  1644                           EECON1 equ 018Ch ;# 
  1645  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
  1646                           EECON2 equ 018Dh ;# 
  1647  018D                     	FNCALL	_main,_ClearScreenOnce
  1648                           	FNCALL	_main,_Ds1302Init
  1649                           	FNCALL	_main,_Ds1302_Init
  1650                           	FNCALL	_main,_InitScrn
  1651                           	FNCALL	_main,_Initialize_INT
  1652                           	FNCALL	_main,_Initialize_UART
  1653                           	FNCALL	_main,_KEY_init
  1654                           	FNCALL	_main,_LCD_MPU_init
  1655                           	FNCALL	_main,_LCD_init
  1656                           	FNCALL	_main,_LED_Init
  1657                           	FNCALL	_main,_MUSIC_init
  1658                           	FNCALL	_main,_ModeSwitch
  1659                           	FNCALL	_main,_MusicDisplay
  1660                           	FNCALL	_main,_MusicPlay
  1661                           	FNCALL	_main,_PwmInit
  1662                           	FNCALL	_main,_check_Alarm
  1663                           	FNCALL	_main,_keyscan
  1664                           	FNCALL	_keyscan,_check_K1
  1665                           	FNCALL	_keyscan,_check_K2
  1666                           	FNCALL	_keyscan,_check_K3
  1667                           	FNCALL	_keyscan,_check_K4
  1668                           	FNCALL	_keyscan,_check_K5
  1669                           	FNCALL	_keyscan,_check_K6
  1670                           	FNCALL	_check_K6,_delay_ms
  1671                           	FNCALL	_check_K5,_delay_ms
  1672                           	FNCALL	_check_K4,_delay_ms
  1673                           	FNCALL	_check_K3,_delay_ms
  1674                           	FNCALL	_check_K2,_delay_ms
  1675                           	FNCALL	_check_K1,_delay_ms
  1676                           	FNCALL	_check_Alarm,_beep_ms
  1677                           	FNCALL	_beep_ms,_PwmTone
  1678                           	FNCALL	_beep_ms,_delay_ms
  1679                           	FNCALL	_MusicPlay,_PwmTone
  1680                           	FNCALL	_MusicPlay,_SixteenNoteDelay
  1681                           	FNCALL	_SixteenNoteDelay,_delay_ms
  1682                           	FNCALL	_MusicDisplay,_LCD_write_char
  1683                           	FNCALL	_MusicDisplay,_LCD_write_string
  1684                           	FNCALL	_ModeSwitch,_AlarmDataDisplay
  1685                           	FNCALL	_ModeSwitch,_ClearScreenOnce
  1686                           	FNCALL	_ModeSwitch,_Ds1302ReadTimeBCD
  1687                           	FNCALL	_ModeSwitch,_Ds1302WriteTime
  1688                           	FNCALL	_ModeSwitch,_LCD_write_string
  1689                           	FNCALL	_ModeSwitch,_TimeDataDisplay
  1690                           	FNCALL	_ModeSwitch,_Trans_Alarm_bit
  1691                           	FNCALL	_ModeSwitch,_Trans_Time_bit
  1692                           	FNCALL	_ModeSwitch,_Y_position
  1693                           	FNCALL	_ModeSwitch,_delay_ms
  1694                           	FNCALL	_TimeDataDisplay,_LCD_write_char
  1695                           	FNCALL	_TimeDataDisplay,_LCD_write_string
  1696                           	FNCALL	_Ds1302WriteTime,_Ds1302Write
  1697                           	FNCALL	_Ds1302ReadTimeBCD,_Ds1302Read
  1698                           	FNCALL	_ClearScreenOnce,_FrameworkDisplay
  1699                           	FNCALL	_ClearScreenOnce,_LCD_en_command
  1700                           	FNCALL	_ClearScreenOnce,_LCD_write_string
  1701                           	FNCALL	_ClearScreenOnce,_aFrameworkDisplay
  1702                           	FNCALL	_aFrameworkDisplay,_LCD_write_char
  1703                           	FNCALL	_LCD_write_string,_LCD_Busy
  1704                           	FNCALL	_LCD_write_string,_LCD_en_dat
  1705                           	FNCALL	_LCD_write_string,_LCD_set_xy
  1706                           	FNCALL	_LCD_Busy,_LCD_Read_dat
  1707                           	FNCALL	_FrameworkDisplay,_LCD_write_char
  1708                           	FNCALL	_AlarmDataDisplay,_LCD_write_char
  1709                           	FNCALL	_LCD_write_char,_LCD_en_dat
  1710                           	FNCALL	_LCD_write_char,_LCD_set_xy
  1711                           	FNCALL	_LCD_set_xy,_LCD_en_command
  1712                           	FNCALL	_LCD_en_dat,_delay_us
  1713                           	FNCALL	_LCD_init,_LCD_en_command
  1714                           	FNCALL	_Initialize_UART,_UART_send_string
  1715                           	FNCALL	_UART_send_string,_UART_send_char
  1716                           	FNCALL	_InitScrn,_LCD_en_command
  1717                           	FNCALL	_InitScrn,_delay_ms
  1718                           	FNCALL	_LCD_en_command,_delay_ms
  1719                           	FNCALL	_LCD_en_command,_delay_us
  1720                           	FNCALL	_Ds1302Init,_Ds1302Write
  1721                           	FNCALL	_Ds1302Init,_Trans_Alarm_bit
  1722                           	FNROOT	_main
  1723                           	FNCALL	intlevel1,_ISR
  1724                           	global	intlevel1
  1725                           	FNROOT	intlevel1
  1726                           	global	_LcdTimeAddr
  1727                           	global	_SET_TIME
  1728                           	global	_Alarm_TIME
  1729                           	global	_week
  1730                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1731                           global __pidataBANK0
  1732                           __pidataBANK0:
  1733  139B                     	file	"DS1302.c"
  1734                           	line	20
  1735                           
  1736                           ;initializer for _LcdTimeAddr
  1737                           	retlw	03h
  1738  139B  3403               	retlw	04h
  1739  139C  3404               	retlw	06h
  1740  139D  3406               	retlw	07h
  1741  139E  3407               	retlw	09h
  1742  139F  3409               	retlw	0Ah
  1743  13A0  340A               	retlw	0Eh
  1744  13A1  340E               	retlw	06h
  1745  13A2  3406               	retlw	07h
  1746  13A3  3407               	retlw	09h
  1747  13A4  3409               	retlw	0Ah
  1748  13A5  340A               	retlw	0Ch
  1749  13A6  340C               	retlw	0Dh
  1750  13A7  340D               	line	14
  1751                           
  1752                           ;initializer for _SET_TIME
  1753                           	retlw	055h
  1754  13A8  3455               	retlw	059h
  1755  13A9  3459               	retlw	023h
  1756  13AA  3423               	retlw	015h
  1757  13AB  3415               	retlw	03h
  1758  13AC  3403               	retlw	07h
  1759  13AD  3407               	retlw	020h
  1760  13AE  3420               	file	"DS1302.h"
  1761                           	line	29
  1762                           
  1763                           ;initializer for _Alarm_TIME
  1764                           	retlw	low(0)
  1765  13AF  3400               	retlw	01h
  1766  13B0  3401               	retlw	low(0)
  1767  13B1  3400               	retlw	low(0)
  1768  13B2  3400               	retlw	low(0)
  1769  13B3  3400               	retlw	low(0)
  1770  13B4  3400               psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1771                           global __pidataBANK1
  1772                           __pidataBANK1:
  1773  12F3                     	file	"DS1302.c"
  1774                           	line	8
  1775                           
  1776                           ;initializer for _week
  1777                           	retlw	low(((STR_7)|8000h))
  1778  12F3  344E               	retlw	high(((STR_7)|8000h))
  1779  12F4  348B               
  1780                           	retlw	low(((STR_8)|8000h))
  1781  12F5  3444               	retlw	high(((STR_8)|8000h))
  1782  12F6  348B               
  1783                           	retlw	low(((STR_9)|8000h))
  1784  12F7  343F               	retlw	high(((STR_9)|8000h))
  1785  12F8  348B               
  1786                           	retlw	low(((STR_10)|8000h))
  1787  12F9  345D               	retlw	high(((STR_10)|8000h))
  1788  12FA  348B               
  1789                           	retlw	low(((STR_11)|8000h))
  1790  12FB  3449               	retlw	high(((STR_11)|8000h))
  1791  12FC  348B               
  1792                           	retlw	low(((STR_12)|8000h))
  1793  12FD  3458               	retlw	high(((STR_12)|8000h))
  1794  12FE  348B               
  1795                           	retlw	low(((STR_13)|8000h))
  1796  12FF  3453               	retlw	high(((STR_13)|8000h))
  1797  1300  348B               
  1798                           	global	_SkyCity
  1799                           psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
  1800                           global __pstringtext
  1801                           __pstringtext:
  1802  0800                     stringtab:
  1803  0800                     	global    __stringtab
  1804                           __stringtab:
  1805  0800                     ;	String table - string pointers are 2 bytes each
  1806                           	btfsc	(btemp+1),7
  1807  0800  1BFF               	ljmp	stringcode
  1808  0801  280A               	bcf	status,7
  1809  0802  1383               	btfsc	(btemp+1),0
  1810  0803  187F               	bsf	status,7
  1811  0804  1783               	movf	indf,w
  1812  0805  0800               	incf fsr
  1813  0806  0A84               skipnz
  1814  0807  1903               incf btemp+1
  1815  0808  0AFF               	return
  1816  0809  0008               stringcode:
  1817  080A                     	movf btemp+1,w
  1818  080A  087F               andlw 7Fh
  1819  080B  397F               movwf	pclath
  1820  080C  008A               	movf	fsr,w
  1821  080D  0804               incf fsr
  1822  080E  0A84               skipnz
  1823  080F  1903               incf btemp+1
  1824  0810  0AFF               	movwf pc
  1825  0811  0082               	global __stringbase
  1826                           __stringbase:
  1827  0812                     	global    __end_of__stringtab
  1828                           __end_of__stringtab:
  1829  0812                     	file	"SONG.c"
  1830                           	line	61
  1831                           _SkyCity:
  1832  0812                     	retlw	low(0)
  1833  0812  3400               	retlw	02h
  1834  0813  3402               	retlw	08Dh
  1835  0814  348D               	retlw	02h
  1836  0815  3402               	retlw	07Dh
  1837  0816  347D               	retlw	02h
  1838  0817  3402               	retlw	076h
  1839  0818  3476               	retlw	06h
  1840  0819  3406               	retlw	07Dh
  1841  081A  347D               	retlw	02h
  1842  081B  3402               	retlw	076h
  1843  081C  3476               	retlw	04h
  1844  081D  3404               	retlw	05Eh
  1845  081E  345E               	retlw	04h
  1846  081F  3404               	retlw	07Dh
  1847  0820  347D               	retlw	04h
  1848  0821  3404               	retlw	07Dh
  1849  0822  347D               	retlw	04h
  1850  0823  3404               	retlw	07Dh
  1851  0824  347D               	retlw	04h
  1852  0825  3404               	retlw	0BCh
  1853  0826  34BC               	retlw	04h
  1854  0827  3404               	retlw	08Dh
  1855  0828  348D               	retlw	06h
  1856  0829  3406               	retlw	09Eh
  1857  082A  349E               	retlw	02h
  1858  082B  3402               	retlw	08Dh
  1859  082C  348D               	retlw	04h
  1860  082D  3404               	retlw	076h
  1861  082E  3476               	retlw	04h
  1862  082F  3404               	retlw	09Eh
  1863  0830  349E               	retlw	04h
  1864  0831  3404               	retlw	09Eh
  1865  0832  349E               	retlw	04h
  1866  0833  3404               	retlw	09Eh
  1867  0834  349E               	retlw	04h
  1868  0835  3404               	retlw	0BCh
  1869  0836  34BC               	retlw	04h
  1870  0837  3404               	retlw	0B2h
  1871  0838  34B2               	retlw	06h
  1872  0839  3406               	retlw	0BCh
  1873  083A  34BC               	retlw	02h
  1874  083B  3402               	retlw	0B2h
  1875  083C  34B2               	retlw	02h
  1876  083D  3402               	retlw	076h
  1877  083E  3476               	retlw	06h
  1878  083F  3406               	retlw	0BCh
  1879  0840  34BC               	retlw	04h
  1880  0841  3404               	retlw	0BCh
  1881  0842  34BC               	retlw	04h
  1882  0843  3404               	retlw	0BCh
  1883  0844  34BC               	retlw	04h
  1884  0845  3404               	retlw	076h
  1885  0846  3476               	retlw	04h
  1886  0847  3404               	retlw	07Dh
  1887  0848  347D               	retlw	06h
  1888  0849  3406               	retlw	0A7h
  1889  084A  34A7               	retlw	02h
  1890  084B  3402               	retlw	0A7h
  1891  084C  34A7               	retlw	04h
  1892  084D  3404               	retlw	07Dh
  1893  084E  347D               	retlw	04h
  1894  084F  3404               	retlw	07Dh
  1895  0850  347D               	retlw	04h
  1896  0851  3404               	retlw	07Dh
  1897  0852  347D               	retlw	04h
  1898  0853  3404               	retlw	low(0)
  1899  0854  3400               	retlw	04h
  1900  0855  3404               	retlw	08Dh
  1901  0856  348D               	retlw	02h
  1902  0857  3402               	retlw	07Dh
  1903  0858  347D               	retlw	02h
  1904  0859  3402               	retlw	076h
  1905  085A  3476               	retlw	06h
  1906  085B  3406               	retlw	07Dh
  1907  085C  347D               	retlw	02h
  1908  085D  3402               	retlw	076h
  1909  085E  3476               	retlw	04h
  1910  085F  3404               	retlw	05Eh
  1911  0860  345E               	retlw	04h
  1912  0861  3404               	retlw	07Dh
  1913  0862  347D               	retlw	04h
  1914  0863  3404               	retlw	07Dh
  1915  0864  347D               	retlw	04h
  1916  0865  3404               	retlw	07Dh
  1917  0866  347D               	retlw	04h
  1918  0867  3404               	retlw	0BCh
  1919  0868  34BC               	retlw	02h
  1920  0869  3402               	retlw	0BCh
  1921  086A  34BC               	retlw	02h
  1922  086B  3402               	retlw	08Dh
  1923  086C  348D               	retlw	06h
  1924  086D  3406               	retlw	09Eh
  1925  086E  349E               	retlw	02h
  1926  086F  3402               	retlw	08Dh
  1927  0870  348D               	retlw	04h
  1928  0871  3404               	retlw	076h
  1929  0872  3476               	retlw	04h
  1930  0873  3404               	retlw	09Eh
  1931  0874  349E               	retlw	04h
  1932  0875  3404               	retlw	09Eh
  1933  0876  349E               	retlw	04h
  1934  0877  3404               	retlw	09Eh
  1935  0878  349E               	retlw	04h
  1936  0879  3404               	retlw	0BCh
  1937  087A  34BC               	retlw	04h
  1938  087B  3404               	retlw	0B2h
  1939  087C  34B2               	retlw	04h
  1940  087D  3404               	retlw	076h
  1941  087E  3476               	retlw	02h
  1942  087F  3402               	retlw	07Dh
  1943  0880  347D               	retlw	02h
  1944  0881  3402               	retlw	07Dh
  1945  0882  347D               	retlw	04h
  1946  0883  3404               	retlw	076h
  1947  0884  3476               	retlw	04h
  1948  0885  3404               	retlw	069h
  1949  0886  3469               	retlw	04h
  1950  0887  3404               	retlw	05Eh
  1951  0888  345E               	retlw	02h
  1952  0889  3402               	retlw	076h
  1953  088A  3476               	retlw	04h
  1954  088B  3404               	retlw	076h
  1955  088C  3476               	retlw	04h
  1956  088D  3404               	retlw	low(0)
  1957  088E  3400               	retlw	02h
  1958  088F  3402               	retlw	076h
  1959  0890  3476               	retlw	02h
  1960  0891  3402               	retlw	07Dh
  1961  0892  347D               	retlw	02h
  1962  0893  3402               	retlw	08Dh
  1963  0894  348D               	retlw	04h
  1964  0895  3404               	retlw	07Dh
  1965  0896  347D               	retlw	04h
  1966  0897  3404               	retlw	095h
  1967  0898  3495               	retlw	04h
  1968  0899  3404               	retlw	08Dh
  1969  089A  348D               	retlw	04h
  1970  089B  3404               	retlw	08Dh
  1971  089C  348D               	retlw	04h
  1972  089D  3404               	retlw	low(0)
  1973  089E  3400               	retlw	04h
  1974  089F  3404               	retlw	076h
  1975  08A0  3476               	retlw	02h
  1976  08A1  3402               	retlw	069h
  1977  08A2  3469               	retlw	02h
  1978  08A3  3402               	retlw	05Eh
  1979  08A4  345E               	retlw	05h
  1980  08A5  3405               	retlw	069h
  1981  08A6  3469               	retlw	03h
  1982  08A7  3403               	retlw	05Eh
  1983  08A8  345E               	retlw	03h
  1984  08A9  3403               	retlw	058h
  1985  08AA  3458               	retlw	03h
  1986  08AB  3403               	retlw	04Fh
  1987  08AC  344F               	retlw	02h
  1988  08AD  3402               	retlw	069h
  1989  08AE  3469               	retlw	04h
  1990  08AF  3404               	retlw	069h
  1991  08B0  3469               	retlw	04h
  1992  08B1  3404               	retlw	069h
  1993  08B2  3469               	retlw	04h
  1994  08B3  3404               	retlw	09Eh
  1995  08B4  349E               	retlw	04h
  1996  08B5  3404               	retlw	069h
  1997  08B6  3469               	retlw	01h
  1998  08B7  3401               	retlw	076h
  1999  08B8  3476               	retlw	01h
  2000  08B9  3401               	retlw	07Dh
  2001  08BA  347D               	retlw	01h
  2002  08BB  3401               	retlw	076h
  2003  08BC  3476               	retlw	01h
  2004  08BD  3401               	retlw	076h
  2005  08BE  3476               	retlw	04h
  2006  08BF  3404               	retlw	076h
  2007  08C0  3476               	retlw	02h
  2008  08C1  3402               	retlw	069h
  2009  08C2  3469               	retlw	04h
  2010  08C3  3404               	retlw	05Eh
  2011  08C4  345E               	retlw	02h
  2012  08C5  3402               	retlw	05Eh
  2013  08C6  345E               	retlw	04h
  2014  08C7  3404               	retlw	05Eh
  2015  08C8  345E               	retlw	04h
  2016  08C9  3404               	retlw	05Eh
  2017  08CA  345E               	retlw	04h
  2018  08CB  3404               	retlw	05Eh
  2019  08CC  345E               	retlw	04h
  2020  08CD  3404               	retlw	08Dh
  2021  08CE  348D               	retlw	02h
  2022  08CF  3402               	retlw	07Dh
  2023  08D0  347D               	retlw	02h
  2024  08D1  3402               	retlw	076h
  2025  08D2  3476               	retlw	04h
  2026  08D3  3404               	retlw	07Dh
  2027  08D4  347D               	retlw	02h
  2028  08D5  3402               	retlw	076h
  2029  08D6  3476               	retlw	02h
  2030  08D7  3402               	retlw	069h
  2031  08D8  3469               	retlw	04h
  2032  08D9  3404               	retlw	076h
  2033  08DA  3476               	retlw	06h
  2034  08DB  3406               	retlw	09Eh
  2035  08DC  349E               	retlw	02h
  2036  08DD  3402               	retlw	09Eh
  2037  08DE  349E               	retlw	04h
  2038  08DF  3404               	retlw	09Eh
  2039  08E0  349E               	retlw	04h
  2040  08E1  3404               	retlw	058h
  2041  08E2  3458               	retlw	04h
  2042  08E3  3404               	retlw	05Eh
  2043  08E4  345E               	retlw	04h
  2044  08E5  3404               	retlw	069h
  2045  08E6  3469               	retlw	04h
  2046  08E7  3404               	retlw	076h
  2047  08E8  3476               	retlw	04h
  2048  08E9  3404               	retlw	05Eh
  2049  08EA  345E               	retlw	04h
  2050  08EB  3404               	retlw	05Eh
  2051  08EC  345E               	retlw	04h
  2052  08ED  3404               	retlw	05Eh
  2053  08EE  345E               	retlw	04h
  2054  08EF  3404               	retlw	08Dh
  2055  08F0  348D               	retlw	02h
  2056  08F1  3402               	retlw	07Dh
  2057  08F2  347D               	retlw	02h
  2058  08F3  3402               	retlw	076h
  2059  08F4  3476               	retlw	06h
  2060  08F5  3406               	retlw	07Dh
  2061  08F6  347D               	retlw	02h
  2062  08F7  3402               	retlw	076h
  2063  08F8  3476               	retlw	04h
  2064  08F9  3404               	retlw	05Eh
  2065  08FA  345E               	retlw	04h
  2066  08FB  3404               	retlw	07Dh
  2067  08FC  347D               	retlw	04h
  2068  08FD  3404               	retlw	07Dh
  2069  08FE  347D               	retlw	04h
  2070  08FF  3404               	retlw	07Dh
  2071  0900  347D               	retlw	04h
  2072  0901  3404               	retlw	0BCh
  2073  0902  34BC               	retlw	04h
  2074  0903  3404               	retlw	08Dh
  2075  0904  348D               	retlw	06h
  2076  0905  3406               	retlw	09Eh
  2077  0906  349E               	retlw	02h
  2078  0907  3402               	retlw	08Dh
  2079  0908  348D               	retlw	04h
  2080  0909  3404               	retlw	076h
  2081  090A  3476               	retlw	04h
  2082  090B  3404               	retlw	09Eh
  2083  090C  349E               	retlw	04h
  2084  090D  3404               	retlw	09Eh
  2085  090E  349E               	retlw	04h
  2086  090F  3404               	retlw	09Eh
  2087  0910  349E               	retlw	04h
  2088  0911  3404               	retlw	0BCh
  2089  0912  34BC               	retlw	04h
  2090  0913  3404               	retlw	0B2h
  2091  0914  34B2               	retlw	04h
  2092  0915  3404               	retlw	076h
  2093  0916  3476               	retlw	02h
  2094  0917  3402               	retlw	07Dh
  2095  0918  347D               	retlw	02h
  2096  0919  3402               	retlw	07Dh
  2097  091A  347D               	retlw	04h
  2098  091B  3404               	retlw	076h
  2099  091C  3476               	retlw	04h
  2100  091D  3404               	retlw	069h
  2101  091E  3469               	retlw	04h
  2102  091F  3404               	retlw	05Eh
  2103  0920  345E               	retlw	02h
  2104  0921  3402               	retlw	076h
  2105  0922  3476               	retlw	02h
  2106  0923  3402               	retlw	076h
  2107  0924  3476               	retlw	04h
  2108  0925  3404               	retlw	076h
  2109  0926  3476               	retlw	04h
  2110  0927  3404               	retlw	076h
  2111  0928  3476               	retlw	02h
  2112  0929  3402               	retlw	07Dh
  2113  092A  347D               	retlw	02h
  2114  092B  3402               	retlw	08Dh
  2115  092C  348D               	retlw	04h
  2116  092D  3404               	retlw	07Dh
  2117  092E  347D               	retlw	04h
  2118  092F  3404               	retlw	095h
  2119  0930  3495               	retlw	04h
  2120  0931  3404               	retlw	08Dh
  2121  0932  348D               	retlw	04h
  2122  0933  3404               	retlw	08Dh
  2123  0934  348D               	retlw	04h
  2124  0935  3404               	retlw	08Dh
  2125  0936  348D               	retlw	04h
  2126  0937  3404               	retlw	08Dh
  2127  0938  348D               	retlw	04h
  2128  0939  3404               	retlw	0FFh
  2129  093A  34FF               	global __end_of_SkyCity
  2130                           __end_of_SkyCity:
  2131  093B                     	global	_JingleBell
  2132                           psect	stringtext
  2133                           	file	"SONG.c"
  2134                           	line	51
  2135                           _JingleBell:
  2136  093B                     	retlw	low(0)
  2137  093B  3400               	retlw	02h
  2138  093C  3402               	retlw	09Eh
  2139  093D  349E               	retlw	02h
  2140  093E  3402               	retlw	05Eh
  2141  093F  345E               	retlw	02h
  2142  0940  3402               	retlw	069h
  2143  0941  3469               	retlw	02h
  2144  0942  3402               	retlw	076h
  2145  0943  3476               	retlw	02h
  2146  0944  3402               	retlw	09Eh
  2147  0945  349E               	retlw	04h
  2148  0946  3404               	retlw	low(0)
  2149  0947  3400               	retlw	02h
  2150  0948  3402               	retlw	09Eh
  2151  0949  349E               	retlw	01h
  2152  094A  3401               	retlw	09Eh
  2153  094B  349E               	retlw	01h
  2154  094C  3401               	retlw	09Eh
  2155  094D  349E               	retlw	02h
  2156  094E  3402               	retlw	05Eh
  2157  094F  345E               	retlw	02h
  2158  0950  3402               	retlw	069h
  2159  0951  3469               	retlw	02h
  2160  0952  3402               	retlw	076h
  2161  0953  3476               	retlw	02h
  2162  0954  3402               	retlw	08Dh
  2163  0955  348D               	retlw	04h
  2164  0956  3404               	retlw	low(0)
  2165  0957  3400               	retlw	04h
  2166  0958  3404               	retlw	08Dh
  2167  0959  348D               	retlw	02h
  2168  095A  3402               	retlw	058h
  2169  095B  3458               	retlw	02h
  2170  095C  3402               	retlw	05Eh
  2171  095D  345E               	retlw	02h
  2172  095E  3402               	retlw	069h
  2173  095F  3469               	retlw	02h
  2174  0960  3402               	retlw	07Dh
  2175  0961  347D               	retlw	04h
  2176  0962  3404               	retlw	low(0)
  2177  0963  3400               	retlw	04h
  2178  0964  3404               	retlw	04Fh
  2179  0965  344F               	retlw	02h
  2180  0966  3402               	retlw	04Fh
  2181  0967  344F               	retlw	02h
  2182  0968  3402               	retlw	058h
  2183  0969  3458               	retlw	02h
  2184  096A  3402               	retlw	069h
  2185  096B  3469               	retlw	02h
  2186  096C  3402               	retlw	05Eh
  2187  096D  345E               	retlw	04h
  2188  096E  3404               	retlw	076h
  2189  096F  3476               	retlw	02h
  2190  0970  3402               	retlw	low(0)
  2191  0971  3400               	retlw	02h
  2192  0972  3402               	retlw	09Eh
  2193  0973  349E               	retlw	02h
  2194  0974  3402               	retlw	05Eh
  2195  0975  345E               	retlw	02h
  2196  0976  3402               	retlw	069h
  2197  0977  3469               	retlw	02h
  2198  0978  3402               	retlw	076h
  2199  0979  3476               	retlw	02h
  2200  097A  3402               	retlw	09Eh
  2201  097B  349E               	retlw	04h
  2202  097C  3404               	retlw	low(0)
  2203  097D  3400               	retlw	04h
  2204  097E  3404               	retlw	09Eh
  2205  097F  349E               	retlw	02h
  2206  0980  3402               	retlw	05Eh
  2207  0981  345E               	retlw	02h
  2208  0982  3402               	retlw	069h
  2209  0983  3469               	retlw	02h
  2210  0984  3402               	retlw	076h
  2211  0985  3476               	retlw	02h
  2212  0986  3402               	retlw	09Eh
  2213  0987  349E               	retlw	04h
  2214  0988  3404               	retlw	low(0)
  2215  0989  3400               	retlw	02h
  2216  098A  3402               	retlw	09Eh
  2217  098B  349E               	retlw	02h
  2218  098C  3402               	retlw	08Dh
  2219  098D  348D               	retlw	02h
  2220  098E  3402               	retlw	058h
  2221  098F  3458               	retlw	02h
  2222  0990  3402               	retlw	05Eh
  2223  0991  345E               	retlw	02h
  2224  0992  3402               	retlw	069h
  2225  0993  3469               	retlw	02h
  2226  0994  3402               	retlw	04Fh
  2227  0995  344F               	retlw	02h
  2228  0996  3402               	retlw	04Fh
  2229  0997  344F               	retlw	02h
  2230  0998  3402               	retlw	04Fh
  2231  0999  344F               	retlw	02h
  2232  099A  3402               	retlw	04Fh
  2233  099B  344F               	retlw	02h
  2234  099C  3402               	retlw	046h
  2235  099D  3446               	retlw	02h
  2236  099E  3402               	retlw	04Fh
  2237  099F  344F               	retlw	02h
  2238  09A0  3402               	retlw	058h
  2239  09A1  3458               	retlw	02h
  2240  09A2  3402               	retlw	069h
  2241  09A3  3469               	retlw	02h
  2242  09A4  3402               	retlw	076h
  2243  09A5  3476               	retlw	06h
  2244  09A6  3406               	retlw	low(0)
  2245  09A7  3400               	retlw	02h
  2246  09A8  3402               	retlw	05Eh
  2247  09A9  345E               	retlw	02h
  2248  09AA  3402               	retlw	05Eh
  2249  09AB  345E               	retlw	02h
  2250  09AC  3402               	retlw	05Eh
  2251  09AD  345E               	retlw	04h
  2252  09AE  3404               	retlw	05Eh
  2253  09AF  345E               	retlw	02h
  2254  09B0  3402               	retlw	05Eh
  2255  09B1  345E               	retlw	02h
  2256  09B2  3402               	retlw	05Eh
  2257  09B3  345E               	retlw	04h
  2258  09B4  3404               	retlw	05Eh
  2259  09B5  345E               	retlw	02h
  2260  09B6  3402               	retlw	04Fh
  2261  09B7  344F               	retlw	02h
  2262  09B8  3402               	retlw	076h
  2263  09B9  3476               	retlw	03h
  2264  09BA  3403               	retlw	069h
  2265  09BB  3469               	retlw	01h
  2266  09BC  3401               	retlw	05Eh
  2267  09BD  345E               	retlw	06h
  2268  09BE  3406               	retlw	low(0)
  2269  09BF  3400               	retlw	02h
  2270  09C0  3402               	retlw	058h
  2271  09C1  3458               	retlw	02h
  2272  09C2  3402               	retlw	058h
  2273  09C3  3458               	retlw	02h
  2274  09C4  3402               	retlw	058h
  2275  09C5  3458               	retlw	03h
  2276  09C6  3403               	retlw	058h
  2277  09C7  3458               	retlw	01h
  2278  09C8  3401               	retlw	058h
  2279  09C9  3458               	retlw	02h
  2280  09CA  3402               	retlw	05Eh
  2281  09CB  345E               	retlw	02h
  2282  09CC  3402               	retlw	05Eh
  2283  09CD  345E               	retlw	02h
  2284  09CE  3402               	retlw	05Eh
  2285  09CF  345E               	retlw	01h
  2286  09D0  3401               	retlw	05Eh
  2287  09D1  345E               	retlw	01h
  2288  09D2  3401               	retlw	05Eh
  2289  09D3  345E               	retlw	02h
  2290  09D4  3402               	retlw	069h
  2291  09D5  3469               	retlw	02h
  2292  09D6  3402               	retlw	069h
  2293  09D7  3469               	retlw	02h
  2294  09D8  3402               	retlw	076h
  2295  09D9  3476               	retlw	02h
  2296  09DA  3402               	retlw	069h
  2297  09DB  3469               	retlw	04h
  2298  09DC  3404               	retlw	04Fh
  2299  09DD  344F               	retlw	04h
  2300  09DE  3404               	retlw	05Eh
  2301  09DF  345E               	retlw	02h
  2302  09E0  3402               	retlw	05Eh
  2303  09E1  345E               	retlw	02h
  2304  09E2  3402               	retlw	05Eh
  2305  09E3  345E               	retlw	04h
  2306  09E4  3404               	retlw	05Eh
  2307  09E5  345E               	retlw	02h
  2308  09E6  3402               	retlw	05Eh
  2309  09E7  345E               	retlw	02h
  2310  09E8  3402               	retlw	05Eh
  2311  09E9  345E               	retlw	04h
  2312  09EA  3404               	retlw	05Eh
  2313  09EB  345E               	retlw	02h
  2314  09EC  3402               	retlw	04Fh
  2315  09ED  344F               	retlw	02h
  2316  09EE  3402               	retlw	076h
  2317  09EF  3476               	retlw	03h
  2318  09F0  3403               	retlw	069h
  2319  09F1  3469               	retlw	01h
  2320  09F2  3401               	retlw	05Eh
  2321  09F3  345E               	retlw	06h
  2322  09F4  3406               	retlw	low(0)
  2323  09F5  3400               	retlw	02h
  2324  09F6  3402               	retlw	058h
  2325  09F7  3458               	retlw	02h
  2326  09F8  3402               	retlw	058h
  2327  09F9  3458               	retlw	02h
  2328  09FA  3402               	retlw	058h
  2329  09FB  3458               	retlw	03h
  2330  09FC  3403               	retlw	058h
  2331  09FD  3458               	retlw	01h
  2332  09FE  3401               	retlw	058h
  2333  09FF  3458               	retlw	02h
  2334  0A00  3402               	retlw	05Eh
  2335  0A01  345E               	retlw	02h
  2336  0A02  3402               	retlw	05Eh
  2337  0A03  345E               	retlw	02h
  2338  0A04  3402               	retlw	05Eh
  2339  0A05  345E               	retlw	01h
  2340  0A06  3401               	retlw	05Eh
  2341  0A07  345E               	retlw	01h
  2342  0A08  3401               	retlw	04Fh
  2343  0A09  344F               	retlw	02h
  2344  0A0A  3402               	retlw	04Fh
  2345  0A0B  344F               	retlw	02h
  2346  0A0C  3402               	retlw	058h
  2347  0A0D  3458               	retlw	02h
  2348  0A0E  3402               	retlw	069h
  2349  0A0F  3469               	retlw	02h
  2350  0A10  3402               	retlw	076h
  2351  0A11  3476               	retlw	06h
  2352  0A12  3406               	retlw	low(0)
  2353  0A13  3400               	retlw	02h
  2354  0A14  3402               	retlw	0FFh
  2355  0A15  34FF               	global __end_of_JingleBell
  2356                           __end_of_JingleBell:
  2357  0A16                     	global	_LittleLamb
  2358                           psect	stringtext
  2359                           	file	"SONG.c"
  2360                           	line	45
  2361                           _LittleLamb:
  2362  0A16                     	retlw	low(0)
  2363  0A16  3400               	retlw	02h
  2364  0A17  3402               	retlw	05Eh
  2365  0A18  345E               	retlw	03h
  2366  0A19  3403               	retlw	069h
  2367  0A1A  3469               	retlw	01h
  2368  0A1B  3401               	retlw	076h
  2369  0A1C  3476               	retlw	02h
  2370  0A1D  3402               	retlw	069h
  2371  0A1E  3469               	retlw	02h
  2372  0A1F  3402               	retlw	05Eh
  2373  0A20  345E               	retlw	02h
  2374  0A21  3402               	retlw	05Eh
  2375  0A22  345E               	retlw	02h
  2376  0A23  3402               	retlw	05Eh
  2377  0A24  345E               	retlw	02h
  2378  0A25  3402               	retlw	05Eh
  2379  0A26  345E               	retlw	02h
  2380  0A27  3402               	retlw	069h
  2381  0A28  3469               	retlw	02h
  2382  0A29  3402               	retlw	069h
  2383  0A2A  3469               	retlw	02h
  2384  0A2B  3402               	retlw	069h
  2385  0A2C  3469               	retlw	02h
  2386  0A2D  3402               	retlw	069h
  2387  0A2E  3469               	retlw	02h
  2388  0A2F  3402               	retlw	05Eh
  2389  0A30  345E               	retlw	02h
  2390  0A31  3402               	retlw	04Fh
  2391  0A32  344F               	retlw	02h
  2392  0A33  3402               	retlw	04Fh
  2393  0A34  344F               	retlw	02h
  2394  0A35  3402               	retlw	04Fh
  2395  0A36  344F               	retlw	02h
  2396  0A37  3402               	retlw	05Eh
  2397  0A38  345E               	retlw	03h
  2398  0A39  3403               	retlw	069h
  2399  0A3A  3469               	retlw	01h
  2400  0A3B  3401               	retlw	076h
  2401  0A3C  3476               	retlw	02h
  2402  0A3D  3402               	retlw	069h
  2403  0A3E  3469               	retlw	02h
  2404  0A3F  3402               	retlw	05Eh
  2405  0A40  345E               	retlw	02h
  2406  0A41  3402               	retlw	05Eh
  2407  0A42  345E               	retlw	02h
  2408  0A43  3402               	retlw	05Eh
  2409  0A44  345E               	retlw	02h
  2410  0A45  3402               	retlw	076h
  2411  0A46  3476               	retlw	02h
  2412  0A47  3402               	retlw	069h
  2413  0A48  3469               	retlw	02h
  2414  0A49  3402               	retlw	069h
  2415  0A4A  3469               	retlw	02h
  2416  0A4B  3402               	retlw	05Eh
  2417  0A4C  345E               	retlw	02h
  2418  0A4D  3402               	retlw	069h
  2419  0A4E  3469               	retlw	02h
  2420  0A4F  3402               	retlw	076h
  2421  0A50  3476               	retlw	02h
  2422  0A51  3402               	retlw	076h
  2423  0A52  3476               	retlw	02h
  2424  0A53  3402               	retlw	076h
  2425  0A54  3476               	retlw	02h
  2426  0A55  3402               	retlw	076h
  2427  0A56  3476               	retlw	02h
  2428  0A57  3402               	retlw	03Eh
  2429  0A58  343E               	retlw	03h
  2430  0A59  3403               	retlw	046h
  2431  0A5A  3446               	retlw	01h
  2432  0A5B  3401               	retlw	04Fh
  2433  0A5C  344F               	retlw	02h
  2434  0A5D  3402               	retlw	046h
  2435  0A5E  3446               	retlw	02h
  2436  0A5F  3402               	retlw	03Eh
  2437  0A60  343E               	retlw	02h
  2438  0A61  3402               	retlw	03Eh
  2439  0A62  343E               	retlw	02h
  2440  0A63  3402               	retlw	03Eh
  2441  0A64  343E               	retlw	02h
  2442  0A65  3402               	retlw	03Eh
  2443  0A66  343E               	retlw	02h
  2444  0A67  3402               	retlw	04Fh
  2445  0A68  344F               	retlw	02h
  2446  0A69  3402               	retlw	04Fh
  2447  0A6A  344F               	retlw	02h
  2448  0A6B  3402               	retlw	04Fh
  2449  0A6C  344F               	retlw	02h
  2450  0A6D  3402               	retlw	04Fh
  2451  0A6E  344F               	retlw	02h
  2452  0A6F  3402               	retlw	03Eh
  2453  0A70  343E               	retlw	02h
  2454  0A71  3402               	retlw	034h
  2455  0A72  3434               	retlw	02h
  2456  0A73  3402               	retlw	03Eh
  2457  0A74  343E               	retlw	02h
  2458  0A75  3402               	retlw	03Eh
  2459  0A76  343E               	retlw	02h
  2460  0A77  3402               	retlw	03Eh
  2461  0A78  343E               	retlw	03h
  2462  0A79  3403               	retlw	046h
  2463  0A7A  3446               	retlw	01h
  2464  0A7B  3401               	retlw	04Fh
  2465  0A7C  344F               	retlw	02h
  2466  0A7D  3402               	retlw	046h
  2467  0A7E  3446               	retlw	02h
  2468  0A7F  3402               	retlw	03Eh
  2469  0A80  343E               	retlw	02h
  2470  0A81  3402               	retlw	03Eh
  2471  0A82  343E               	retlw	02h
  2472  0A83  3402               	retlw	03Eh
  2473  0A84  343E               	retlw	02h
  2474  0A85  3402               	retlw	04Fh
  2475  0A86  344F               	retlw	02h
  2476  0A87  3402               	retlw	046h
  2477  0A88  3446               	retlw	02h
  2478  0A89  3402               	retlw	046h
  2479  0A8A  3446               	retlw	02h
  2480  0A8B  3402               	retlw	03Eh
  2481  0A8C  343E               	retlw	02h
  2482  0A8D  3402               	retlw	046h
  2483  0A8E  3446               	retlw	02h
  2484  0A8F  3402               	retlw	04Fh
  2485  0A90  344F               	retlw	02h
  2486  0A91  3402               	retlw	04Fh
  2487  0A92  344F               	retlw	02h
  2488  0A93  3402               	retlw	04Fh
  2489  0A94  344F               	retlw	02h
  2490  0A95  3402               	retlw	04Fh
  2491  0A96  344F               	retlw	02h
  2492  0A97  3402               	retlw	0FFh
  2493  0A98  34FF               	global __end_of_LittleLamb
  2494                           __end_of_LittleLamb:
  2495  0A99                     	global	_LittleStar
  2496                           psect	stringtext
  2497                           	file	"SONG.c"
  2498                           	line	41
  2499                           _LittleStar:
  2500  0A99                     	retlw	low(0)
  2501  0A99  3400               	retlw	02h
  2502  0A9A  3402               	retlw	076h
  2503  0A9B  3476               	retlw	02h
  2504  0A9C  3402               	retlw	076h
  2505  0A9D  3476               	retlw	02h
  2506  0A9E  3402               	retlw	04Fh
  2507  0A9F  344F               	retlw	02h
  2508  0AA0  3402               	retlw	04Fh
  2509  0AA1  344F               	retlw	02h
  2510  0AA2  3402               	retlw	046h
  2511  0AA3  3446               	retlw	02h
  2512  0AA4  3402               	retlw	046h
  2513  0AA5  3446               	retlw	02h
  2514  0AA6  3402               	retlw	04Fh
  2515  0AA7  344F               	retlw	04h
  2516  0AA8  3404               	retlw	058h
  2517  0AA9  3458               	retlw	02h
  2518  0AAA  3402               	retlw	058h
  2519  0AAB  3458               	retlw	02h
  2520  0AAC  3402               	retlw	05Eh
  2521  0AAD  345E               	retlw	02h
  2522  0AAE  3402               	retlw	05Eh
  2523  0AAF  345E               	retlw	02h
  2524  0AB0  3402               	retlw	069h
  2525  0AB1  3469               	retlw	02h
  2526  0AB2  3402               	retlw	069h
  2527  0AB3  3469               	retlw	02h
  2528  0AB4  3402               	retlw	076h
  2529  0AB5  3476               	retlw	04h
  2530  0AB6  3404               	retlw	0FFh
  2531  0AB7  34FF               	global __end_of_LittleStar
  2532                           __end_of_LittleStar:
  2533  0AB8                     	global	_SongName
  2534                           psect	stringtext
  2535                           	file	"main.c"
  2536                           	line	35
  2537                           _SongName:
  2538  0AB8                     	retlw	low(((STR_1)|8000h))
  2539  0AB8  3420               	retlw	high(((STR_1)|8000h))
  2540  0AB9  348B               	retlw	low highword(((STR_1)|8000h))
  2541  0ABA  3400               	retlw	high highword(((STR_1)|8000h))
  2542  0ABB  3400               
  2543                           	retlw	low(((STR_2)|8000h))
  2544  0ABC  340A               	retlw	high(((STR_2)|8000h))
  2545  0ABD  348B               	retlw	low highword(((STR_2)|8000h))
  2546  0ABE  3400               	retlw	high highword(((STR_2)|8000h))
  2547  0ABF  3400               
  2548                           	retlw	low(((STR_3)|8000h))
  2549  0AC0  3415               	retlw	high(((STR_3)|8000h))
  2550  0AC1  348B               	retlw	low highword(((STR_3)|8000h))
  2551  0AC2  3400               	retlw	high highword(((STR_3)|8000h))
  2552  0AC3  3400               
  2553                           	retlw	low(((STR_4)|8000h))
  2554  0AC4  342B               	retlw	high(((STR_4)|8000h))
  2555  0AC5  348B               	retlw	low highword(((STR_4)|8000h))
  2556  0AC6  3400               	retlw	high highword(((STR_4)|8000h))
  2557  0AC7  3400               
  2558                           	global __end_of_SongName
  2559                           __end_of_SongName:
  2560  0AC8                     	global	_WriteTimeAddr
  2561                           psect	stringtext
  2562                           	file	"DS1302.c"
  2563                           	line	11
  2564                           _WriteTimeAddr:
  2565  0AC8                     	retlw	080h
  2566  0AC8  3480               	retlw	082h
  2567  0AC9  3482               	retlw	084h
  2568  0ACA  3484               	retlw	086h
  2569  0ACB  3486               	retlw	088h
  2570  0ACC  3488               	retlw	08Ah
  2571  0ACD  348A               	retlw	08Ch
  2572  0ACE  348C               	global __end_of_WriteTimeAddr
  2573                           __end_of_WriteTimeAddr:
  2574  0ACF                     	global	_ReadTimeAddr
  2575                           psect	stringtext
  2576                           	file	"DS1302.c"
  2577                           	line	10
  2578                           _ReadTimeAddr:
  2579  0ACF                     	retlw	081h
  2580  0ACF  3481               	retlw	083h
  2581  0AD0  3483               	retlw	085h
  2582  0AD1  3485               	retlw	087h
  2583  0AD2  3487               	retlw	089h
  2584  0AD3  3489               	retlw	08Bh
  2585  0AD4  348B               	retlw	08Dh
  2586  0AD5  348D               	global __end_of_ReadTimeAddr
  2587                           __end_of_ReadTimeAddr:
  2588  0AD6                     	global	_SkyCity
  2589                           	global	_JingleBell
  2590                           	global	_LittleLamb
  2591                           	global	_LittleStar
  2592                           	global	_SongName
  2593                           	global	_WriteTimeAddr
  2594                           	global	_ReadTimeAddr
  2595                           	global	_key2pushflag
  2596                           	global	_clear_flag
  2597                           	global	_isMusicMode
  2598                           	global	_isMusicPlaying
  2599                           	global	_tempTime_Ds1302
  2600                           	global	_MusicPosition
  2601                           	global	_key3pushflag
  2602                           	global	_cursor_addr
  2603                           	global	_Mode
  2604                           	global	_SECOND_unit
  2605                           	global	_SECOND_ten
  2606                           	global	_MINUTE_unit
  2607                           	global	_MINUTE_ten
  2608                           	global	_HOUR_unit
  2609                           	global	_HOUR_ten
  2610                           	global	_WEEK_unit
  2611                           	global	_DAY_unit
  2612                           	global	_DAY_ten
  2613                           	global	_MONTH_unit
  2614                           	global	_MONTH_ten
  2615                           	global	_YEAR_unit
  2616                           	global	_YEAR_ten
  2617                           	global	_aSECOND_unit
  2618                           	global	_aSECOND_ten
  2619                           	global	_aMINUTE_unit
  2620                           	global	_aMINUTE_ten
  2621                           	global	_aHOUR_unit
  2622                           	global	_aHOUR_ten
  2623                           	global	_TempMetre
  2624                           	global	_TempTone
  2625                           	global	_SongNum
  2626                           	global	_CCP1CONbits
  2627                           _CCP1CONbits	set	0x17
  2628  0017                     	global	_CCPR1L
  2629                           _CCPR1L	set	0x15
  2630  0015                     	global	_T2CON
  2631                           _T2CON	set	0x12
  2632  0012                     	global	_TXREG
  2633                           _TXREG	set	0x19
  2634  0019                     	global	_RCSTAbits
  2635                           _RCSTAbits	set	0x18
  2636  0018                     	global	_INTCONbits
  2637                           _INTCONbits	set	0xB
  2638  000B                     	global	_PORTBbits
  2639                           _PORTBbits	set	0x6
  2640  0006                     	global	_PORTD
  2641                           _PORTD	set	0x8
  2642  0008                     	global	_PORTEbits
  2643                           _PORTEbits	set	0x9
  2644  0009                     	global	_PORTCbits
  2645                           _PORTCbits	set	0x7
  2646  0007                     	global	_TXIF
  2647                           _TXIF	set	0x64
  2648  0064                     	global	_INTF
  2649                           _INTF	set	0x59
  2650  0059                     	global	_PR2
  2651                           _PR2	set	0x92
  2652  0092                     	global	_SPBRG
  2653                           _SPBRG	set	0x99
  2654  0099                     	global	_TXSTAbits
  2655                           _TXSTAbits	set	0x98
  2656  0098                     	global	_TRISB
  2657                           _TRISB	set	0x86
  2658  0086                     	global	_OPTION_REGbits
  2659                           _OPTION_REGbits	set	0x81
  2660  0081                     	global	_TRISC
  2661                           _TRISC	set	0x87
  2662  0087                     	global	_TRISCbits
  2663                           _TRISCbits	set	0x87
  2664  0087                     	global	_TRISD
  2665                           _TRISD	set	0x88
  2666  0088                     	global	_TRISE
  2667                           _TRISE	set	0x89
  2668  0089                     	global	_BAUDCTLbits
  2669                           _BAUDCTLbits	set	0x187
  2670  0187                     	global	_ANSELH
  2671                           _ANSELH	set	0x189
  2672  0189                     	global	_ANSEL
  2673                           _ANSEL	set	0x188
  2674  0188                     	
  2675                           STR_21:	
  2676  0AD6                     	retlw	85	;'U'
  2677  0AD6  3455               	retlw	65	;'A'
  2678  0AD7  3441               	retlw	82	;'R'
  2679  0AD8  3452               	retlw	84	;'T'
  2680  0AD9  3454               	retlw	32	;' '
  2681  0ADA  3420               	retlw	77	;'M'
  2682  0ADB  344D               	retlw	111	;'o'
  2683  0ADC  346F               	retlw	100	;'d'
  2684  0ADD  3464               	retlw	117	;'u'
  2685  0ADE  3475               	retlw	108	;'l'
  2686  0ADF  346C               	retlw	101	;'e'
  2687  0AE0  3465               	retlw	32	;' '
  2688  0AE1  3420               	retlw	73	;'I'
  2689  0AE2  3449               	retlw	110	;'n'
  2690  0AE3  346E               	retlw	105	;'i'
  2691  0AE4  3469               	retlw	116	;'t'
  2692  0AE5  3474               	retlw	105	;'i'
  2693  0AE6  3469               	retlw	97	;'a'
  2694  0AE7  3461               	retlw	108	;'l'
  2695  0AE8  346C               	retlw	105	;'i'
  2696  0AE9  3469               	retlw	122	;'z'
  2697  0AEA  347A               	retlw	101	;'e'
  2698  0AEB  3465               	retlw	100	;'d'
  2699  0AEC  3464               	retlw	32	;' '
  2700  0AED  3420               	retlw	97	;'a'
  2701  0AEE  3461               	retlw	110	;'n'
  2702  0AEF  346E               	retlw	100	;'d'
  2703  0AF0  3464               	retlw	32	;' '
  2704  0AF1  3420               	retlw	97	;'a'
  2705  0AF2  3461               	retlw	99	;'c'
  2706  0AF3  3463               	retlw	116	;'t'
  2707  0AF4  3474               	retlw	105	;'i'
  2708  0AF5  3469               	retlw	118	;'v'
  2709  0AF6  3476               	retlw	101	;'e'
  2710  0AF7  3465               	retlw	32	;' '
  2711  0AF8  3420               	retlw	13
  2712  0AF9  340D               	retlw	0
  2713  0AFA  3400               psect	stringtext
  2714                           	
  2715                           STR_17:	
  2716  0AFB                     	retlw	83	;'S'
  2717  0AFB  3453               	retlw	69	;'E'
  2718  0AFC  3445               	retlw	84	;'T'
  2719  0AFD  3454               	retlw	84	;'T'
  2720  0AFE  3454               	retlw	73	;'I'
  2721  0AFF  3449               	retlw	78	;'N'
  2722  0B00  344E               	retlw	71	;'G'
  2723  0B01  3447               	retlw	45	;'-'
  2724  0B02  342D               	retlw	45	;'-'
  2725  0B03  342D               	retlw	65	;'A'
  2726  0B04  3441               	retlw	76	;'L'
  2727  0B05  344C               	retlw	65	;'A'
  2728  0B06  3441               	retlw	82	;'R'
  2729  0B07  3452               	retlw	77	;'M'
  2730  0B08  344D               	retlw	0
  2731  0B09  3400               psect	stringtext
  2732                           	
  2733                           STR_2:	
  2734  0B0A                     	retlw	76	;'L'
  2735  0B0A  344C               	retlw	105	;'i'
  2736  0B0B  3469               	retlw	116	;'t'
  2737  0B0C  3474               	retlw	116	;'t'
  2738  0B0D  3474               	retlw	108	;'l'
  2739  0B0E  346C               	retlw	101	;'e'
  2740  0B0F  3465               	retlw	76	;'L'
  2741  0B10  344C               	retlw	97	;'a'
  2742  0B11  3461               	retlw	109	;'m'
  2743  0B12  346D               	retlw	98	;'b'
  2744  0B13  3462               	retlw	0
  2745  0B14  3400               psect	stringtext
  2746                           	
  2747                           STR_3:	
  2748  0B15                     	retlw	74	;'J'
  2749  0B15  344A               	retlw	105	;'i'
  2750  0B16  3469               	retlw	110	;'n'
  2751  0B17  346E               	retlw	103	;'g'
  2752  0B18  3467               	retlw	108	;'l'
  2753  0B19  346C               	retlw	101	;'e'
  2754  0B1A  3465               	retlw	66	;'B'
  2755  0B1B  3442               	retlw	101	;'e'
  2756  0B1C  3465               	retlw	108	;'l'
  2757  0B1D  346C               	retlw	108	;'l'
  2758  0B1E  346C               	retlw	0
  2759  0B1F  3400               psect	stringtext
  2760                           	
  2761                           STR_1:	
  2762  0B20                     	retlw	76	;'L'
  2763  0B20  344C               	retlw	105	;'i'
  2764  0B21  3469               	retlw	116	;'t'
  2765  0B22  3474               	retlw	116	;'t'
  2766  0B23  3474               	retlw	108	;'l'
  2767  0B24  346C               	retlw	101	;'e'
  2768  0B25  3465               	retlw	83	;'S'
  2769  0B26  3453               	retlw	116	;'t'
  2770  0B27  3474               	retlw	97	;'a'
  2771  0B28  3461               	retlw	114	;'r'
  2772  0B29  3472               	retlw	0
  2773  0B2A  3400               psect	stringtext
  2774                           	
  2775                           STR_4:	
  2776  0B2B                     	retlw	83	;'S'
  2777  0B2B  3453               	retlw	107	;'k'
  2778  0B2C  346B               	retlw	121	;'y'
  2779  0B2D  3479               	retlw	32	;' '
  2780  0B2E  3420               	retlw	67	;'C'
  2781  0B2F  3443               	retlw	105	;'i'
  2782  0B30  3469               	retlw	116	;'t'
  2783  0B31  3474               	retlw	121	;'y'
  2784  0B32  3479               	retlw	0
  2785  0B33  3400               psect	stringtext
  2786                           	
  2787                           STR_15:	
  2788  0B34                     	retlw	77	;'M'
  2789  0B34  344D               	retlw	85	;'U'
  2790  0B35  3455               	retlw	83	;'S'
  2791  0B36  3453               	retlw	73	;'I'
  2792  0B37  3449               	retlw	67	;'C'
  2793  0B38  3443               	retlw	0
  2794  0B39  3400               psect	stringtext
  2795                           	
  2796                           STR_16:	
  2797  0B3A                     	retlw	78	;'N'
  2798  0B3A  344E               	retlw	85	;'U'
  2799  0B3B  3455               	retlw	77	;'M'
  2800  0B3C  344D               	retlw	58	;':'
  2801  0B3D  343A               	retlw	0
  2802  0B3E  3400               psect	stringtext
  2803                           	
  2804                           STR_9:	
  2805  0B3F                     	retlw	87	;'W'
  2806  0B3F  3457               	retlw	101	;'e'
  2807  0B40  3465               	retlw	100	;'d'
  2808  0B41  3464               	retlw	46	;'.'
  2809  0B42  342E               	retlw	0
  2810  0B43  3400               psect	stringtext
  2811                           	
  2812                           STR_8:	
  2813  0B44                     	retlw	84	;'T'
  2814  0B44  3454               	retlw	117	;'u'
  2815  0B45  3475               	retlw	101	;'e'
  2816  0B46  3465               	retlw	46	;'.'
  2817  0B47  342E               	retlw	0
  2818  0B48  3400               psect	stringtext
  2819                           	
  2820                           STR_11:	
  2821  0B49                     	retlw	70	;'F'
  2822  0B49  3446               	retlw	114	;'r'
  2823  0B4A  3472               	retlw	105	;'i'
  2824  0B4B  3469               	retlw	46	;'.'
  2825  0B4C  342E               	retlw	0
  2826  0B4D  3400               psect	stringtext
  2827                           	
  2828                           STR_7:	
  2829  0B4E                     	retlw	77	;'M'
  2830  0B4E  344D               	retlw	111	;'o'
  2831  0B4F  346F               	retlw	110	;'n'
  2832  0B50  346E               	retlw	46	;'.'
  2833  0B51  342E               	retlw	0
  2834  0B52  3400               psect	stringtext
  2835                           	
  2836                           STR_13:	
  2837  0B53                     	retlw	83	;'S'
  2838  0B53  3453               	retlw	117	;'u'
  2839  0B54  3475               	retlw	110	;'n'
  2840  0B55  346E               	retlw	46	;'.'
  2841  0B56  342E               	retlw	0
  2842  0B57  3400               psect	stringtext
  2843                           	
  2844                           STR_12:	
  2845  0B58                     	retlw	83	;'S'
  2846  0B58  3453               	retlw	97	;'a'
  2847  0B59  3461               	retlw	116	;'t'
  2848  0B5A  3474               	retlw	46	;'.'
  2849  0B5B  342E               	retlw	0
  2850  0B5C  3400               psect	stringtext
  2851                           	
  2852                           STR_10:	
  2853  0B5D                     	retlw	84	;'T'
  2854  0B5D  3454               	retlw	104	;'h'
  2855  0B5E  3468               	retlw	117	;'u'
  2856  0B5F  3475               	retlw	46	;'.'
  2857  0B60  342E               	retlw	0
  2858  0B61  3400               psect	stringtext
  2859                           	
  2860                           STR_6:	
  2861  0B62                     	retlw	83	;'S'
  2862  0B62  3453               	retlw	84	;'T'
  2863  0B63  3454               	retlw	79	;'O'
  2864  0B64  344F               	retlw	80	;'P'
  2865  0B65  3450               	retlw	0
  2866  0B66  3400               psect	stringtext
  2867                           	
  2868                           STR_5:	
  2869  0B67                     	retlw	80	;'P'
  2870  0B67  3450               	retlw	76	;'L'
  2871  0B68  344C               	retlw	65	;'A'
  2872  0B69  3441               	retlw	89	;'Y'
  2873  0B6A  3459               	retlw	0
  2874  0B6B  3400               psect	stringtext
  2875                           	
  2876                           STR_19:	
  2877  0B6C                     	retlw	95	;'_'
  2878  0B6C  345F               	retlw	95	;'_'
  2879  0B6D  345F               	retlw	95	;'_'
  2880  0B6E  345F               	retlw	0
  2881  0B6F  3400               psect	stringtext
  2882                           	
  2883                           STR_14:	
  2884  0B70                     	retlw	50	;'2'
  2885  0B70  3432               	retlw	48	;'0'
  2886  0B71  3430               	retlw	0
  2887  0B72  3400               psect	stringtext
  2888                           STR_18	equ	STR_19+2
  2889  0B6E                     STR_20	equ	STR_19+2
  2890  0B6E                     ; #config settings
  2891                           global __CFG_FOSC$HS
  2892                           __CFG_FOSC$HS equ 0x0
  2893  0000                     global __CFG_WDTE$OFF
  2894                           __CFG_WDTE$OFF equ 0x0
  2895  0000                     global __CFG_PWRTE$OFF
  2896                           __CFG_PWRTE$OFF equ 0x0
  2897  0000                     global __CFG_MCLRE$ON
  2898                           __CFG_MCLRE$ON equ 0x0
  2899  0000                     global __CFG_CP$OFF
  2900                           __CFG_CP$OFF equ 0x0
  2901  0000                     global __CFG_CPD$OFF
  2902                           __CFG_CPD$OFF equ 0x0
  2903  0000                     global __CFG_BOREN$ON
  2904                           __CFG_BOREN$ON equ 0x0
  2905  0000                     global __CFG_IESO$ON
  2906                           __CFG_IESO$ON equ 0x0
  2907  0000                     global __CFG_FCMEN$ON
  2908                           __CFG_FCMEN$ON equ 0x0
  2909  0000                     global __CFG_LVP$ON
  2910                           __CFG_LVP$ON equ 0x0
  2911  0000                     global __CFG_BOR4V$BOR40V
  2912                           __CFG_BOR4V$BOR40V equ 0x0
  2913  0000                     global __CFG_WRT$OFF
  2914                           __CFG_WRT$OFF equ 0x0
  2915  0000                     	file	"C:\Users\tonyj\AppData\Local\Temp\sjuk."
  2916                           	line	#
  2917                           psect cinit,class=CODE,delta=2
  2918                           global start_initialization
  2919                           start_initialization:
  2920  000F                     
  2921                           global __initialization
  2922                           __initialization:
  2923  000F                     psect	bitbssCOMMON,class=COMMON,bit,space=1,noexec
  2924                           global __pbitbssCOMMON
  2925                           __pbitbssCOMMON:
  2926  03D0                     _clear_flag:
  2927  03D0                            ds      1
  2928  03D0                     
  2929                           _isMusicMode:
  2930  03D1                            ds      1
  2931  03D1                     
  2932                           _isMusicPlaying:
  2933  03D2                            ds      1
  2934  03D2                     
  2935                           psect	bssCOMMON,class=COMMON,space=1,noexec
  2936                           global __pbssCOMMON
  2937                           __pbssCOMMON:
  2938  007B                     _key2pushflag:
  2939  007B                            ds      1
  2940  007B                     
  2941                           psect	bssBANK0,class=BANK0,space=1,noexec
  2942                           global __pbssBANK0
  2943                           __pbssBANK0:
  2944  0020                     _tempTime_Ds1302:
  2945  0020                            ds      7
  2946  0020                     
  2947                           _MusicPosition:
  2948  0027                            ds      2
  2949  0027                     
  2950                           _key3pushflag:
  2951  0029                            ds      1
  2952  0029                     
  2953                           _cursor_addr:
  2954  002A                            ds      1
  2955  002A                     
  2956                           _Mode:
  2957  002B                            ds      1
  2958  002B                     
  2959                           _SECOND_unit:
  2960  002C                            ds      1
  2961  002C                     
  2962                           _SECOND_ten:
  2963  002D                            ds      1
  2964  002D                     
  2965                           _MINUTE_unit:
  2966  002E                            ds      1
  2967  002E                     
  2968                           _MINUTE_ten:
  2969  002F                            ds      1
  2970  002F                     
  2971                           _HOUR_unit:
  2972  0030                            ds      1
  2973  0030                     
  2974                           _HOUR_ten:
  2975  0031                            ds      1
  2976  0031                     
  2977                           _WEEK_unit:
  2978  0032                            ds      1
  2979  0032                     
  2980                           _DAY_unit:
  2981  0033                            ds      1
  2982  0033                     
  2983                           _DAY_ten:
  2984  0034                            ds      1
  2985  0034                     
  2986                           _MONTH_unit:
  2987  0035                            ds      1
  2988  0035                     
  2989                           _MONTH_ten:
  2990  0036                            ds      1
  2991  0036                     
  2992                           _YEAR_unit:
  2993  0037                            ds      1
  2994  0037                     
  2995                           _YEAR_ten:
  2996  0038                            ds      1
  2997  0038                     
  2998                           _aSECOND_unit:
  2999  0039                            ds      1
  3000  0039                     
  3001                           _aSECOND_ten:
  3002  003A                            ds      1
  3003  003A                     
  3004                           _aMINUTE_unit:
  3005  003B                            ds      1
  3006  003B                     
  3007                           _aMINUTE_ten:
  3008  003C                            ds      1
  3009  003C                     
  3010                           _aHOUR_unit:
  3011  003D                            ds      1
  3012  003D                     
  3013                           _aHOUR_ten:
  3014  003E                            ds      1
  3015  003E                     
  3016                           _TempMetre:
  3017  003F                            ds      1
  3018  003F                     
  3019                           _TempTone:
  3020  0040                            ds      1
  3021  0040                     
  3022                           _backup_pos:
  3023  0041                            ds      1
  3024  0041                     
  3025                           _SongNum:
  3026  0042                            ds      1
  3027  0042                     
  3028                           psect	dataBANK0,class=BANK0,space=1,noexec
  3029                           global __pdataBANK0
  3030                           __pdataBANK0:
  3031  0043                     	file	"DS1302.c"
  3032                           	line	20
  3033                           _LcdTimeAddr:
  3034  0043                            ds      13
  3035  0043                     
  3036                           psect	dataBANK0
  3037                           	file	"DS1302.c"
  3038                           	line	14
  3039                           _SET_TIME:
  3040  0050                            ds      7
  3041  0050                     
  3042                           psect	dataBANK0
  3043                           	file	"DS1302.h"
  3044                           	line	29
  3045                           _Alarm_TIME:
  3046  0057                            ds      6
  3047  0057                     
  3048                           psect	dataBANK1,class=BANK1,space=1,noexec
  3049                           global __pdataBANK1
  3050                           __pdataBANK1:
  3051  00A0                     	file	"DS1302.c"
  3052                           	line	8
  3053                           _week:
  3054  00A0                            ds      14
  3055  00A0                     
  3056                           	file	"C:\Users\tonyj\AppData\Local\Temp\sjuk."
  3057                           	line	#
  3058                           global btemp
  3059                           psect inittext,class=CODE,delta=2
  3060                           global init_fetch0,btemp
  3061                           ;	Called with low address in FSR and high address in W
  3062                           init_fetch0:
  3063  1347                     	movf btemp,w
  3064  1347  087E               	movwf pclath
  3065  1348  008A               	movf btemp+1,w
  3066  1349  087F               	movwf pc
  3067  134A  0082               global init_ram0
  3068                           ;Called with:
  3069                           ;	high address of idata address in btemp 
  3070                           ;	low address of idata address in btemp+1 
  3071                           ;	low address of data in FSR
  3072                           ;	high address + 1 of data in btemp-1
  3073                           init_ram0:
  3074  134B                     	fcall init_fetch0
  3075  134B  160A  118A  2347  160A  118A  	movwf indf,f
  3076  1350  0080               	incf fsr,f
  3077  1351  0A84               	movf fsr,w
  3078  1352  0804               	xorwf btemp-1,w
  3079  1353  067D               	btfsc status,2
  3080  1354  1903               	retlw 0
  3081  1355  3400               	incf btemp+1,f
  3082  1356  0AFF               	btfsc status,2
  3083  1357  1903               	incf btemp,f
  3084  1358  0AFE               	goto init_ram0
  3085  1359  2B4B               ; Initialize objects allocated to BANK1
  3086                           psect cinit,class=CODE,delta=2,merge=1
  3087                           global init_ram0, __pidataBANK1
  3088                           	bcf	status, 7	;select IRP bank0
  3089  000F  1383               	movlw low(__pdataBANK1+14)
  3090  0010  30AE               	movwf btemp-1,f
  3091  0011  00FD               	movlw high(__pidataBANK1)
  3092  0012  3012               	movwf btemp,f
  3093  0013  00FE               	movlw low(__pidataBANK1)
  3094  0014  30F3               	movwf btemp+1,f
  3095  0015  00FF               	movlw low(__pdataBANK1)
  3096  0016  30A0               	movwf fsr,f
  3097  0017  0084               	fcall init_ram0
  3098  0018  160A  118A  234B  120A  118A  ; Initialize objects allocated to BANK0
  3099                           psect cinit,class=CODE,delta=2,merge=1
  3100                           global init_ram0, __pidataBANK0
  3101                           	movlw low(__pdataBANK0+26)
  3102  001D  305D               	movwf btemp-1,f
  3103  001E  00FD               	movlw high(__pidataBANK0)
  3104  001F  3013               	movwf btemp,f
  3105  0020  00FE               	movlw low(__pidataBANK0)
  3106  0021  309B               	movwf btemp+1,f
  3107  0022  00FF               	movlw low(__pdataBANK0)
  3108  0023  3043               	movwf fsr,f
  3109  0024  0084               	fcall init_ram0
  3110  0025  160A  118A  234B  120A  118A  	line	#
  3111                           psect clrtext,class=CODE,delta=2
  3112                           global clear_ram0
  3113                           ;	Called with FSR containing the base address, and
  3114                           ;	W with the last address+1
  3115                           clear_ram0:
  3116  12C5                     	clrwdt			;clear the watchdog before getting into this loop
  3117  12C5  0064               clrloop0:
  3118  12C6                     	clrf	indf		;clear RAM location pointed to by FSR
  3119  12C6  0180               	incf	fsr,f		;increment pointer
  3120  12C7  0A84               	xorwf	fsr,w		;XOR with final address
  3121  12C8  0604               	btfsc	status,2	;have we reached the end yet?
  3122  12C9  1903               	retlw	0		;all done for this memory range, return
  3123  12CA  3400               	xorwf	fsr,w		;XOR again to restore value
  3124  12CB  0604               	goto	clrloop0		;do the next byte
  3125  12CC  2AC6               
  3126                           ; Clear objects allocated to BANK0
  3127                           psect cinit,class=CODE,delta=2,merge=1
  3128                           	movlw	low(__pbssBANK0)
  3129  002A  3020               	movwf	fsr
  3130  002B  0084               	movlw	low((__pbssBANK0)+023h)
  3131  002C  3043               	fcall	clear_ram0
  3132  002D  160A  118A  22C5  120A  118A  ; Clear objects allocated to COMMON
  3133                           psect cinit,class=CODE,delta=2,merge=1
  3134                           	clrf	((__pbssCOMMON)+0)&07Fh
  3135  0032  01FB               ; Clear objects allocated to BITCOMMON
  3136                           psect cinit,class=CODE,delta=2,merge=1
  3137                           	clrf	((__pbitbssCOMMON/8)+0)&07Fh
  3138  0033  01FA               psect cinit,class=CODE,delta=2,merge=1
  3139                           global end_of_initialization,__end_of__initialization
  3140                           
  3141                           ;End of C runtime variable initialization code
  3142                           
  3143                           end_of_initialization:
  3144  0034                     __end_of__initialization:
  3145  0034                     clrf status
  3146  0034  0183               ljmp _main	;jump to C main() function
  3147  0035  120A  158A  2CD8   psect	cstackCOMMON,class=COMMON,space=1,noexec
  3148                           global __pcstackCOMMON
  3149                           __pcstackCOMMON:
  3150  0070                     ?_Initialize_UART:	; 1 bytes @ 0x0
  3151  0070                     ?_Initialize_INT:	; 1 bytes @ 0x0
  3152  0070                     ?_Ds1302_Init:	; 1 bytes @ 0x0
  3153  0070                     ?_Ds1302Init:	; 1 bytes @ 0x0
  3154  0070                     ?_LCD_MPU_init:	; 1 bytes @ 0x0
  3155  0070                     ?_LCD_init:	; 1 bytes @ 0x0
  3156  0070                     ?_InitScrn:	; 1 bytes @ 0x0
  3157  0070                     ?_LED_Init:	; 1 bytes @ 0x0
  3158  0070                     ?_MUSIC_init:	; 1 bytes @ 0x0
  3159  0070                     ?_KEY_init:	; 1 bytes @ 0x0
  3160  0070                     ?_PwmInit:	; 1 bytes @ 0x0
  3161  0070                     ?_keyscan:	; 1 bytes @ 0x0
  3162  0070                     ?_check_Alarm:	; 1 bytes @ 0x0
  3163  0070                     ?_ModeSwitch:	; 1 bytes @ 0x0
  3164  0070                     ?_ClearScreenOnce:	; 1 bytes @ 0x0
  3165  0070                     ?_MusicPlay:	; 1 bytes @ 0x0
  3166  0070                     ?_delay_us:	; 1 bytes @ 0x0
  3167  0070                     ?_LCD_Busy:	; 1 bytes @ 0x0
  3168  0070                     ?_Trans_Alarm_bit:	; 1 bytes @ 0x0
  3169  0070                     ?_PwmTone:	; 1 bytes @ 0x0
  3170  0070                     ?_MusicDisplay:	; 1 bytes @ 0x0
  3171  0070                     ?_main:	; 1 bytes @ 0x0
  3172  0070                     ?_ISR:	; 1 bytes @ 0x0
  3173  0070                     ??_ISR:	; 1 bytes @ 0x0
  3174  0070                     ?_LCD_en_command:	; 1 bytes @ 0x0
  3175  0070                     ?_LCD_en_dat:	; 1 bytes @ 0x0
  3176  0070                     ?_LCD_Read_dat:	; 1 bytes @ 0x0
  3177  0070                     ?_Y_position:	; 1 bytes @ 0x0
  3178  0070                     ?_Ds1302Read:	; 1 bytes @ 0x0
  3179  0070                     ?_Ds1302ReadTimeBCD:	; 1 bytes @ 0x0
  3180  0070                     ?_Trans_Time_bit:	; 1 bytes @ 0x0
  3181  0070                     ?_TimeDataDisplay:	; 1 bytes @ 0x0
  3182  0070                     ?_FrameworkDisplay:	; 1 bytes @ 0x0
  3183  0070                     ?_aFrameworkDisplay:	; 1 bytes @ 0x0
  3184  0070                     ?_AlarmDataDisplay:	; 1 bytes @ 0x0
  3185  0070                     ?_SixteenNoteDelay:	; 1 bytes @ 0x0
  3186  0070                     ?_check_K1:	; 1 bytes @ 0x0
  3187  0070                     ?_check_K2:	; 1 bytes @ 0x0
  3188  0070                     ?_check_K3:	; 1 bytes @ 0x0
  3189  0070                     ?_check_K4:	; 1 bytes @ 0x0
  3190  0070                     ?_check_K5:	; 1 bytes @ 0x0
  3191  0070                     ?_check_K6:	; 1 bytes @ 0x0
  3192  0070                     ?_UART_send_char:	; 1 bytes @ 0x0
  3193  0070                     	ds	2
  3194  0070                     ??_Initialize_INT:	; 1 bytes @ 0x2
  3195  0072                     ??_Ds1302_Init:	; 1 bytes @ 0x2
  3196  0072                     ??_LCD_MPU_init:	; 1 bytes @ 0x2
  3197  0072                     ??_LED_Init:	; 1 bytes @ 0x2
  3198  0072                     ??_MUSIC_init:	; 1 bytes @ 0x2
  3199  0072                     ??_KEY_init:	; 1 bytes @ 0x2
  3200  0072                     ??_PwmInit:	; 1 bytes @ 0x2
  3201  0072                     ??_delay_us:	; 1 bytes @ 0x2
  3202  0072                     ?_delay_ms:	; 1 bytes @ 0x2
  3203  0072                     ??_Trans_Alarm_bit:	; 1 bytes @ 0x2
  3204  0072                     ??_PwmTone:	; 1 bytes @ 0x2
  3205  0072                     ??_LCD_Read_dat:	; 1 bytes @ 0x2
  3206  0072                     ??_Y_position:	; 1 bytes @ 0x2
  3207  0072                     ?_Ds1302Write:	; 1 bytes @ 0x2
  3208  0072                     ??_Ds1302Read:	; 1 bytes @ 0x2
  3209  0072                     ??_Trans_Time_bit:	; 1 bytes @ 0x2
  3210  0072                     ??_UART_send_char:	; 1 bytes @ 0x2
  3211  0072                     	global	Y_position@addr
  3212                           Y_position@addr:	; 1 bytes @ 0x2
  3213  0072                     	global	Ds1302Write@dat
  3214                           Ds1302Write@dat:	; 1 bytes @ 0x2
  3215  0072                     	global	delay_us@n
  3216                           delay_us@n:	; 1 bytes @ 0x2
  3217  0072                     	global	UART_send_char@data
  3218                           UART_send_char@data:	; 1 bytes @ 0x2
  3219  0072                     	global	delay_ms@n
  3220                           delay_ms@n:	; 2 bytes @ 0x2
  3221  0072                     	ds	1
  3222  0072                     ?_UART_send_string:	; 1 bytes @ 0x3
  3223  0073                     ??_LCD_en_dat:	; 1 bytes @ 0x3
  3224  0073                     ??_Ds1302Write:	; 1 bytes @ 0x3
  3225  0073                     	global	LCD_en_dat@dat
  3226                           LCD_en_dat@dat:	; 1 bytes @ 0x3
  3227  0073                     	global	LCD_Read_dat@dat
  3228                           LCD_Read_dat@dat:	; 1 bytes @ 0x3
  3229  0073                     	global	UART_send_string@Str
  3230                           UART_send_string@Str:	; 2 bytes @ 0x3
  3231  0073                     	ds	1
  3232  0073                     ??_delay_ms:	; 1 bytes @ 0x4
  3233  0074                     ??_LCD_Busy:	; 1 bytes @ 0x4
  3234  0074                     	global	Ds1302Write@addr
  3235                           Ds1302Write@addr:	; 1 bytes @ 0x4
  3236  0074                     	ds	1
  3237  0074                     ??_Initialize_UART:	; 1 bytes @ 0x5
  3238  0075                     ??_UART_send_string:	; 1 bytes @ 0x5
  3239  0075                     	global	LCD_Busy@busyFlag
  3240                           LCD_Busy@busyFlag:	; 1 bytes @ 0x5
  3241  0075                     	global	Ds1302Write@n
  3242                           Ds1302Write@n:	; 1 bytes @ 0x5
  3243  0075                     	global	Ds1302Read@addr
  3244                           Ds1302Read@addr:	; 1 bytes @ 0x5
  3245  0075                     	global	delay_ms@j
  3246                           delay_ms@j:	; 2 bytes @ 0x5
  3247  0075                     	ds	1
  3248  0075                     ??_Ds1302Init:	; 1 bytes @ 0x6
  3249  0076                     ?_Ds1302WriteTime:	; 1 bytes @ 0x6
  3250  0076                     	global	Ds1302Read@dat1
  3251                           Ds1302Read@dat1:	; 1 bytes @ 0x6
  3252  0076                     	global	Ds1302WriteTime@dat
  3253                           Ds1302WriteTime@dat:	; 1 bytes @ 0x6
  3254  0076                     	global	PwmTone@n
  3255                           PwmTone@n:	; 1 bytes @ 0x6
  3256  0076                     	ds	1
  3257  0076                     ??_Ds1302WriteTime:	; 1 bytes @ 0x7
  3258  0077                     	global	Ds1302Read@dat
  3259                           Ds1302Read@dat:	; 1 bytes @ 0x7
  3260  0077                     	global	Ds1302Init@n
  3261                           Ds1302Init@n:	; 1 bytes @ 0x7
  3262  0077                     	global	delay_ms@k
  3263                           delay_ms@k:	; 1 bytes @ 0x7
  3264  0077                     	global	PwmTone@X
  3265                           PwmTone@X:	; 2 bytes @ 0x7
  3266  0077                     	ds	1
  3267  0077                     ??_LCD_en_command:	; 1 bytes @ 0x8
  3268  0078                     ??_SixteenNoteDelay:	; 1 bytes @ 0x8
  3269  0078                     ??_check_K1:	; 1 bytes @ 0x8
  3270  0078                     ??_check_K2:	; 1 bytes @ 0x8
  3271  0078                     ??_check_K3:	; 1 bytes @ 0x8
  3272  0078                     ??_check_K4:	; 1 bytes @ 0x8
  3273  0078                     ??_check_K5:	; 1 bytes @ 0x8
  3274  0078                     ??_check_K6:	; 1 bytes @ 0x8
  3275  0078                     	global	LCD_en_command@command
  3276                           LCD_en_command@command:	; 1 bytes @ 0x8
  3277  0078                     	global	Ds1302Read@n
  3278                           Ds1302Read@n:	; 1 bytes @ 0x8
  3279  0078                     	global	Ds1302WriteTime@n
  3280                           Ds1302WriteTime@n:	; 1 bytes @ 0x8
  3281  0078                     	ds	1
  3282  0078                     ??_LCD_init:	; 1 bytes @ 0x9
  3283  0079                     ??_InitScrn:	; 1 bytes @ 0x9
  3284  0079                     ??_keyscan:	; 1 bytes @ 0x9
  3285  0079                     ??_check_Alarm:	; 1 bytes @ 0x9
  3286  0079                     ??_MusicPlay:	; 1 bytes @ 0x9
  3287  0079                     ?_LCD_set_xy:	; 1 bytes @ 0x9
  3288  0079                     ??_Ds1302ReadTimeBCD:	; 1 bytes @ 0x9
  3289  0079                     ??_beep_ms:	; 1 bytes @ 0x9
  3290  0079                     	global	LCD_set_xy@y
  3291                           LCD_set_xy@y:	; 1 bytes @ 0x9
  3292  0079                     	ds	1
  3293  0079                     ??_main:	; 1 bytes @ 0xA
  3294  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
  3295                           global __pcstackBANK0
  3296                           __pcstackBANK0:
  3297  005D                     ??_LCD_set_xy:	; 1 bytes @ 0x0
  3298  005D                     ?_beep_ms:	; 1 bytes @ 0x0
  3299  005D                     	global	Ds1302ReadTimeBCD@n
  3300                           Ds1302ReadTimeBCD@n:	; 1 bytes @ 0x0
  3301  005D                     	global	SixteenNoteDelay@n
  3302                           SixteenNoteDelay@n:	; 1 bytes @ 0x0
  3303  005D                     	global	beep_ms@n
  3304                           beep_ms@n:	; 2 bytes @ 0x0
  3305  005D                     	ds	1
  3306  005D                     	global	LCD_set_xy@address
  3307                           LCD_set_xy@address:	; 1 bytes @ 0x1
  3308  005E                     	global	SixteenNoteDelay@x
  3309                           SixteenNoteDelay@x:	; 1 bytes @ 0x1
  3310  005E                     	ds	1
  3311  005E                     	global	LCD_set_xy@x
  3312                           LCD_set_xy@x:	; 1 bytes @ 0x2
  3313  005F                     	ds	1
  3314  005F                     ?_LCD_write_char:	; 1 bytes @ 0x3
  3315  0060                     ?_LCD_write_string:	; 1 bytes @ 0x3
  3316  0060                     	global	LCD_write_char@y
  3317                           LCD_write_char@y:	; 1 bytes @ 0x3
  3318  0060                     	global	LCD_write_string@Y
  3319                           LCD_write_string@Y:	; 1 bytes @ 0x3
  3320  0060                     	ds	1
  3321  0060                     	global	LCD_write_char@dat
  3322                           LCD_write_char@dat:	; 1 bytes @ 0x4
  3323  0061                     	global	LCD_write_string@s
  3324                           LCD_write_string@s:	; 2 bytes @ 0x4
  3325  0061                     	ds	1
  3326  0061                     ??_LCD_write_char:	; 1 bytes @ 0x5
  3327  0062                     	ds	1
  3328  0062                     ??_LCD_write_string:	; 1 bytes @ 0x6
  3329  0063                     	global	LCD_write_char@x
  3330                           LCD_write_char@x:	; 1 bytes @ 0x6
  3331  0063                     	ds	1
  3332  0063                     ??_FrameworkDisplay:	; 1 bytes @ 0x7
  3333  0064                     ??_aFrameworkDisplay:	; 1 bytes @ 0x7
  3334  0064                     ??_AlarmDataDisplay:	; 1 bytes @ 0x7
  3335  0064                     	global	LCD_write_string@X
  3336                           LCD_write_string@X:	; 1 bytes @ 0x7
  3337  0064                     	ds	1
  3338  0064                     ??_MusicDisplay:	; 1 bytes @ 0x8
  3339  0065                     ??_TimeDataDisplay:	; 1 bytes @ 0x8
  3340  0065                     	ds	1
  3341  0065                     ??_ClearScreenOnce:	; 1 bytes @ 0x9
  3342  0066                     	ds	1
  3343  0066                     ??_ModeSwitch:	; 1 bytes @ 0xA
  3344  0067                     	ds	2
  3345  0067                     ;!
  3346                           ;!Data Sizes:
  3347                           ;!    Strings     157
  3348                           ;!    Constant    708
  3349                           ;!    Data        40
  3350                           ;!    BSS         36
  3351                           ;!    Persistent  0
  3352                           ;!    Stack       0
  3353                           ;!
  3354                           ;!Auto Spaces:
  3355                           ;!    Space          Size  Autos    Used
  3356                           ;!    COMMON           14     10      12
  3357                           ;!    BANK0            80     12      73
  3358                           ;!    BANK1            80      0      14
  3359                           ;!    BANK3            96      0       0
  3360                           ;!    BANK2            96      0       0
  3361                           
  3362                           ;!
  3363                           ;!Pointer List with Targets:
  3364                           ;!
  3365                           ;!    UART_send_string@Str	PTR unsigned char  size(2) Largest target is 37
  3366                           ;!		 -> STR_21(CODE[37]), 
  3367                           ;!
  3368                           ;!    week	PTR const int [7] size(2) Largest target is 5
  3369                           ;!		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 
  3370                           ;!		 -> STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[5]), 
  3371                           ;!
  3372                           ;!    LCD_write_string@s	PTR unsigned char  size(2) Largest target is 512
  3373                           ;!		 -> STR_20(CODE[2]), STR_19(CODE[4]), STR_18(CODE[2]), STR_17(CODE[15]), 
  3374                           ;!		 -> STR_16(CODE[5]), STR_15(CODE[6]), STR_14(CODE[3]), STR_13(CODE[5]), 
  3375                           ;!		 -> STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[5]), 
  3376                           ;!		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
  3377                           ;!		 -> RAM(DATA[512]), 
  3378                           ;!
  3379                           
  3380                           
  3381                           ;!
  3382                           ;!Critical Paths under _main in COMMON
  3383                           ;!
  3384                           ;!    _main->_MusicPlay
  3385                           ;!    _keyscan->_check_K1
  3386                           ;!    _keyscan->_check_K4
  3387                           ;!    _keyscan->_check_K5
  3388                           ;!    _check_K6->_delay_ms
  3389                           ;!    _check_K5->_delay_ms
  3390                           ;!    _check_K4->_delay_ms
  3391                           ;!    _check_K3->_delay_ms
  3392                           ;!    _check_K2->_delay_ms
  3393                           ;!    _check_K1->_delay_ms
  3394                           ;!    _beep_ms->_PwmTone
  3395                           ;!    _MusicPlay->_PwmTone
  3396                           ;!    _MusicPlay->_SixteenNoteDelay
  3397                           ;!    _SixteenNoteDelay->_delay_ms
  3398                           ;!    _ModeSwitch->_Ds1302ReadTimeBCD
  3399                           ;!    _Ds1302WriteTime->_Ds1302Write
  3400                           ;!    _Ds1302ReadTimeBCD->_Ds1302Read
  3401                           ;!    _LCD_write_string->_LCD_set_xy
  3402                           ;!    _LCD_Busy->_LCD_Read_dat
  3403                           ;!    _LCD_write_char->_LCD_set_xy
  3404                           ;!    _LCD_set_xy->_LCD_en_command
  3405                           ;!    _LCD_en_dat->_delay_us
  3406                           ;!    _LCD_init->_LCD_en_command
  3407                           ;!    _Initialize_UART->_UART_send_string
  3408                           ;!    _UART_send_string->_UART_send_char
  3409                           ;!    _InitScrn->_LCD_en_command
  3410                           ;!    _LCD_en_command->_delay_ms
  3411                           ;!    _Ds1302Init->_Ds1302Write
  3412                           ;!
  3413                           ;!Critical Paths under _ISR in COMMON
  3414                           ;!
  3415                           ;!    None.
  3416                           ;!
  3417                           ;!Critical Paths under _main in BANK0
  3418                           ;!
  3419                           ;!    _main->_ModeSwitch
  3420                           ;!    _main->_MusicDisplay
  3421                           ;!    _check_Alarm->_beep_ms
  3422                           ;!    _MusicPlay->_SixteenNoteDelay
  3423                           ;!    _MusicDisplay->_LCD_write_string
  3424                           ;!    _ModeSwitch->_ClearScreenOnce
  3425                           ;!    _ModeSwitch->_TimeDataDisplay
  3426                           ;!    _TimeDataDisplay->_LCD_write_string
  3427                           ;!    _ClearScreenOnce->_FrameworkDisplay
  3428                           ;!    _ClearScreenOnce->_aFrameworkDisplay
  3429                           ;!    _aFrameworkDisplay->_LCD_write_char
  3430                           ;!    _LCD_write_string->_LCD_set_xy
  3431                           ;!    _FrameworkDisplay->_LCD_write_char
  3432                           ;!    _AlarmDataDisplay->_LCD_write_char
  3433                           ;!    _LCD_write_char->_LCD_set_xy
  3434                           ;!
  3435                           ;!Critical Paths under _ISR in BANK0
  3436                           ;!
  3437                           ;!    None.
  3438                           ;!
  3439                           ;!Critical Paths under _main in BANK1
  3440                           ;!
  3441                           ;!    None.
  3442                           ;!
  3443                           ;!Critical Paths under _ISR in BANK1
  3444                           ;!
  3445                           ;!    None.
  3446                           ;!
  3447                           ;!Critical Paths under _main in BANK3
  3448                           ;!
  3449                           ;!    None.
  3450                           ;!
  3451                           ;!Critical Paths under _ISR in BANK3
  3452                           ;!
  3453                           ;!    None.
  3454                           ;!
  3455                           ;!Critical Paths under _main in BANK2
  3456                           ;!
  3457                           ;!    None.
  3458                           ;!
  3459                           ;!Critical Paths under _ISR in BANK2
  3460                           ;!
  3461                           ;!    None.
  3462                           
  3463 ;;
  3464 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3465 ;;
  3466                           
  3467                           ;!
  3468                           ;!Call Graph Tables:
  3469                           ;!
  3470                           ;! ---------------------------------------------------------------------------------
  3471                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3472                           ;! ---------------------------------------------------------------------------------
  3473                           ;! (0) _main                                                 0     0      0   87829
  3474                           ;!                    _ClearScreenOnce
  3475                           ;!                         _Ds1302Init
  3476                           ;!                        _Ds1302_Init
  3477                           ;!                           _InitScrn
  3478                           ;!                     _Initialize_INT
  3479                           ;!                    _Initialize_UART
  3480                           ;!                           _KEY_init
  3481                           ;!                       _LCD_MPU_init
  3482                           ;!                           _LCD_init
  3483                           ;!                           _LED_Init
  3484                           ;!                         _MUSIC_init
  3485                           ;!                         _ModeSwitch
  3486                           ;!                       _MusicDisplay
  3487                           ;!                          _MusicPlay
  3488                           ;!                            _PwmInit
  3489                           ;!                        _check_Alarm
  3490                           ;!                            _keyscan
  3491                           ;! ---------------------------------------------------------------------------------
  3492                           ;! (1) _keyscan                                              0     0      0    8376
  3493                           ;!                           _check_K1
  3494                           ;!                           _check_K2
  3495                           ;!                           _check_K3
  3496                           ;!                           _check_K4
  3497                           ;!                           _check_K5
  3498                           ;!                           _check_K6
  3499                           ;! ---------------------------------------------------------------------------------
  3500                           ;! (2) _check_K6                                             0     0      0    1396
  3501                           ;!                           _delay_ms
  3502                           ;! ---------------------------------------------------------------------------------
  3503                           ;! (2) _check_K5                                             1     1      0    1396
  3504                           ;!                                              8 COMMON     1     1      0
  3505                           ;!                           _delay_ms
  3506                           ;! ---------------------------------------------------------------------------------
  3507                           ;! (2) _check_K4                                             1     1      0    1396
  3508                           ;!                                              8 COMMON     1     1      0
  3509                           ;!                           _delay_ms
  3510                           ;! ---------------------------------------------------------------------------------
  3511                           ;! (2) _check_K3                                             0     0      0    1396
  3512                           ;!                           _delay_ms
  3513                           ;! ---------------------------------------------------------------------------------
  3514                           ;! (2) _check_K2                                             0     0      0    1396
  3515                           ;!                           _delay_ms
  3516                           ;! ---------------------------------------------------------------------------------
  3517                           ;! (2) _check_K1                                             1     1      0    1396
  3518                           ;!                                              8 COMMON     1     1      0
  3519                           ;!                           _delay_ms
  3520                           ;! ---------------------------------------------------------------------------------
  3521                           ;! (1) _check_Alarm                                          0     0      0    1606
  3522                           ;!                            _beep_ms
  3523                           ;! ---------------------------------------------------------------------------------
  3524                           ;! (2) _beep_ms                                              2     0      2    1606
  3525                           ;!                                              0 BANK0      2     0      2
  3526                           ;!                            _PwmTone
  3527                           ;!                           _delay_ms
  3528                           ;! ---------------------------------------------------------------------------------
  3529                           ;! (1) _PwmInit                                              0     0      0       0
  3530                           ;! ---------------------------------------------------------------------------------
  3531                           ;! (1) _MusicPlay                                            1     1      0    1584
  3532                           ;!                                              9 COMMON     1     1      0
  3533                           ;!                            _PwmTone
  3534                           ;!                   _SixteenNoteDelay
  3535                           ;! ---------------------------------------------------------------------------------
  3536                           ;! (2) _SixteenNoteDelay                                     3     3      0    1495
  3537                           ;!                                              8 COMMON     1     1      0
  3538                           ;!                                              0 BANK0      2     2      0
  3539                           ;!                           _delay_ms
  3540                           ;! ---------------------------------------------------------------------------------
  3541                           ;! (3) _PwmTone                                              7     7      0      89
  3542                           ;!                                              2 COMMON     7     7      0
  3543                           ;! ---------------------------------------------------------------------------------
  3544                           ;! (1) _MusicDisplay                                         4     4      0   10387
  3545                           ;!                                              8 BANK0      4     4      0
  3546                           ;!                     _LCD_write_char
  3547                           ;!                   _LCD_write_string
  3548                           ;! ---------------------------------------------------------------------------------
  3549                           ;! (1) _ModeSwitch                                           2     2      0   42518
  3550                           ;!                                             10 BANK0      2     2      0
  3551                           ;!                   _AlarmDataDisplay
  3552                           ;!                    _ClearScreenOnce
  3553                           ;!                  _Ds1302ReadTimeBCD
  3554                           ;!                    _Ds1302WriteTime
  3555                           ;!                   _LCD_write_string
  3556                           ;!                    _TimeDataDisplay
  3557                           ;!                    _Trans_Alarm_bit
  3558                           ;!                     _Trans_Time_bit
  3559                           ;!                         _Y_position
  3560                           ;!                           _delay_ms
  3561                           ;! ---------------------------------------------------------------------------------
  3562                           ;! (2) _Y_position                                           1     1      0      88
  3563                           ;!                                              2 COMMON     1     1      0
  3564                           ;! ---------------------------------------------------------------------------------
  3565                           ;! (2) _Trans_Time_bit                                       2     2      0       0
  3566                           ;!                                              2 COMMON     2     2      0
  3567                           ;! ---------------------------------------------------------------------------------
  3568                           ;! (2) _TimeDataDisplay                                      2     2      0   10387
  3569                           ;!                                              8 BANK0      2     2      0
  3570                           ;!                     _LCD_write_char
  3571                           ;!                   _LCD_write_string
  3572                           ;! ---------------------------------------------------------------------------------
  3573                           ;! (2) _Ds1302WriteTime                                      3     2      1    1626
  3574                           ;!                                              6 COMMON     3     2      1
  3575                           ;!                        _Ds1302Write
  3576                           ;! ---------------------------------------------------------------------------------
  3577                           ;! (2) _Ds1302ReadTimeBCD                                    2     2      0     399
  3578                           ;!                                              9 COMMON     1     1      0
  3579                           ;!                                              0 BANK0      1     1      0
  3580                           ;!                         _Ds1302Read
  3581                           ;! ---------------------------------------------------------------------------------
  3582                           ;! (3) _Ds1302Read                                           7     7      0     269
  3583                           ;!                                              2 COMMON     7     7      0
  3584                           ;! ---------------------------------------------------------------------------------
  3585                           ;! (2) _ClearScreenOnce                                      1     1      0   18235
  3586                           ;!                                              9 BANK0      1     1      0
  3587                           ;!                   _FrameworkDisplay
  3588                           ;!                     _LCD_en_command
  3589                           ;!                   _LCD_write_string
  3590                           ;!                  _aFrameworkDisplay
  3591                           ;! ---------------------------------------------------------------------------------
  3592                           ;! (3) _aFrameworkDisplay                                    2     2      0    6398
  3593                           ;!                                              7 BANK0      2     2      0
  3594                           ;!                     _LCD_write_char
  3595                           ;! ---------------------------------------------------------------------------------
  3596                           ;! (2) _LCD_write_string                                     5     2      3    3989
  3597                           ;!                                              3 BANK0      5     2      3
  3598                           ;!                           _LCD_Busy
  3599                           ;!                         _LCD_en_dat
  3600                           ;!                         _LCD_set_xy
  3601                           ;!                         _Y_position (ARG)
  3602                           ;! ---------------------------------------------------------------------------------
  3603                           ;! (3) _LCD_Busy                                             2     2      0      46
  3604                           ;!                                              4 COMMON     2     2      0
  3605                           ;!                       _LCD_Read_dat
  3606                           ;! ---------------------------------------------------------------------------------
  3607                           ;! (4) _LCD_Read_dat                                         2     2      0      23
  3608                           ;!                                              2 COMMON     2     2      0
  3609                           ;! ---------------------------------------------------------------------------------
  3610                           ;! (3) _FrameworkDisplay                                     2     2      0    6398
  3611                           ;!                                              7 BANK0      2     2      0
  3612                           ;!                     _LCD_write_char
  3613                           ;! ---------------------------------------------------------------------------------
  3614                           ;! (2) _AlarmDataDisplay                                     2     2      0    6398
  3615                           ;!                                              7 BANK0      2     2      0
  3616                           ;!                     _LCD_write_char
  3617                           ;! ---------------------------------------------------------------------------------
  3618                           ;! (2) _LCD_write_char                                       4     2      2    6398
  3619                           ;!                                              3 BANK0      4     2      2
  3620                           ;!                         _LCD_en_dat
  3621                           ;!                         _LCD_set_xy
  3622                           ;! ---------------------------------------------------------------------------------
  3623                           ;! (3) _LCD_set_xy                                           4     3      1    1760
  3624                           ;!                                              9 COMMON     1     0      1
  3625                           ;!                                              0 BANK0      3     3      0
  3626                           ;!                     _LCD_en_command
  3627                           ;! ---------------------------------------------------------------------------------
  3628                           ;! (3) _LCD_en_dat                                           1     1      0      45
  3629                           ;!                                              3 COMMON     1     1      0
  3630                           ;!                           _delay_us
  3631                           ;! ---------------------------------------------------------------------------------
  3632                           ;! (1) _MUSIC_init                                           0     0      0       0
  3633                           ;! ---------------------------------------------------------------------------------
  3634                           ;! (1) _LED_Init                                             1     1      0       0
  3635                           ;!                                              2 COMMON     1     1      0
  3636                           ;! ---------------------------------------------------------------------------------
  3637                           ;! (1) _LCD_init                                             0     0      0    1450
  3638                           ;!                     _LCD_en_command
  3639                           ;! ---------------------------------------------------------------------------------
  3640                           ;! (1) _LCD_MPU_init                                         1     1      0       0
  3641                           ;!                                              2 COMMON     1     1      0
  3642                           ;! ---------------------------------------------------------------------------------
  3643                           ;! (1) _KEY_init                                             1     1      0       0
  3644                           ;!                                              2 COMMON     1     1      0
  3645                           ;! ---------------------------------------------------------------------------------
  3646                           ;! (1) _Initialize_UART                                      0     0      0     143
  3647                           ;!                   _UART_send_string
  3648                           ;! ---------------------------------------------------------------------------------
  3649                           ;! (2) _UART_send_string                                     2     0      2     143
  3650                           ;!                                              3 COMMON     2     0      2
  3651                           ;!                     _UART_send_char
  3652                           ;! ---------------------------------------------------------------------------------
  3653                           ;! (3) _UART_send_char                                       1     1      0      22
  3654                           ;!                                              2 COMMON     1     1      0
  3655                           ;! ---------------------------------------------------------------------------------
  3656                           ;! (1) _Initialize_INT                                       0     0      0       0
  3657                           ;! ---------------------------------------------------------------------------------
  3658                           ;! (1) _InitScrn                                             0     0      0    2846
  3659                           ;!                     _LCD_en_command
  3660                           ;!                           _delay_ms
  3661                           ;! ---------------------------------------------------------------------------------
  3662                           ;! (4) _LCD_en_command                                       1     1      0    1450
  3663                           ;!                                              8 COMMON     1     1      0
  3664                           ;!                           _delay_ms
  3665                           ;!                           _delay_us
  3666                           ;! ---------------------------------------------------------------------------------
  3667                           ;! (5) _delay_us                                             1     1      0      23
  3668                           ;!                                              2 COMMON     1     1      0
  3669                           ;! ---------------------------------------------------------------------------------
  3670                           ;! (3) _delay_ms                                             6     4      2    1396
  3671                           ;!                                              2 COMMON     6     4      2
  3672                           ;! ---------------------------------------------------------------------------------
  3673                           ;! (1) _Ds1302_Init                                          1     1      0       0
  3674                           ;!                                              2 COMMON     1     1      0
  3675                           ;! ---------------------------------------------------------------------------------
  3676                           ;! (1) _Ds1302Init                                           3     3      0     684
  3677                           ;!                                              6 COMMON     2     2      0
  3678                           ;!                        _Ds1302Write
  3679                           ;!                    _Trans_Alarm_bit
  3680                           ;! ---------------------------------------------------------------------------------
  3681                           ;! (2) _Trans_Alarm_bit                                      1     1      0       0
  3682                           ;!                                              2 COMMON     1     1      0
  3683                           ;! ---------------------------------------------------------------------------------
  3684                           ;! (3) _Ds1302Write                                          4     3      1     594
  3685                           ;!                                              2 COMMON     4     3      1
  3686                           ;! ---------------------------------------------------------------------------------
  3687                           ;! Estimated maximum stack depth 5
  3688                           ;! ---------------------------------------------------------------------------------
  3689                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3690                           ;! ---------------------------------------------------------------------------------
  3691                           ;! (8) _ISR                                                  2     2      0       0
  3692                           ;!                                              0 COMMON     2     2      0
  3693                           ;! ---------------------------------------------------------------------------------
  3694                           ;! Estimated maximum stack depth 8
  3695                           ;! ---------------------------------------------------------------------------------
  3696                           ;!
  3697                           ;! Call Graph Graphs:
  3698                           ;!
  3699                           ;! _main (ROOT)
  3700                           ;!   _ClearScreenOnce
  3701                           ;!     _FrameworkDisplay
  3702                           ;!       _LCD_write_char
  3703                           ;!         _LCD_en_dat
  3704                           ;!           _delay_us
  3705                           ;!         _LCD_set_xy
  3706                           ;!           _LCD_en_command
  3707                           ;!             _delay_ms
  3708                           ;!             _delay_us
  3709                           ;!     _LCD_en_command
  3710                           ;!       _delay_ms
  3711                           ;!       _delay_us
  3712                           ;!     _LCD_write_string
  3713                           ;!       _LCD_Busy
  3714                           ;!         _LCD_Read_dat
  3715                           ;!       _LCD_en_dat
  3716                           ;!         _delay_us
  3717                           ;!       _LCD_set_xy
  3718                           ;!         _LCD_en_command
  3719                           ;!           _delay_ms
  3720                           ;!           _delay_us
  3721                           ;!       _Y_position (ARG)
  3722                           ;!     _aFrameworkDisplay
  3723                           ;!       _LCD_write_char
  3724                           ;!         _LCD_en_dat
  3725                           ;!           _delay_us
  3726                           ;!         _LCD_set_xy
  3727                           ;!           _LCD_en_command
  3728                           ;!             _delay_ms
  3729                           ;!             _delay_us
  3730                           ;!   _Ds1302Init
  3731                           ;!     _Ds1302Write
  3732                           ;!     _Trans_Alarm_bit
  3733                           ;!   _Ds1302_Init
  3734                           ;!   _InitScrn
  3735                           ;!     _LCD_en_command
  3736                           ;!       _delay_ms
  3737                           ;!       _delay_us
  3738                           ;!     _delay_ms
  3739                           ;!   _Initialize_INT
  3740                           ;!   _Initialize_UART
  3741                           ;!     _UART_send_string
  3742                           ;!       _UART_send_char
  3743                           ;!   _KEY_init
  3744                           ;!   _LCD_MPU_init
  3745                           ;!   _LCD_init
  3746                           ;!     _LCD_en_command
  3747                           ;!       _delay_ms
  3748                           ;!       _delay_us
  3749                           ;!   _LED_Init
  3750                           ;!   _MUSIC_init
  3751                           ;!   _ModeSwitch
  3752                           ;!     _AlarmDataDisplay
  3753                           ;!       _LCD_write_char
  3754                           ;!         _LCD_en_dat
  3755                           ;!           _delay_us
  3756                           ;!         _LCD_set_xy
  3757                           ;!           _LCD_en_command
  3758                           ;!             _delay_ms
  3759                           ;!             _delay_us
  3760                           ;!     _ClearScreenOnce
  3761                           ;!       _FrameworkDisplay
  3762                           ;!         _LCD_write_char
  3763                           ;!           _LCD_en_dat
  3764                           ;!             _delay_us
  3765                           ;!           _LCD_set_xy
  3766                           ;!             _LCD_en_command
  3767                           ;!               _delay_ms
  3768                           ;!               _delay_us
  3769                           ;!       _LCD_en_command
  3770                           ;!         _delay_ms
  3771                           ;!         _delay_us
  3772                           ;!       _LCD_write_string
  3773                           ;!         _LCD_Busy
  3774                           ;!           _LCD_Read_dat
  3775                           ;!         _LCD_en_dat
  3776                           ;!           _delay_us
  3777                           ;!         _LCD_set_xy
  3778                           ;!           _LCD_en_command
  3779                           ;!             _delay_ms
  3780                           ;!             _delay_us
  3781                           ;!         _Y_position (ARG)
  3782                           ;!       _aFrameworkDisplay
  3783                           ;!         _LCD_write_char
  3784                           ;!           _LCD_en_dat
  3785                           ;!             _delay_us
  3786                           ;!           _LCD_set_xy
  3787                           ;!             _LCD_en_command
  3788                           ;!               _delay_ms
  3789                           ;!               _delay_us
  3790                           ;!     _Ds1302ReadTimeBCD
  3791                           ;!       _Ds1302Read
  3792                           ;!     _Ds1302WriteTime
  3793                           ;!       _Ds1302Write
  3794                           ;!     _LCD_write_string
  3795                           ;!       _LCD_Busy
  3796                           ;!         _LCD_Read_dat
  3797                           ;!       _LCD_en_dat
  3798                           ;!         _delay_us
  3799                           ;!       _LCD_set_xy
  3800                           ;!         _LCD_en_command
  3801                           ;!           _delay_ms
  3802                           ;!           _delay_us
  3803                           ;!       _Y_position (ARG)
  3804                           ;!     _TimeDataDisplay
  3805                           ;!       _LCD_write_char
  3806                           ;!         _LCD_en_dat
  3807                           ;!           _delay_us
  3808                           ;!         _LCD_set_xy
  3809                           ;!           _LCD_en_command
  3810                           ;!             _delay_ms
  3811                           ;!             _delay_us
  3812                           ;!       _LCD_write_string
  3813                           ;!         _LCD_Busy
  3814                           ;!           _LCD_Read_dat
  3815                           ;!         _LCD_en_dat
  3816                           ;!           _delay_us
  3817                           ;!         _LCD_set_xy
  3818                           ;!           _LCD_en_command
  3819                           ;!             _delay_ms
  3820                           ;!             _delay_us
  3821                           ;!         _Y_position (ARG)
  3822                           ;!     _Trans_Alarm_bit
  3823                           ;!     _Trans_Time_bit
  3824                           ;!     _Y_position
  3825                           ;!     _delay_ms
  3826                           ;!   _MusicDisplay
  3827                           ;!     _LCD_write_char
  3828                           ;!       _LCD_en_dat
  3829                           ;!         _delay_us
  3830                           ;!       _LCD_set_xy
  3831                           ;!         _LCD_en_command
  3832                           ;!           _delay_ms
  3833                           ;!           _delay_us
  3834                           ;!     _LCD_write_string
  3835                           ;!       _LCD_Busy
  3836                           ;!         _LCD_Read_dat
  3837                           ;!       _LCD_en_dat
  3838                           ;!         _delay_us
  3839                           ;!       _LCD_set_xy
  3840                           ;!         _LCD_en_command
  3841                           ;!           _delay_ms
  3842                           ;!           _delay_us
  3843                           ;!       _Y_position (ARG)
  3844                           ;!   _MusicPlay
  3845                           ;!     _PwmTone
  3846                           ;!     _SixteenNoteDelay
  3847                           ;!       _delay_ms
  3848                           ;!   _PwmInit
  3849                           ;!   _check_Alarm
  3850                           ;!     _beep_ms
  3851                           ;!       _PwmTone
  3852                           ;!       _delay_ms
  3853                           ;!   _keyscan
  3854                           ;!     _check_K1
  3855                           ;!       _delay_ms
  3856                           ;!     _check_K2
  3857                           ;!       _delay_ms
  3858                           ;!     _check_K3
  3859                           ;!       _delay_ms
  3860                           ;!     _check_K4
  3861                           ;!       _delay_ms
  3862                           ;!     _check_K5
  3863                           ;!       _delay_ms
  3864                           ;!     _check_K6
  3865                           ;!       _delay_ms
  3866                           ;!
  3867                           ;! _ISR (ROOT)
  3868                           ;!
  3869                           
  3870                           ;! Address spaces:
  3871                           
  3872                           ;!Name               Size   Autos  Total    Cost      Usage
  3873                           ;!BANK3               60      0       0       9        0.0%
  3874                           ;!BITBANK3            60      0       0       8        0.0%
  3875                           ;!SFR3                 0      0       0       4        0.0%
  3876                           ;!BITSFR3              0      0       0       4        0.0%
  3877                           ;!BANK2               60      0       0      11        0.0%
  3878                           ;!BITBANK2            60      0       0      10        0.0%
  3879                           ;!SFR2                 0      0       0       5        0.0%
  3880                           ;!BITSFR2              0      0       0       5        0.0%
  3881                           ;!BANK1               50      0       E       7       17.5%
  3882                           ;!BITBANK1            50      0       0       6        0.0%
  3883                           ;!SFR1                 0      0       0       2        0.0%
  3884                           ;!BITSFR1              0      0       0       2        0.0%
  3885                           ;!BANK0               50      C      49       5       91.3%
  3886                           ;!BITBANK0            50      0       0       4        0.0%
  3887                           ;!SFR0                 0      0       0       1        0.0%
  3888                           ;!BITSFR0              0      0       0       1        0.0%
  3889                           ;!COMMON               E      A       C       1       85.7%
  3890                           ;!BITCOMMON            E      0       1       0        7.1%
  3891                           ;!CODE                 0      0       0       0        0.0%
  3892                           ;!DATA                 0      0      63      12        0.0%
  3893                           ;!ABS                  0      0      63       3        0.0%
  3894                           ;!NULL                 0      0       0       0        0.0%
  3895                           ;!STACK                0      0       0       2        0.0%
  3896                           ;!EEDATA             100      0       0       0        0.0%
  3897                           
  3898                           	global	_main
  3899                           
  3900 ;; *************** function _main *****************
  3901 ;; Defined at:
  3902 ;;		line 50 in file "main.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : B00/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3916 ;;      Params:         0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels required when called:    8
  3922 ;; This function calls:
  3923 ;;		_ClearScreenOnce
  3924 ;;		_Ds1302Init
  3925 ;;		_Ds1302_Init
  3926 ;;		_InitScrn
  3927 ;;		_Initialize_INT
  3928 ;;		_Initialize_UART
  3929 ;;		_KEY_init
  3930 ;;		_LCD_MPU_init
  3931 ;;		_LCD_init
  3932 ;;		_LED_Init
  3933 ;;		_MUSIC_init
  3934 ;;		_ModeSwitch
  3935 ;;		_MusicDisplay
  3936 ;;		_MusicPlay
  3937 ;;		_PwmInit
  3938 ;;		_check_Alarm
  3939 ;;		_keyscan
  3940 ;; This function is called by:
  3941 ;;		Startup code after reset
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  3945                           	file	"main.c"
  3946                           	line	50
  3947                           global __pmaintext
  3948                           __pmaintext:	;psect for function _main
  3949  0CD8                     psect	maintext
  3950                           	file	"main.c"
  3951                           	line	50
  3952                           	global	__size_of_main
  3953                           	__size_of_main	equ	__end_of_main-_main
  3954  0065                     	
  3955                           _main:	
  3956  0CD8                     ;incstack = 0
  3957                           	opt	stack 0
  3958                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3959                           	line	53
  3960                           	
  3961                           l4745:	
  3962  0CD8                     ;main.c: 53: Initialize_UART();
  3963                           	fcall	_Initialize_UART
  3964  0CD8  160A  118A  2429  120A  158A  	line	54
  3965                           	
  3966                           l4747:	
  3967  0CDD                     ;main.c: 54: Initialize_INT();
  3968                           	fcall	_Initialize_INT
  3969  0CDD  160A  118A  22B6  120A  158A  	line	56
  3970                           	
  3971                           l4749:	
  3972  0CE2                     ;main.c: 56: Ds1302_Init();
  3973                           	fcall	_Ds1302_Init
  3974  0CE2  160A  118A  22AF  120A  158A  	line	57
  3975                           	
  3976                           l4751:	
  3977  0CE7                     ;main.c: 57: Ds1302Init();
  3978                           	fcall	_Ds1302Init
  3979  0CE7  160A  118A  26BE  120A  158A  	line	59
  3980                           	
  3981                           l4753:	
  3982  0CEC                     ;main.c: 59: LCD_MPU_init();
  3983                           	fcall	_LCD_MPU_init
  3984  0CEC  160A  118A  22E5  120A  158A  	line	60
  3985                           	
  3986                           l4755:	
  3987  0CF1                     ;main.c: 60: LCD_init();
  3988                           	fcall	_LCD_init
  3989  0CF1  160A  118A  2448  120A  158A  	line	61
  3990                           	
  3991                           l4757:	
  3992  0CF6                     ;main.c: 61: InitScrn();
  3993                           	fcall	_InitScrn
  3994  0CF6  160A  118A  2301  120A  158A  	line	63
  3995                           	
  3996                           l4759:	
  3997  0CFB                     ;main.c: 63: LED_Init();
  3998                           	fcall	_LED_Init
  3999  0CFB  160A  118A  22CD  120A  158A  	line	65
  4000                           	
  4001                           l4761:	
  4002  0D00                     ;main.c: 65: MUSIC_init();
  4003                           	fcall	_MUSIC_init
  4004  0D00  160A  118A  22AA  120A  158A  	line	66
  4005                           ;main.c: 66: KEY_init();
  4006                           	fcall	_KEY_init
  4007  0D05  160A  118A  2322  120A  158A  	line	67
  4008                           ;main.c: 67: PwmInit();
  4009                           	fcall	_PwmInit
  4010  0D0A  160A  118A  22BD  120A  158A  	line	69
  4011                           ;main.c: 69: while(1)
  4012                           	
  4013                           l68:	
  4014  0D0F                     	line	72
  4015                           ;main.c: 70: {;main.c: 72: keyscan();
  4016                           	fcall	_keyscan
  4017  0D0F  160A  118A  2467  120A  158A  	line	74
  4018                           	
  4019                           l4763:	
  4020  0D14                     ;main.c: 74: if(!isMusicMode)
  4021                           	btfsc	(_isMusicMode/8),(_isMusicMode)&7
  4022  0D14  18FA               	goto	u6721
  4023  0D15  2D17               	goto	u6720
  4024  0D16  2D18               u6721:
  4025  0D17                     	goto	l4769
  4026  0D17  2D23               u6720:
  4027  0D18                     	line	77
  4028                           	
  4029                           l4765:	
  4030  0D18                     ;main.c: 75: {;main.c: 77: check_Alarm();
  4031                           	fcall	_check_Alarm
  4032  0D18  120A  158A  2374  120A  158A  	line	79
  4033                           	
  4034                           l4767:	
  4035  0D1D                     ;main.c: 79: ModeSwitch();
  4036                           	fcall	_ModeSwitch
  4037  0D1D  120A  118A  2038  120A  158A  	line	80
  4038                           ;main.c: 80: }
  4039                           	goto	l68
  4040  0D22  2D0F               	line	81
  4041                           	
  4042                           l69:	
  4043  0D23                     	line	83
  4044                           	
  4045                           l4769:	
  4046  0D23                     ;main.c: 81: else;main.c: 82: {;main.c: 83: ClearScreenOnce();
  4047                           	fcall	_ClearScreenOnce
  4048  0D23  120A  158A  23BC  120A  158A  	line	85
  4049                           ;main.c: 85: MusicDisplay();
  4050                           	fcall	_MusicDisplay
  4051  0D28  120A  158A  2417  120A  158A  	line	87
  4052                           	
  4053                           l4771:	
  4054  0D2D                     ;main.c: 87: if(isMusicPlaying)
  4055                           	btfss	(_isMusicPlaying/8),(_isMusicPlaying)&7
  4056  0D2D  1D7A               	goto	u6731
  4057  0D2E  2D30               	goto	u6730
  4058  0D2F  2D31               u6731:
  4059  0D30                     	goto	l68
  4060  0D30  2D0F               u6730:
  4061  0D31                     	line	88
  4062                           	
  4063                           l4773:	
  4064  0D31                     ;main.c: 88: MusicPlay();
  4065                           	fcall	_MusicPlay
  4066  0D31  120A  158A  26F8  120A  158A  	goto	l68
  4067  0D36  2D0F               	
  4068                           l71:	
  4069  0D37                     	goto	l68
  4070  0D37  2D0F               	line	89
  4071                           	
  4072                           l70:	
  4073  0D38                     	goto	l68
  4074  0D38  2D0F               	line	90
  4075                           	
  4076                           l72:	
  4077  0D39                     	line	69
  4078                           	goto	l68
  4079  0D39  2D0F               	
  4080                           l73:	
  4081  0D3A                     	line	91
  4082                           	
  4083                           l74:	
  4084  0D3A                     	global	start
  4085                           	ljmp	start
  4086  0D3A  120A  118A  280C   	opt stack 0
  4087                           GLOBAL	__end_of_main
  4088                           	__end_of_main:
  4089  0D3D                     	signat	_main,89
  4090                           	global	_keyscan
  4091                           
  4092 ;; *************** function _keyscan *****************
  4093 ;; Defined at:
  4094 ;;		line 161 in file "KEY.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0, pclath, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4108 ;;      Params:         0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0
  4111 ;;      Totals:         0       0       0       0       0
  4112 ;;Total ram usage:        0 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    3
  4115 ;; This function calls:
  4116 ;;		_check_K1
  4117 ;;		_check_K2
  4118 ;;		_check_K3
  4119 ;;		_check_K4
  4120 ;;		_check_K5
  4121 ;;		_check_K6
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4127                           	file	"KEY.c"
  4128                           	line	161
  4129                           global __ptext1
  4130                           __ptext1:	;psect for function _keyscan
  4131  1467                     psect	text1
  4132                           	file	"KEY.c"
  4133                           	line	161
  4134                           	global	__size_of_keyscan
  4135                           	__size_of_keyscan	equ	__end_of_keyscan-_keyscan
  4136  001F                     	
  4137                           _keyscan:	
  4138  1467                     ;incstack = 0
  4139                           	opt	stack 4
  4140                           ; Regs used in _keyscan: [wreg+status,2+status,0+pclath+cstack]
  4141                           	line	162
  4142                           	
  4143                           l4115:	
  4144  1467                     ;KEY.c: 162: check_K1();
  4145                           	fcall	_check_K1
  4146  1467  160A  118A  257D  160A  118A  	line	163
  4147                           ;KEY.c: 163: check_K2();
  4148                           	fcall	_check_K2
  4149  146C  160A  118A  2486  160A  118A  	line	164
  4150                           ;KEY.c: 164: check_K3();
  4151                           	fcall	_check_K3
  4152  1471  160A  118A  24A6  160A  118A  	line	165
  4153                           ;KEY.c: 165: check_K4();
  4154                           	fcall	_check_K4
  4155  1476  160A  118A  2752  160A  118A  	line	166
  4156                           ;KEY.c: 166: check_K5();
  4157                           	fcall	_check_K5
  4158  147B  160A  118A  27A9  160A  118A  	line	167
  4159                           ;KEY.c: 167: check_K6();
  4160                           	fcall	_check_K6
  4161  1480  120A  118A  27DE  160A  118A  	line	168
  4162                           	
  4163                           l489:	
  4164  1485                     	return
  4165  1485  0008               	opt stack 0
  4166                           GLOBAL	__end_of_keyscan
  4167                           	__end_of_keyscan:
  4168  1486                     	signat	_keyscan,89
  4169                           	global	_check_K6
  4170                           
  4171 ;; *************** function _check_K6 *****************
  4172 ;; Defined at:
  4173 ;;		line 146 in file "KEY.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      unsigned char 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0, pclath, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4187 ;;      Params:         0       0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0
  4190 ;;      Totals:         0       0       0       0       0
  4191 ;;Total ram usage:        0 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    2
  4194 ;; This function calls:
  4195 ;;		_delay_ms
  4196 ;; This function is called by:
  4197 ;;		_keyscan
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4201                           	line	146
  4202                           global __ptext2
  4203                           __ptext2:	;psect for function _check_K6
  4204  07DE                     psect	text2
  4205                           	file	"KEY.c"
  4206                           	line	146
  4207                           	global	__size_of_check_K6
  4208                           	__size_of_check_K6	equ	__end_of_check_K6-_check_K6
  4209  0022                     	
  4210                           _check_K6:	
  4211  07DE                     ;incstack = 0
  4212                           	opt	stack 4
  4213                           ; Regs used in _check_K6: [wreg+status,2+status,0+pclath+cstack]
  4214                           	line	147
  4215                           	
  4216                           l4089:	
  4217  07DE                     ;KEY.c: 147: if (!PORTBbits.RB7) {
  4218                           	bcf	status, 5	;RP0=0, select bank0
  4219  07DE  1283               	bcf	status, 6	;RP1=0, select bank0
  4220  07DF  1303               	btfsc	(6),7	;volatile
  4221  07E0  1B86               	goto	u5091
  4222  07E1  2FE3               	goto	u5090
  4223  07E2  2FE4               u5091:
  4224  07E3                     	goto	l486
  4225  07E3  2FFF               u5090:
  4226  07E4                     	line	148
  4227                           	
  4228                           l4091:	
  4229  07E4                     ;KEY.c: 148: delay_ms(10);
  4230                           	movlw	0Ah
  4231  07E4  300A               	movwf	(delay_ms@n)
  4232  07E5  00F2               	movlw	0
  4233  07E6  3000               	movwf	((delay_ms@n))+1
  4234  07E7  00F3               	fcall	_delay_ms
  4235  07E8  160A  118A  2554  120A  118A  	line	149
  4236                           	
  4237                           l4093:	
  4238  07ED                     ;KEY.c: 149: if (!PORTBbits.RB7) {
  4239                           	bcf	status, 5	;RP0=0, select bank0
  4240  07ED  1283               	bcf	status, 6	;RP1=0, select bank0
  4241  07EE  1303               	btfsc	(6),7	;volatile
  4242  07EF  1B86               	goto	u5101
  4243  07F0  2FF2               	goto	u5100
  4244  07F1  2FF3               u5101:
  4245  07F2                     	goto	l486
  4246  07F2  2FFF               u5100:
  4247  07F3                     	goto	l483
  4248  07F3  2FF5               	line	150
  4249                           	
  4250                           l4095:	
  4251  07F4                     ;KEY.c: 150: while (!PORTBbits.RB7);
  4252                           	goto	l483
  4253  07F4  2FF5               	
  4254                           l484:	
  4255  07F5                     	
  4256                           l483:	
  4257  07F5                     	btfss	(6),7	;volatile
  4258  07F5  1F86               	goto	u5111
  4259  07F6  2FF8               	goto	u5110
  4260  07F7  2FF9               u5111:
  4261  07F8                     	goto	l483
  4262  07F8  2FF5               u5110:
  4263  07F9                     	goto	l4097
  4264  07F9  2FFA               	
  4265                           l485:	
  4266  07FA                     	line	151
  4267                           	
  4268                           l4097:	
  4269  07FA                     ;KEY.c: 151: isMusicPlaying = ~isMusicPlaying;
  4270                           	movlw	1<<((_isMusicPlaying)&7)
  4271  07FA  3004               	xorwf	((_isMusicPlaying)/8),f
  4272  07FB  06FA               	goto	l486
  4273  07FC  2FFF               	line	152
  4274                           	
  4275                           l4099:	
  4276  07FD                     ;KEY.c: 152: return 1;;	Return value of _check_K6 is never used
  4277                           	goto	l486
  4278  07FD  2FFF               	line	153
  4279                           	
  4280                           l482:	
  4281  07FE                     	goto	l486
  4282  07FE  2FFF               	line	154
  4283                           	
  4284                           l481:	
  4285  07FF                     	line	156
  4286                           ;KEY.c: 153: };KEY.c: 154: };KEY.c: 155: return 0;;	Return value of _check_K6 is never u
                                 sed
  4287                           	
  4288                           l486:	
  4289  07FF                     	return
  4290  07FF  0008               	opt stack 0
  4291                           GLOBAL	__end_of_check_K6
  4292                           	__end_of_check_K6:
  4293  0800                     	signat	_check_K6,89
  4294                           	global	_check_K5
  4295                           
  4296 ;; *************** function _check_K5 *****************
  4297 ;; Defined at:
  4298 ;;		line 119 in file "KEY.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      unsigned char 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0, pclath, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4312 ;;      Params:         0       0       0       0       0
  4313 ;;      Locals:         0       0       0       0       0
  4314 ;;      Temps:          1       0       0       0       0
  4315 ;;      Totals:         1       0       0       0       0
  4316 ;;Total ram usage:        1 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    2
  4319 ;; This function calls:
  4320 ;;		_delay_ms
  4321 ;; This function is called by:
  4322 ;;		_keyscan
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4326                           	line	119
  4327                           global __ptext3
  4328                           __ptext3:	;psect for function _check_K5
  4329  17A9                     psect	text3
  4330                           	file	"KEY.c"
  4331                           	line	119
  4332                           	global	__size_of_check_K5
  4333                           	__size_of_check_K5	equ	__end_of_check_K5-_check_K5
  4334  0057                     	
  4335                           _check_K5:	
  4336  17A9                     ;incstack = 0
  4337                           	opt	stack 4
  4338                           ; Regs used in _check_K5: [wreg+status,2+status,0+pclath+cstack]
  4339                           	line	120
  4340                           	
  4341                           l4059:	
  4342  17A9                     ;KEY.c: 120: if (!PORTBbits.RB6) {
  4343                           	bcf	status, 5	;RP0=0, select bank0
  4344  17A9  1283               	bcf	status, 6	;RP1=0, select bank0
  4345  17AA  1303               	btfsc	(6),6	;volatile
  4346  17AB  1B06               	goto	u5001
  4347  17AC  2FAE               	goto	u5000
  4348  17AD  2FAF               u5001:
  4349  17AE                     	goto	l478
  4350  17AE  2FFF               u5000:
  4351  17AF                     	line	121
  4352                           	
  4353                           l4061:	
  4354  17AF                     ;KEY.c: 121: delay_ms(10);
  4355                           	movlw	0Ah
  4356  17AF  300A               	movwf	(delay_ms@n)
  4357  17B0  00F2               	movlw	0
  4358  17B1  3000               	movwf	((delay_ms@n))+1
  4359  17B2  00F3               	fcall	_delay_ms
  4360  17B3  160A  118A  2554  160A  118A  	line	122
  4361                           	
  4362                           l4063:	
  4363  17B8                     ;KEY.c: 122: if (!PORTBbits.RB6) {
  4364                           	bcf	status, 5	;RP0=0, select bank0
  4365  17B8  1283               	bcf	status, 6	;RP1=0, select bank0
  4366  17B9  1303               	btfsc	(6),6	;volatile
  4367  17BA  1B06               	goto	u5011
  4368  17BB  2FBD               	goto	u5010
  4369  17BC  2FBE               u5011:
  4370  17BD                     	goto	l478
  4371  17BD  2FFF               u5010:
  4372  17BE                     	goto	l467
  4373  17BE  2FC0               	line	123
  4374                           	
  4375                           l4065:	
  4376  17BF                     ;KEY.c: 123: while (!PORTBbits.RB6);
  4377                           	goto	l467
  4378  17BF  2FC0               	
  4379                           l468:	
  4380  17C0                     	
  4381                           l467:	
  4382  17C0                     	btfss	(6),6	;volatile
  4383  17C0  1F06               	goto	u5021
  4384  17C1  2FC3               	goto	u5020
  4385  17C2  2FC4               u5021:
  4386  17C3                     	goto	l467
  4387  17C3  2FC0               u5020:
  4388  17C4                     	
  4389                           l469:	
  4390  17C4                     	line	124
  4391                           ;KEY.c: 124: if (isMusicMode) {
  4392                           	btfss	(_isMusicMode/8),(_isMusicMode)&7
  4393  17C4  1CFA               	goto	u5031
  4394  17C5  2FC7               	goto	u5030
  4395  17C6  2FC8               u5031:
  4396  17C7                     	goto	l4075
  4397  17C7  2FD7               u5030:
  4398  17C8                     	line	125
  4399                           	
  4400                           l4067:	
  4401  17C8                     ;KEY.c: 125: SongNum++;
  4402                           	movlw	low(01h)
  4403  17C8  3001               	movwf	(??_check_K5+0)+0
  4404  17C9  00F8               	movf	(??_check_K5+0)+0,w
  4405  17CA  0878               	addwf	(_SongNum),f
  4406  17CB  07C2               	line	126
  4407                           	
  4408                           l4069:	
  4409  17CC                     ;KEY.c: 126: if (SongNum > 3) {
  4410                           	movf	(_SongNum),w
  4411  17CC  0842               	xorlw	80h
  4412  17CD  3A80               	addlw	-((04h)^80h)
  4413  17CE  3E7C               	skipc
  4414  17CF  1C03               	goto	u5041
  4415  17D0  2FD2               	goto	u5040
  4416  17D1  2FD3               u5041:
  4417  17D2                     	goto	l4073
  4418  17D2  2FD5               u5040:
  4419  17D3                     	line	127
  4420                           	
  4421                           l4071:	
  4422  17D3                     ;KEY.c: 127: SongNum = 0;
  4423                           	clrf	(_SongNum)
  4424  17D3  01C2               	goto	l4073
  4425  17D4  2FD5               	line	128
  4426                           	
  4427                           l471:	
  4428  17D5                     	line	129
  4429                           	
  4430                           l4073:	
  4431  17D5                     ;KEY.c: 128: };KEY.c: 129: clear_flag = 1;
  4432                           	bsf	(_clear_flag/8),(_clear_flag)&7
  4433  17D5  147A               	line	130
  4434                           ;KEY.c: 130: } else {
  4435                           	goto	l478
  4436  17D6  2FFF               	
  4437                           l470:	
  4438  17D7                     	line	131
  4439                           	
  4440                           l4075:	
  4441  17D7                     ;KEY.c: 131: cursor_addr++;
  4442                           	movlw	low(01h)
  4443  17D7  3001               	movwf	(??_check_K5+0)+0
  4444  17D8  00F8               	movf	(??_check_K5+0)+0,w
  4445  17D9  0878               	addwf	(_cursor_addr),f
  4446  17DA  07AA               	line	132
  4447                           ;KEY.c: 132: if (Mode == 1) {
  4448                           		decf	((_Mode)),w
  4449  17DB  032B               	btfss	status,2
  4450  17DC  1D03               	goto	u5051
  4451  17DD  2FDF               	goto	u5050
  4452  17DE  2FE0               u5051:
  4453  17DF                     	goto	l4081
  4454  17DF  2FEA               u5050:
  4455  17E0                     	line	133
  4456                           	
  4457                           l4077:	
  4458  17E0                     ;KEY.c: 133: if (cursor_addr > 12)
  4459                           	movf	(_cursor_addr),w
  4460  17E0  082A               	xorlw	80h
  4461  17E1  3A80               	addlw	-((0Dh)^80h)
  4462  17E2  3E73               	skipc
  4463  17E3  1C03               	goto	u5061
  4464  17E4  2FE6               	goto	u5060
  4465  17E5  2FE7               u5061:
  4466  17E6                     	goto	l478
  4467  17E6  2FFF               u5060:
  4468  17E7                     	line	134
  4469                           	
  4470                           l4079:	
  4471  17E7                     ;KEY.c: 134: cursor_addr = 0;
  4472                           	clrf	(_cursor_addr)
  4473  17E7  01AA               	goto	l478
  4474  17E8  2FFF               	
  4475                           l474:	
  4476  17E9                     	line	135
  4477                           ;KEY.c: 135: } else if (Mode == 2) {
  4478                           	goto	l478
  4479  17E9  2FFF               	
  4480                           l473:	
  4481  17EA                     	
  4482                           l4081:	
  4483  17EA                     		movlw	2
  4484  17EA  3002               	xorwf	((_Mode)),w
  4485  17EB  062B               	btfss	status,2
  4486  17EC  1D03               	goto	u5071
  4487  17ED  2FEF               	goto	u5070
  4488  17EE  2FF0               u5071:
  4489  17EF                     	goto	l478
  4490  17EF  2FFF               u5070:
  4491  17F0                     	line	136
  4492                           	
  4493                           l4083:	
  4494  17F0                     ;KEY.c: 136: if (cursor_addr > 5)
  4495                           	movf	(_cursor_addr),w
  4496  17F0  082A               	xorlw	80h
  4497  17F1  3A80               	addlw	-((06h)^80h)
  4498  17F2  3E7A               	skipc
  4499  17F3  1C03               	goto	u5081
  4500  17F4  2FF6               	goto	u5080
  4501  17F5  2FF7               u5081:
  4502  17F6                     	goto	l478
  4503  17F6  2FFF               u5080:
  4504  17F7                     	line	137
  4505                           	
  4506                           l4085:	
  4507  17F7                     ;KEY.c: 137: cursor_addr = 0;
  4508                           	clrf	(_cursor_addr)
  4509  17F7  01AA               	goto	l478
  4510  17F8  2FFF               	
  4511                           l477:	
  4512  17F9                     	goto	l478
  4513  17F9  2FFF               	line	138
  4514                           	
  4515                           l476:	
  4516  17FA                     	goto	l478
  4517  17FA  2FFF               	line	139
  4518                           	
  4519                           l475:	
  4520  17FB                     	goto	l478
  4521  17FB  2FFF               	
  4522                           l472:	
  4523  17FC                     	goto	l478
  4524  17FC  2FFF               	line	140
  4525                           	
  4526                           l4087:	
  4527  17FD                     ;KEY.c: 138: };KEY.c: 139: };KEY.c: 140: return 1;;	Return value of _check_K5 is never u
                                 sed
  4528                           	goto	l478
  4529  17FD  2FFF               	line	141
  4530                           	
  4531                           l466:	
  4532  17FE                     	goto	l478
  4533  17FE  2FFF               	line	142
  4534                           	
  4535                           l465:	
  4536  17FF                     	line	144
  4537                           ;KEY.c: 141: };KEY.c: 142: };KEY.c: 143: return 0;;	Return value of _check_K5 is never u
                                 sed
  4538                           	
  4539                           l478:	
  4540  17FF                     	return
  4541  17FF  0008               	opt stack 0
  4542                           GLOBAL	__end_of_check_K5
  4543                           	__end_of_check_K5:
  4544  1800                     	signat	_check_K5,89
  4545                           	global	_check_K4
  4546                           
  4547 ;; *************** function _check_K4 *****************
  4548 ;; Defined at:
  4549 ;;		line 92 in file "KEY.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;		None
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      unsigned char 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0, pclath, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4563 ;;      Params:         0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0
  4565 ;;      Temps:          1       0       0       0       0
  4566 ;;      Totals:         1       0       0       0       0
  4567 ;;Total ram usage:        1 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    2
  4570 ;; This function calls:
  4571 ;;		_delay_ms
  4572 ;; This function is called by:
  4573 ;;		_keyscan
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4577                           	line	92
  4578                           global __ptext4
  4579                           __ptext4:	;psect for function _check_K4
  4580  1752                     psect	text4
  4581                           	file	"KEY.c"
  4582                           	line	92
  4583                           	global	__size_of_check_K4
  4584                           	__size_of_check_K4	equ	__end_of_check_K4-_check_K4
  4585  0057                     	
  4586                           _check_K4:	
  4587  1752                     ;incstack = 0
  4588                           	opt	stack 4
  4589                           ; Regs used in _check_K4: [wreg+status,2+status,0+pclath+cstack]
  4590                           	line	93
  4591                           	
  4592                           l4029:	
  4593  1752                     ;KEY.c: 93: if (!PORTBbits.RB5) {
  4594                           	bcf	status, 5	;RP0=0, select bank0
  4595  1752  1283               	bcf	status, 6	;RP1=0, select bank0
  4596  1753  1303               	btfsc	(6),5	;volatile
  4597  1754  1A86               	goto	u4911
  4598  1755  2F57               	goto	u4910
  4599  1756  2F58               u4911:
  4600  1757                     	goto	l462
  4601  1757  2FA8               u4910:
  4602  1758                     	line	94
  4603                           	
  4604                           l4031:	
  4605  1758                     ;KEY.c: 94: delay_ms(10);
  4606                           	movlw	0Ah
  4607  1758  300A               	movwf	(delay_ms@n)
  4608  1759  00F2               	movlw	0
  4609  175A  3000               	movwf	((delay_ms@n))+1
  4610  175B  00F3               	fcall	_delay_ms
  4611  175C  160A  118A  2554  160A  118A  	line	95
  4612                           	
  4613                           l4033:	
  4614  1761                     ;KEY.c: 95: if (!PORTBbits.RB5) {
  4615                           	bcf	status, 5	;RP0=0, select bank0
  4616  1761  1283               	bcf	status, 6	;RP1=0, select bank0
  4617  1762  1303               	btfsc	(6),5	;volatile
  4618  1763  1A86               	goto	u4921
  4619  1764  2F66               	goto	u4920
  4620  1765  2F67               u4921:
  4621  1766                     	goto	l462
  4622  1766  2FA8               u4920:
  4623  1767                     	goto	l451
  4624  1767  2F69               	line	96
  4625                           	
  4626                           l4035:	
  4627  1768                     ;KEY.c: 96: while (!PORTBbits.RB5);
  4628                           	goto	l451
  4629  1768  2F69               	
  4630                           l452:	
  4631  1769                     	
  4632                           l451:	
  4633  1769                     	btfss	(6),5	;volatile
  4634  1769  1E86               	goto	u4931
  4635  176A  2F6C               	goto	u4930
  4636  176B  2F6D               u4931:
  4637  176C                     	goto	l451
  4638  176C  2F69               u4930:
  4639  176D                     	
  4640                           l453:	
  4641  176D                     	line	97
  4642                           ;KEY.c: 97: if (isMusicMode) {
  4643                           	btfss	(_isMusicMode/8),(_isMusicMode)&7
  4644  176D  1CFA               	goto	u4941
  4645  176E  2F70               	goto	u4940
  4646  176F  2F71               u4941:
  4647  1770                     	goto	l4045
  4648  1770  2F80               u4940:
  4649  1771                     	line	98
  4650                           	
  4651                           l4037:	
  4652  1771                     ;KEY.c: 98: SongNum--;
  4653                           	movlw	low(-1)
  4654  1771  30FF               	movwf	(??_check_K4+0)+0
  4655  1772  00F8               	movf	(??_check_K4+0)+0,w
  4656  1773  0878               	addwf	(_SongNum),f
  4657  1774  07C2               	line	99
  4658                           	
  4659                           l4039:	
  4660  1775                     ;KEY.c: 99: if (SongNum < 0) {
  4661                           	btfss	(_SongNum),7
  4662  1775  1FC2               	goto	u4951
  4663  1776  2F78               	goto	u4950
  4664  1777  2F79               u4951:
  4665  1778                     	goto	l4043
  4666  1778  2F7E               u4950:
  4667  1779                     	line	100
  4668                           	
  4669                           l4041:	
  4670  1779                     ;KEY.c: 100: SongNum = 3;
  4671                           	movlw	low(03h)
  4672  1779  3003               	movwf	(??_check_K4+0)+0
  4673  177A  00F8               	movf	(??_check_K4+0)+0,w
  4674  177B  0878               	movwf	(_SongNum)
  4675  177C  00C2               	goto	l4043
  4676  177D  2F7E               	line	101
  4677                           	
  4678                           l455:	
  4679  177E                     	line	102
  4680                           	
  4681                           l4043:	
  4682  177E                     ;KEY.c: 101: };KEY.c: 102: clear_flag = 1;
  4683                           	bsf	(_clear_flag/8),(_clear_flag)&7
  4684  177E  147A               	line	103
  4685                           ;KEY.c: 103: } else {
  4686                           	goto	l462
  4687  177F  2FA8               	
  4688                           l454:	
  4689  1780                     	line	104
  4690                           	
  4691                           l4045:	
  4692  1780                     ;KEY.c: 104: cursor_addr--;
  4693                           	movlw	low(-1)
  4694  1780  30FF               	movwf	(??_check_K4+0)+0
  4695  1781  00F8               	movf	(??_check_K4+0)+0,w
  4696  1782  0878               	addwf	(_cursor_addr),f
  4697  1783  07AA               	line	105
  4698                           ;KEY.c: 105: if (Mode == 1) {
  4699                           		decf	((_Mode)),w
  4700  1784  032B               	btfss	status,2
  4701  1785  1D03               	goto	u4961
  4702  1786  2F88               	goto	u4960
  4703  1787  2F89               u4961:
  4704  1788                     	goto	l4051
  4705  1788  2F93               u4960:
  4706  1789                     	line	106
  4707                           	
  4708                           l4047:	
  4709  1789                     ;KEY.c: 106: if (cursor_addr < 0)
  4710                           	btfss	(_cursor_addr),7
  4711  1789  1FAA               	goto	u4971
  4712  178A  2F8C               	goto	u4970
  4713  178B  2F8D               u4971:
  4714  178C                     	goto	l462
  4715  178C  2FA8               u4970:
  4716  178D                     	line	107
  4717                           	
  4718                           l4049:	
  4719  178D                     ;KEY.c: 107: cursor_addr = 12;
  4720                           	movlw	low(0Ch)
  4721  178D  300C               	movwf	(??_check_K4+0)+0
  4722  178E  00F8               	movf	(??_check_K4+0)+0,w
  4723  178F  0878               	movwf	(_cursor_addr)
  4724  1790  00AA               	goto	l462
  4725  1791  2FA8               	
  4726                           l458:	
  4727  1792                     	line	108
  4728                           ;KEY.c: 108: } else if (Mode == 2) {
  4729                           	goto	l462
  4730  1792  2FA8               	
  4731                           l457:	
  4732  1793                     	
  4733                           l4051:	
  4734  1793                     		movlw	2
  4735  1793  3002               	xorwf	((_Mode)),w
  4736  1794  062B               	btfss	status,2
  4737  1795  1D03               	goto	u4981
  4738  1796  2F98               	goto	u4980
  4739  1797  2F99               u4981:
  4740  1798                     	goto	l462
  4741  1798  2FA8               u4980:
  4742  1799                     	line	109
  4743                           	
  4744                           l4053:	
  4745  1799                     ;KEY.c: 109: if (cursor_addr < 0)
  4746                           	btfss	(_cursor_addr),7
  4747  1799  1FAA               	goto	u4991
  4748  179A  2F9C               	goto	u4990
  4749  179B  2F9D               u4991:
  4750  179C                     	goto	l462
  4751  179C  2FA8               u4990:
  4752  179D                     	line	110
  4753                           	
  4754                           l4055:	
  4755  179D                     ;KEY.c: 110: cursor_addr = 5;
  4756                           	movlw	low(05h)
  4757  179D  3005               	movwf	(??_check_K4+0)+0
  4758  179E  00F8               	movf	(??_check_K4+0)+0,w
  4759  179F  0878               	movwf	(_cursor_addr)
  4760  17A0  00AA               	goto	l462
  4761  17A1  2FA8               	
  4762                           l461:	
  4763  17A2                     	goto	l462
  4764  17A2  2FA8               	line	111
  4765                           	
  4766                           l460:	
  4767  17A3                     	goto	l462
  4768  17A3  2FA8               	line	112
  4769                           	
  4770                           l459:	
  4771  17A4                     	goto	l462
  4772  17A4  2FA8               	
  4773                           l456:	
  4774  17A5                     	goto	l462
  4775  17A5  2FA8               	line	113
  4776                           	
  4777                           l4057:	
  4778  17A6                     ;KEY.c: 111: };KEY.c: 112: };KEY.c: 113: return 1;;	Return value of _check_K4 is never u
                                 sed
  4779                           	goto	l462
  4780  17A6  2FA8               	line	114
  4781                           	
  4782                           l450:	
  4783  17A7                     	goto	l462
  4784  17A7  2FA8               	line	115
  4785                           	
  4786                           l449:	
  4787  17A8                     	line	117
  4788                           ;KEY.c: 114: };KEY.c: 115: };KEY.c: 116: return 0;;	Return value of _check_K4 is never u
                                 sed
  4789                           	
  4790                           l462:	
  4791  17A8                     	return
  4792  17A8  0008               	opt stack 0
  4793                           GLOBAL	__end_of_check_K4
  4794                           	__end_of_check_K4:
  4795  17A9                     	signat	_check_K4,89
  4796                           	global	_check_K3
  4797                           
  4798 ;; *************** function _check_K3 *****************
  4799 ;; Defined at:
  4800 ;;		line 80 in file "KEY.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;		None
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;		None
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      unsigned char 
  4807 ;; Registers used:
  4808 ;;		wreg, status,2, status,0, pclath, cstack
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4814 ;;      Params:         0       0       0       0       0
  4815 ;;      Locals:         0       0       0       0       0
  4816 ;;      Temps:          0       0       0       0       0
  4817 ;;      Totals:         0       0       0       0       0
  4818 ;;Total ram usage:        0 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    2
  4821 ;; This function calls:
  4822 ;;		_delay_ms
  4823 ;; This function is called by:
  4824 ;;		_keyscan
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4828                           	line	80
  4829                           global __ptext5
  4830                           __ptext5:	;psect for function _check_K3
  4831  14A6                     psect	text5
  4832                           	file	"KEY.c"
  4833                           	line	80
  4834                           	global	__size_of_check_K3
  4835                           	__size_of_check_K3	equ	__end_of_check_K3-_check_K3
  4836  0020                     	
  4837                           _check_K3:	
  4838  14A6                     ;incstack = 0
  4839                           	opt	stack 4
  4840                           ; Regs used in _check_K3: [wreg+status,2+status,0+pclath+cstack]
  4841                           	line	81
  4842                           	
  4843                           l4021:	
  4844  14A6                     ;KEY.c: 81: if (!PORTBbits.RB4) {
  4845                           	bcf	status, 5	;RP0=0, select bank0
  4846  14A6  1283               	bcf	status, 6	;RP1=0, select bank0
  4847  14A7  1303               	btfsc	(6),4	;volatile
  4848  14A8  1A06               	goto	u4881
  4849  14A9  2CAB               	goto	u4880
  4850  14AA  2CAC               u4881:
  4851  14AB                     	goto	l446
  4852  14AB  2CC5               u4880:
  4853  14AC                     	line	82
  4854                           	
  4855                           l4023:	
  4856  14AC                     ;KEY.c: 82: delay_ms(10);
  4857                           	movlw	0Ah
  4858  14AC  300A               	movwf	(delay_ms@n)
  4859  14AD  00F2               	movlw	0
  4860  14AE  3000               	movwf	((delay_ms@n))+1
  4861  14AF  00F3               	fcall	_delay_ms
  4862  14B0  160A  118A  2554  160A  118A  	line	83
  4863                           	
  4864                           l4025:	
  4865  14B5                     ;KEY.c: 83: if (!PORTBbits.RB4) {
  4866                           	bcf	status, 5	;RP0=0, select bank0
  4867  14B5  1283               	bcf	status, 6	;RP1=0, select bank0
  4868  14B6  1303               	btfsc	(6),4	;volatile
  4869  14B7  1A06               	goto	u4891
  4870  14B8  2CBA               	goto	u4890
  4871  14B9  2CBB               u4891:
  4872  14BA                     	goto	l446
  4873  14BA  2CC5               u4890:
  4874  14BB                     	goto	l443
  4875  14BB  2CBD               	line	84
  4876                           	
  4877                           l4027:	
  4878  14BC                     ;KEY.c: 84: while (!PORTBbits.RB4);
  4879                           	goto	l443
  4880  14BC  2CBD               	
  4881                           l444:	
  4882  14BD                     	
  4883                           l443:	
  4884  14BD                     	btfss	(6),4	;volatile
  4885  14BD  1E06               	goto	u4901
  4886  14BE  2CC0               	goto	u4900
  4887  14BF  2CC1               u4901:
  4888  14C0                     	goto	l443
  4889  14C0  2CBD               u4900:
  4890  14C1                     	
  4891                           l445:	
  4892  14C1                     	line	85
  4893                           ;KEY.c: 85: key3pushflag = 1;
  4894                           	clrf	(_key3pushflag)
  4895  14C1  01A9               	incf	(_key3pushflag),f
  4896  14C2  0AA9               	line	86
  4897                           ;KEY.c: 86: return 1;;	Return value of _check_K3 is never used
  4898                           	goto	l446
  4899  14C3  2CC5               	line	87
  4900                           	
  4901                           l442:	
  4902  14C4                     	goto	l446
  4903  14C4  2CC5               	line	88
  4904                           	
  4905                           l441:	
  4906  14C5                     	line	90
  4907                           ;KEY.c: 87: };KEY.c: 88: };KEY.c: 89: return 0;;	Return value of _check_K3 is never used
                                 
  4908                           	
  4909                           l446:	
  4910  14C5                     	return
  4911  14C5  0008               	opt stack 0
  4912                           GLOBAL	__end_of_check_K3
  4913                           	__end_of_check_K3:
  4914  14C6                     	signat	_check_K3,89
  4915                           	global	_check_K2
  4916                           
  4917 ;; *************** function _check_K2 *****************
  4918 ;; Defined at:
  4919 ;;		line 68 in file "KEY.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;		None
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;		None
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      unsigned char 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0, pclath, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4933 ;;      Params:         0       0       0       0       0
  4934 ;;      Locals:         0       0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0
  4936 ;;      Totals:         0       0       0       0       0
  4937 ;;Total ram usage:        0 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:    2
  4940 ;; This function calls:
  4941 ;;		_delay_ms
  4942 ;; This function is called by:
  4943 ;;		_keyscan
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4947                           	line	68
  4948                           global __ptext6
  4949                           __ptext6:	;psect for function _check_K2
  4950  1486                     psect	text6
  4951                           	file	"KEY.c"
  4952                           	line	68
  4953                           	global	__size_of_check_K2
  4954                           	__size_of_check_K2	equ	__end_of_check_K2-_check_K2
  4955  0020                     	
  4956                           _check_K2:	
  4957  1486                     ;incstack = 0
  4958                           	opt	stack 4
  4959                           ; Regs used in _check_K2: [wreg+status,2+status,0+pclath+cstack]
  4960                           	line	69
  4961                           	
  4962                           l4013:	
  4963  1486                     ;KEY.c: 69: if (!PORTBbits.RB3) {
  4964                           	bcf	status, 5	;RP0=0, select bank0
  4965  1486  1283               	bcf	status, 6	;RP1=0, select bank0
  4966  1487  1303               	btfsc	(6),3	;volatile
  4967  1488  1986               	goto	u4851
  4968  1489  2C8B               	goto	u4850
  4969  148A  2C8C               u4851:
  4970  148B                     	goto	l438
  4971  148B  2CA5               u4850:
  4972  148C                     	line	70
  4973                           	
  4974                           l4015:	
  4975  148C                     ;KEY.c: 70: delay_ms(10);
  4976                           	movlw	0Ah
  4977  148C  300A               	movwf	(delay_ms@n)
  4978  148D  00F2               	movlw	0
  4979  148E  3000               	movwf	((delay_ms@n))+1
  4980  148F  00F3               	fcall	_delay_ms
  4981  1490  160A  118A  2554  160A  118A  	line	71
  4982                           	
  4983                           l4017:	
  4984  1495                     ;KEY.c: 71: if (!PORTBbits.RB3) {
  4985                           	bcf	status, 5	;RP0=0, select bank0
  4986  1495  1283               	bcf	status, 6	;RP1=0, select bank0
  4987  1496  1303               	btfsc	(6),3	;volatile
  4988  1497  1986               	goto	u4861
  4989  1498  2C9A               	goto	u4860
  4990  1499  2C9B               u4861:
  4991  149A                     	goto	l438
  4992  149A  2CA5               u4860:
  4993  149B                     	goto	l435
  4994  149B  2C9D               	line	72
  4995                           	
  4996                           l4019:	
  4997  149C                     ;KEY.c: 72: while (!PORTBbits.RB3);
  4998                           	goto	l435
  4999  149C  2C9D               	
  5000                           l436:	
  5001  149D                     	
  5002                           l435:	
  5003  149D                     	btfss	(6),3	;volatile
  5004  149D  1D86               	goto	u4871
  5005  149E  2CA0               	goto	u4870
  5006  149F  2CA1               u4871:
  5007  14A0                     	goto	l435
  5008  14A0  2C9D               u4870:
  5009  14A1                     	
  5010                           l437:	
  5011  14A1                     	line	73
  5012                           ;KEY.c: 73: key2pushflag = 1;
  5013                           	clrf	(_key2pushflag)
  5014  14A1  01FB               	incf	(_key2pushflag),f
  5015  14A2  0AFB               	line	74
  5016                           ;KEY.c: 74: return 1;;	Return value of _check_K2 is never used
  5017                           	goto	l438
  5018  14A3  2CA5               	line	75
  5019                           	
  5020                           l434:	
  5021  14A4                     	goto	l438
  5022  14A4  2CA5               	line	76
  5023                           	
  5024                           l433:	
  5025  14A5                     	line	78
  5026                           ;KEY.c: 75: };KEY.c: 76: };KEY.c: 77: return 0;;	Return value of _check_K2 is never used
                                 
  5027                           	
  5028                           l438:	
  5029  14A5                     	return
  5030  14A5  0008               	opt stack 0
  5031                           GLOBAL	__end_of_check_K2
  5032                           	__end_of_check_K2:
  5033  14A6                     	signat	_check_K2,89
  5034                           	global	_check_K1
  5035                           
  5036 ;; *************** function _check_K1 *****************
  5037 ;; Defined at:
  5038 ;;		line 53 in file "KEY.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      unsigned char 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0, pclath, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5052 ;;      Params:         0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0
  5054 ;;      Temps:          1       0       0       0       0
  5055 ;;      Totals:         1       0       0       0       0
  5056 ;;Total ram usage:        1 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    2
  5059 ;; This function calls:
  5060 ;;		_delay_ms
  5061 ;; This function is called by:
  5062 ;;		_keyscan
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5066                           	line	53
  5067                           global __ptext7
  5068                           __ptext7:	;psect for function _check_K1
  5069  157D                     psect	text7
  5070                           	file	"KEY.c"
  5071                           	line	53
  5072                           	global	__size_of_check_K1
  5073                           	__size_of_check_K1	equ	__end_of_check_K1-_check_K1
  5074  002C                     	
  5075                           _check_K1:	
  5076  157D                     ;incstack = 0
  5077                           	opt	stack 4
  5078                           ; Regs used in _check_K1: [wreg+status,2+status,0+pclath+cstack]
  5079                           	line	54
  5080                           	
  5081                           l3997:	
  5082  157D                     ;KEY.c: 54: if (!PORTBbits.RB2) {
  5083                           	bcf	status, 5	;RP0=0, select bank0
  5084  157D  1283               	bcf	status, 6	;RP1=0, select bank0
  5085  157E  1303               	btfsc	(6),2	;volatile
  5086  157F  1906               	goto	u4811
  5087  1580  2D82               	goto	u4810
  5088  1581  2D83               u4811:
  5089  1582                     	goto	l430
  5090  1582  2DA8               u4810:
  5091  1583                     	line	55
  5092                           	
  5093                           l3999:	
  5094  1583                     ;KEY.c: 55: delay_ms(10);
  5095                           	movlw	0Ah
  5096  1583  300A               	movwf	(delay_ms@n)
  5097  1584  00F2               	movlw	0
  5098  1585  3000               	movwf	((delay_ms@n))+1
  5099  1586  00F3               	fcall	_delay_ms
  5100  1587  160A  118A  2554  160A  118A  	line	56
  5101                           	
  5102                           l4001:	
  5103  158C                     ;KEY.c: 56: if (!PORTBbits.RB2) {
  5104                           	bcf	status, 5	;RP0=0, select bank0
  5105  158C  1283               	bcf	status, 6	;RP1=0, select bank0
  5106  158D  1303               	btfsc	(6),2	;volatile
  5107  158E  1906               	goto	u4821
  5108  158F  2D91               	goto	u4820
  5109  1590  2D92               u4821:
  5110  1591                     	goto	l430
  5111  1591  2DA8               u4820:
  5112  1592                     	goto	l426
  5113  1592  2D94               	line	57
  5114                           	
  5115                           l4003:	
  5116  1593                     ;KEY.c: 57: while (!PORTBbits.RB2);
  5117                           	goto	l426
  5118  1593  2D94               	
  5119                           l427:	
  5120  1594                     	
  5121                           l426:	
  5122  1594                     	btfss	(6),2	;volatile
  5123  1594  1D06               	goto	u4831
  5124  1595  2D97               	goto	u4830
  5125  1596  2D98               u4831:
  5126  1597                     	goto	l426
  5127  1597  2D94               u4830:
  5128  1598                     	
  5129                           l428:	
  5130  1598                     	line	58
  5131                           ;KEY.c: 58: clear_flag = 1;
  5132                           	bsf	(_clear_flag/8),(_clear_flag)&7
  5133  1598  147A               	line	59
  5134                           	
  5135                           l4005:	
  5136  1599                     ;KEY.c: 59: Mode++;
  5137                           	movlw	low(01h)
  5138  1599  3001               	movwf	(??_check_K1+0)+0
  5139  159A  00F8               	movf	(??_check_K1+0)+0,w
  5140  159B  0878               	addwf	(_Mode),f
  5141  159C  07AB               	line	60
  5142                           	
  5143                           l4007:	
  5144  159D                     ;KEY.c: 60: if (Mode > 2)
  5145                           	movlw	low(03h)
  5146  159D  3003               	subwf	(_Mode),w
  5147  159E  022B               	skipc
  5148  159F  1C03               	goto	u4841
  5149  15A0  2DA2               	goto	u4840
  5150  15A1  2DA3               u4841:
  5151  15A2                     	goto	l430
  5152  15A2  2DA8               u4840:
  5153  15A3                     	line	61
  5154                           	
  5155                           l4009:	
  5156  15A3                     ;KEY.c: 61: Mode = 0;
  5157                           	clrf	(_Mode)
  5158  15A3  01AB               	goto	l430
  5159  15A4  2DA8               	
  5160                           l429:	
  5161  15A5                     	goto	l430
  5162  15A5  2DA8               	line	62
  5163                           	
  5164                           l4011:	
  5165  15A6                     ;KEY.c: 62: return 1;;	Return value of _check_K1 is never used
  5166                           	goto	l430
  5167  15A6  2DA8               	line	63
  5168                           	
  5169                           l425:	
  5170  15A7                     	goto	l430
  5171  15A7  2DA8               	line	64
  5172                           	
  5173                           l424:	
  5174  15A8                     	line	66
  5175                           ;KEY.c: 63: };KEY.c: 64: };KEY.c: 65: return 0;;	Return value of _check_K1 is never used
                                 
  5176                           	
  5177                           l430:	
  5178  15A8                     	return
  5179  15A8  0008               	opt stack 0
  5180                           GLOBAL	__end_of_check_K1
  5181                           	__end_of_check_K1:
  5182  15A9                     	signat	_check_K1,89
  5183                           	global	_check_Alarm
  5184                           
  5185 ;; *************** function _check_Alarm *****************
  5186 ;; Defined at:
  5187 ;;		line 241 in file "DS1302.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;		None
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      void 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0, pclath, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5201 ;;      Params:         0       0       0       0       0
  5202 ;;      Locals:         0       0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0
  5204 ;;      Totals:         0       0       0       0       0
  5205 ;;Total ram usage:        0 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    3
  5208 ;; This function calls:
  5209 ;;		_beep_ms
  5210 ;; This function is called by:
  5211 ;;		_main
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5215                           	file	"DS1302.c"
  5216                           	line	241
  5217                           global __ptext8
  5218                           __ptext8:	;psect for function _check_Alarm
  5219  0B74                     psect	text8
  5220                           	file	"DS1302.c"
  5221                           	line	241
  5222                           	global	__size_of_check_Alarm
  5223                           	__size_of_check_Alarm	equ	__end_of_check_Alarm-_check_Alarm
  5224  0048                     	
  5225                           _check_Alarm:	
  5226  0B74                     ;incstack = 0
  5227                           	opt	stack 4
  5228                           ; Regs used in _check_Alarm: [wreg+status,2+status,0+pclath+cstack]
  5229                           	line	242
  5230                           	
  5231                           l4117:	
  5232  0B74                     ;DS1302.c: 242: if (SECOND_unit != aSECOND_unit) {
  5233                           	bcf	status, 5	;RP0=0, select bank0
  5234  0B74  1283               	bcf	status, 6	;RP1=0, select bank0
  5235  0B75  1303               	movf	(_SECOND_unit),w
  5236  0B76  082C               	xorwf	(_aSECOND_unit),w
  5237  0B77  0639               	skipnz
  5238  0B78  1903               	goto	u5141
  5239  0B79  2B7B               	goto	u5140
  5240  0B7A  2B7C               u5141:
  5241  0B7B                     	goto	l4123
  5242  0B7B  2B7F               u5140:
  5243  0B7C                     	goto	l276
  5244  0B7C  2BBB               	line	243
  5245                           	
  5246                           l4119:	
  5247  0B7D                     ;DS1302.c: 243: return;
  5248                           	goto	l276
  5249  0B7D  2BBB               	line	244
  5250                           	
  5251                           l4121:	
  5252  0B7E                     ;DS1302.c: 244: } else {
  5253                           	goto	l276
  5254  0B7E  2BBB               	
  5255                           l275:	
  5256  0B7F                     	line	245
  5257                           	
  5258                           l4123:	
  5259  0B7F                     ;DS1302.c: 245: if (SECOND_ten != aSECOND_ten) {
  5260                           	movf	(_SECOND_ten),w
  5261  0B7F  082D               	xorwf	(_aSECOND_ten),w
  5262  0B80  063A               	skipnz
  5263  0B81  1903               	goto	u5151
  5264  0B82  2B84               	goto	u5150
  5265  0B83  2B85               u5151:
  5266  0B84                     	goto	l4129
  5267  0B84  2B88               u5150:
  5268  0B85                     	goto	l276
  5269  0B85  2BBB               	line	246
  5270                           	
  5271                           l4125:	
  5272  0B86                     ;DS1302.c: 246: return;
  5273                           	goto	l276
  5274  0B86  2BBB               	line	247
  5275                           	
  5276                           l4127:	
  5277  0B87                     ;DS1302.c: 247: } else {
  5278                           	goto	l276
  5279  0B87  2BBB               	
  5280                           l278:	
  5281  0B88                     	line	248
  5282                           	
  5283                           l4129:	
  5284  0B88                     ;DS1302.c: 248: if (MINUTE_unit != aMINUTE_unit) {
  5285                           	movf	(_MINUTE_unit),w
  5286  0B88  082E               	xorwf	(_aMINUTE_unit),w
  5287  0B89  063B               	skipnz
  5288  0B8A  1903               	goto	u5161
  5289  0B8B  2B8D               	goto	u5160
  5290  0B8C  2B8E               u5161:
  5291  0B8D                     	goto	l4135
  5292  0B8D  2B91               u5160:
  5293  0B8E                     	goto	l276
  5294  0B8E  2BBB               	line	249
  5295                           	
  5296                           l4131:	
  5297  0B8F                     ;DS1302.c: 249: return;
  5298                           	goto	l276
  5299  0B8F  2BBB               	line	250
  5300                           	
  5301                           l4133:	
  5302  0B90                     ;DS1302.c: 250: } else {
  5303                           	goto	l276
  5304  0B90  2BBB               	
  5305                           l280:	
  5306  0B91                     	line	251
  5307                           	
  5308                           l4135:	
  5309  0B91                     ;DS1302.c: 251: if (MINUTE_ten != aMINUTE_ten) {
  5310                           	movf	(_MINUTE_ten),w
  5311  0B91  082F               	xorwf	(_aMINUTE_ten),w
  5312  0B92  063C               	skipnz
  5313  0B93  1903               	goto	u5171
  5314  0B94  2B96               	goto	u5170
  5315  0B95  2B97               u5171:
  5316  0B96                     	goto	l4141
  5317  0B96  2B9A               u5170:
  5318  0B97                     	goto	l276
  5319  0B97  2BBB               	line	252
  5320                           	
  5321                           l4137:	
  5322  0B98                     ;DS1302.c: 252: return;
  5323                           	goto	l276
  5324  0B98  2BBB               	line	253
  5325                           	
  5326                           l4139:	
  5327  0B99                     ;DS1302.c: 253: } else {
  5328                           	goto	l276
  5329  0B99  2BBB               	
  5330                           l282:	
  5331  0B9A                     	line	254
  5332                           	
  5333                           l4141:	
  5334  0B9A                     ;DS1302.c: 254: if (HOUR_unit != aHOUR_unit) {
  5335                           	movf	(_HOUR_unit),w
  5336  0B9A  0830               	xorwf	(_aHOUR_unit),w
  5337  0B9B  063D               	skipnz
  5338  0B9C  1903               	goto	u5181
  5339  0B9D  2B9F               	goto	u5180
  5340  0B9E  2BA0               u5181:
  5341  0B9F                     	goto	l4147
  5342  0B9F  2BA3               u5180:
  5343  0BA0                     	goto	l276
  5344  0BA0  2BBB               	line	255
  5345                           	
  5346                           l4143:	
  5347  0BA1                     ;DS1302.c: 255: return;
  5348                           	goto	l276
  5349  0BA1  2BBB               	line	256
  5350                           	
  5351                           l4145:	
  5352  0BA2                     ;DS1302.c: 256: } else {
  5353                           	goto	l276
  5354  0BA2  2BBB               	
  5355                           l284:	
  5356  0BA3                     	line	257
  5357                           	
  5358                           l4147:	
  5359  0BA3                     ;DS1302.c: 257: if (HOUR_ten != aHOUR_ten) {
  5360                           	movf	(_HOUR_ten),w
  5361  0BA3  0831               	xorwf	(_aHOUR_ten),w
  5362  0BA4  063E               	skipnz
  5363  0BA5  1903               	goto	u5191
  5364  0BA6  2BA8               	goto	u5190
  5365  0BA7  2BA9               u5191:
  5366  0BA8                     	goto	l4153
  5367  0BA8  2BAC               u5190:
  5368  0BA9                     	goto	l276
  5369  0BA9  2BBB               	line	258
  5370                           	
  5371                           l4149:	
  5372  0BAA                     ;DS1302.c: 258: return;
  5373                           	goto	l276
  5374  0BAA  2BBB               	line	259
  5375                           	
  5376                           l4151:	
  5377  0BAB                     ;DS1302.c: 259: } else {
  5378                           	goto	l276
  5379  0BAB  2BBB               	
  5380                           l286:	
  5381  0BAC                     	line	260
  5382                           	
  5383                           l4153:	
  5384  0BAC                     ;DS1302.c: 260: beep_ms(50);
  5385                           	movlw	032h
  5386  0BAC  3032               	movwf	(beep_ms@n)
  5387  0BAD  00DD               	movlw	0
  5388  0BAE  3000               	movwf	((beep_ms@n))+1
  5389  0BAF  00DE               	fcall	_beep_ms
  5390  0BB0  160A  118A  23EC  120A  158A  	goto	l276
  5391  0BB5  2BBB               	line	262
  5392                           	
  5393                           l287:	
  5394  0BB6                     	goto	l276
  5395  0BB6  2BBB               	line	263
  5396                           	
  5397                           l285:	
  5398  0BB7                     	goto	l276
  5399  0BB7  2BBB               	line	264
  5400                           	
  5401                           l283:	
  5402  0BB8                     	goto	l276
  5403  0BB8  2BBB               	line	265
  5404                           	
  5405                           l281:	
  5406  0BB9                     	goto	l276
  5407  0BB9  2BBB               	line	266
  5408                           	
  5409                           l279:	
  5410  0BBA                     	goto	l276
  5411  0BBA  2BBB               	line	267
  5412                           	
  5413                           l277:	
  5414  0BBB                     	line	268
  5415                           	
  5416                           l276:	
  5417  0BBB                     	return
  5418  0BBB  0008               	opt stack 0
  5419                           GLOBAL	__end_of_check_Alarm
  5420                           	__end_of_check_Alarm:
  5421  0BBC                     	signat	_check_Alarm,89
  5422                           	global	_beep_ms
  5423                           
  5424 ;; *************** function _beep_ms *****************
  5425 ;; Defined at:
  5426 ;;		line 230 in file "DS1302.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  n               2    0[BANK0 ] unsigned int 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, status,0, pclath, cstack
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5440 ;;      Params:         0       2       0       0       0
  5441 ;;      Locals:         0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0
  5443 ;;      Totals:         0       2       0       0       0
  5444 ;;Total ram usage:        2 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    2
  5447 ;; This function calls:
  5448 ;;		_PwmTone
  5449 ;;		_delay_ms
  5450 ;; This function is called by:
  5451 ;;		_check_Alarm
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5455                           	line	230
  5456                           global __ptext9
  5457                           __ptext9:	;psect for function _beep_ms
  5458  13EC                     psect	text9
  5459                           	file	"DS1302.c"
  5460                           	line	230
  5461                           	global	__size_of_beep_ms
  5462                           	__size_of_beep_ms	equ	__end_of_beep_ms-_beep_ms
  5463  001E                     	
  5464                           _beep_ms:	
  5465  13EC                     ;incstack = 0
  5466                           	opt	stack 4
  5467                           ; Regs used in _beep_ms: [wreg+status,2+status,0+pclath+cstack]
  5468                           	line	231
  5469                           	
  5470                           l3977:	
  5471  13EC                     ;DS1302.c: 231: TRISCbits.TRISC2 = 0;
  5472                           	bsf	status, 5	;RP0=1, select bank1
  5473  13EC  1683               	bcf	status, 6	;RP1=0, select bank1
  5474  13ED  1303               	bcf	(135)^080h,2	;volatile
  5475  13EE  1107               	line	232
  5476                           ;DS1302.c: 232: PORTCbits.RC1 = 1;
  5477                           	bcf	status, 5	;RP0=0, select bank0
  5478  13EF  1283               	bcf	status, 6	;RP1=0, select bank0
  5479  13F0  1303               	bsf	(7),1	;volatile
  5480  13F1  1487               	line	233
  5481                           	
  5482                           l3979:	
  5483  13F2                     ;DS1302.c: 233: PwmTone(22);
  5484                           	movlw	low(016h)
  5485  13F2  3016               	fcall	_PwmTone
  5486  13F3  160A  118A  2681  160A  118A  	line	234
  5487                           ;DS1302.c: 234: delay_ms(n);
  5488                           	bcf	status, 5	;RP0=0, select bank0
  5489  13F8  1283               	bcf	status, 6	;RP1=0, select bank0
  5490  13F9  1303               	movf	(beep_ms@n+1),w
  5491  13FA  085E               	movwf	(delay_ms@n+1)
  5492  13FB  00F3               	movf	(beep_ms@n),w
  5493  13FC  085D               	movwf	(delay_ms@n)
  5494  13FD  00F2               	fcall	_delay_ms
  5495  13FE  160A  118A  2554  160A  118A  	line	235
  5496                           	
  5497                           l3981:	
  5498  1403                     ;DS1302.c: 235: PORTCbits.RC1 = 0;
  5499                           	bcf	status, 5	;RP0=0, select bank0
  5500  1403  1283               	bcf	status, 6	;RP1=0, select bank0
  5501  1404  1303               	bcf	(7),1	;volatile
  5502  1405  1087               	line	236
  5503                           	
  5504                           l3983:	
  5505  1406                     ;DS1302.c: 236: TRISCbits.TRISC2 = 1;
  5506                           	bsf	status, 5	;RP0=1, select bank1
  5507  1406  1683               	bcf	status, 6	;RP1=0, select bank1
  5508  1407  1303               	bsf	(135)^080h,2	;volatile
  5509  1408  1507               	line	238
  5510                           	
  5511                           l272:	
  5512  1409                     	return
  5513  1409  0008               	opt stack 0
  5514                           GLOBAL	__end_of_beep_ms
  5515                           	__end_of_beep_ms:
  5516  140A                     	signat	_beep_ms,4217
  5517                           	global	_PwmInit
  5518                           
  5519 ;; *************** function _PwmInit *****************
  5520 ;; Defined at:
  5521 ;;		line 91 in file "SONG.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      void 
  5528 ;; Registers used:
  5529 ;;		wreg
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5535 ;;      Params:         0       0       0       0       0
  5536 ;;      Locals:         0       0       0       0       0
  5537 ;;      Temps:          0       0       0       0       0
  5538 ;;      Totals:         0       0       0       0       0
  5539 ;;Total ram usage:        0 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:    1
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_main
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5549                           	file	"SONG.c"
  5550                           	line	91
  5551                           global __ptext10
  5552                           __ptext10:	;psect for function _PwmInit
  5553  12BD                     psect	text10
  5554                           	file	"SONG.c"
  5555                           	line	91
  5556                           	global	__size_of_PwmInit
  5557                           	__size_of_PwmInit	equ	__end_of_PwmInit-_PwmInit
  5558  0008                     	
  5559                           _PwmInit:	
  5560  12BD                     ;incstack = 0
  5561                           	opt	stack 6
  5562                           ; Regs used in _PwmInit: [wreg]
  5563                           	line	94
  5564                           	
  5565                           l3103:	
  5566  12BD                     ;SONG.c: 94: T2CON = 0b00000111;
  5567                           	movlw	low(07h)
  5568  12BD  3007               	bcf	status, 5	;RP0=0, select bank0
  5569  12BE  1283               	bcf	status, 6	;RP1=0, select bank0
  5570  12BF  1303               	movwf	(18)	;volatile
  5571  12C0  0092               	line	99
  5572                           	
  5573                           l3105:	
  5574  12C1                     ;SONG.c: 99: TRISCbits.TRISC2 = 0;
  5575                           	bsf	status, 5	;RP0=1, select bank1
  5576  12C1  1683               	bcf	status, 6	;RP1=0, select bank1
  5577  12C2  1303               	bcf	(135)^080h,2	;volatile
  5578  12C3  1107               	line	100
  5579                           	
  5580                           l787:	
  5581  12C4                     	return
  5582  12C4  0008               	opt stack 0
  5583                           GLOBAL	__end_of_PwmInit
  5584                           	__end_of_PwmInit:
  5585  12C5                     	signat	_PwmInit,89
  5586                           	global	_MusicPlay
  5587                           
  5588 ;; *************** function _MusicPlay *****************
  5589 ;; Defined at:
  5590 ;;		line 118 in file "SONG.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;		None
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;		None
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  1    wreg      void 
  5597 ;; Registers used:
  5598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5604 ;;      Params:         0       0       0       0       0
  5605 ;;      Locals:         0       0       0       0       0
  5606 ;;      Temps:          1       0       0       0       0
  5607 ;;      Totals:         1       0       0       0       0
  5608 ;;Total ram usage:        1 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    3
  5611 ;; This function calls:
  5612 ;;		_PwmTone
  5613 ;;		_SixteenNoteDelay
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5619                           	line	118
  5620                           global __ptext11
  5621                           __ptext11:	;psect for function _MusicPlay
  5622  0EF8                     psect	text11
  5623                           	file	"SONG.c"
  5624                           	line	118
  5625                           	global	__size_of_MusicPlay
  5626                           	__size_of_MusicPlay	equ	__end_of_MusicPlay-_MusicPlay
  5627  0108                     	
  5628                           _MusicPlay:	
  5629  0EF8                     ;incstack = 0
  5630                           	opt	stack 4
  5631                           ; Regs used in _MusicPlay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5632                           	line	119
  5633                           	
  5634                           l4697:	
  5635  0EF8                     ;SONG.c: 119: if (isMusicPlaying == 0)
  5636                           	btfsc	(_isMusicPlaying/8),(_isMusicPlaying)&7
  5637  0EF8  197A               	goto	u6641
  5638  0EF9  2EFB               	goto	u6640
  5639  0EFA  2EFC               u6641:
  5640  0EFB                     	goto	l4701
  5641  0EFB  2EFE               u6640:
  5642  0EFC                     	goto	l794
  5643  0EFC  2FFF               	line	120
  5644                           	
  5645                           l4699:	
  5646  0EFD                     ;SONG.c: 120: return;
  5647                           	goto	l794
  5648  0EFD  2FFF               	
  5649                           l793:	
  5650  0EFE                     	line	121
  5651                           	
  5652                           l4701:	
  5653  0EFE                     ;SONG.c: 121: if (SongNum == 0)
  5654                           	bcf	status, 5	;RP0=0, select bank0
  5655  0EFE  1283               	bcf	status, 6	;RP1=0, select bank0
  5656  0EFF  1303               	movf	((_SongNum)),w
  5657  0F00  0842               	btfss	status,2
  5658  0F01  1D03               	goto	u6651
  5659  0F02  2F04               	goto	u6650
  5660  0F03  2F05               u6651:
  5661  0F04                     	goto	l4705
  5662  0F04  2F2A               u6650:
  5663  0F05                     	line	123
  5664                           	
  5665                           l4703:	
  5666  0F05                     ;SONG.c: 122: {;SONG.c: 123: TempTone = LittleStar[MusicPosition];
  5667                           	movf	(_MusicPosition),w
  5668  0F05  0827               	addlw	low(((_LittleStar)|8000h))
  5669  0F06  3E99               	movwf	fsr0
  5670  0F07  0084               	movlw	high(((_LittleStar)|8000h))
  5671  0F08  308A               	skipnc
  5672  0F09  1803               	addlw	1
  5673  0F0A  3E01               	movwf	btemp+1
  5674  0F0B  00FF               	fcall	stringtab
  5675  0F0C  120A  158A  2000  120A  158A  	movwf	(??_MusicPlay+0)+0
  5676  0F11  00F9               	movf	(??_MusicPlay+0)+0,w
  5677  0F12  0879               	movwf	(_TempTone)
  5678  0F13  00C0               	line	124
  5679                           ;SONG.c: 124: TempMetre = LittleStar[++MusicPosition];
  5680                           	movlw	01h
  5681  0F14  3001               	addwf	(_MusicPosition),f
  5682  0F15  07A7               	skipnc
  5683  0F16  1803               	incf	(_MusicPosition+1),f
  5684  0F17  0AA8               	movlw	0
  5685  0F18  3000               	addwf	(_MusicPosition+1),f
  5686  0F19  07A8               	movf	((_MusicPosition)),w
  5687  0F1A  0827               	addlw	low(((_LittleStar)|8000h))
  5688  0F1B  3E99               	movwf	fsr0
  5689  0F1C  0084               	movlw	high(((_LittleStar)|8000h))
  5690  0F1D  308A               	skipnc
  5691  0F1E  1803               	addlw	1
  5692  0F1F  3E01               	movwf	btemp+1
  5693  0F20  00FF               	fcall	stringtab
  5694  0F21  120A  158A  2000  120A  158A  	movwf	(??_MusicPlay+0)+0
  5695  0F26  00F9               	movf	(??_MusicPlay+0)+0,w
  5696  0F27  0879               	movwf	(_TempMetre)
  5697  0F28  00BF               	line	125
  5698                           ;SONG.c: 125: } else if (SongNum == 1) {
  5699                           	goto	l4717
  5700  0F29  2FAF               	
  5701                           l795:	
  5702  0F2A                     	
  5703                           l4705:	
  5704  0F2A                     		decf	((_SongNum)),w
  5705  0F2A  0342               	btfss	status,2
  5706  0F2B  1D03               	goto	u6661
  5707  0F2C  2F2E               	goto	u6660
  5708  0F2D  2F2F               u6661:
  5709  0F2E                     	goto	l4709
  5710  0F2E  2F54               u6660:
  5711  0F2F                     	line	126
  5712                           	
  5713                           l4707:	
  5714  0F2F                     ;SONG.c: 126: TempTone = LittleLamb[MusicPosition];
  5715                           	movf	(_MusicPosition),w
  5716  0F2F  0827               	addlw	low(((_LittleLamb)|8000h))
  5717  0F30  3E16               	movwf	fsr0
  5718  0F31  0084               	movlw	high(((_LittleLamb)|8000h))
  5719  0F32  308A               	skipnc
  5720  0F33  1803               	addlw	1
  5721  0F34  3E01               	movwf	btemp+1
  5722  0F35  00FF               	fcall	stringtab
  5723  0F36  120A  158A  2000  120A  158A  	movwf	(??_MusicPlay+0)+0
  5724  0F3B  00F9               	movf	(??_MusicPlay+0)+0,w
  5725  0F3C  0879               	movwf	(_TempTone)
  5726  0F3D  00C0               	line	127
  5727                           ;SONG.c: 127: TempMetre = LittleLamb[++MusicPosition];
  5728                           	movlw	01h
  5729  0F3E  3001               	addwf	(_MusicPosition),f
  5730  0F3F  07A7               	skipnc
  5731  0F40  1803               	incf	(_MusicPosition+1),f
  5732  0F41  0AA8               	movlw	0
  5733  0F42  3000               	addwf	(_MusicPosition+1),f
  5734  0F43  07A8               	movf	((_MusicPosition)),w
  5735  0F44  0827               	addlw	low(((_LittleLamb)|8000h))
  5736  0F45  3E16               	movwf	fsr0
  5737  0F46  0084               	movlw	high(((_LittleLamb)|8000h))
  5738  0F47  308A               	skipnc
  5739  0F48  1803               	addlw	1
  5740  0F49  3E01               	movwf	btemp+1
  5741  0F4A  00FF               	fcall	stringtab
  5742  0F4B  120A  158A  2000  120A  158A  	movwf	(??_MusicPlay+0)+0
  5743  0F50  00F9               	movf	(??_MusicPlay+0)+0,w
  5744  0F51  0879               	movwf	(_TempMetre)
  5745  0F52  00BF               	line	128
  5746                           ;SONG.c: 128: } else if (SongNum == 2) {
  5747                           	goto	l4717
  5748  0F53  2FAF               	
  5749                           l797:	
  5750  0F54                     	
  5751                           l4709:	
  5752  0F54                     		movlw	2
  5753  0F54  3002               	xorwf	((_SongNum)),w
  5754  0F55  0642               	btfss	status,2
  5755  0F56  1D03               	goto	u6671
  5756  0F57  2F59               	goto	u6670
  5757  0F58  2F5A               u6671:
  5758  0F59                     	goto	l4713
  5759  0F59  2F7F               u6670:
  5760  0F5A                     	line	129
  5761                           	
  5762                           l4711:	
  5763  0F5A                     ;SONG.c: 129: TempTone = JingleBell[MusicPosition];
  5764                           	movf	(_MusicPosition),w
  5765  0F5A  0827               	addlw	low(((_JingleBell)|8000h))
  5766  0F5B  3E3B               	movwf	fsr0
  5767  0F5C  0084               	movlw	high(((_JingleBell)|8000h))
  5768  0F5D  3089               	skipnc
  5769  0F5E  1803               	addlw	1
  5770  0F5F  3E01               	movwf	btemp+1
  5771  0F60  00FF               	fcall	stringtab
  5772  0F61  120A  158A  2000  120A  158A  	movwf	(??_MusicPlay+0)+0
  5773  0F66  00F9               	movf	(??_MusicPlay+0)+0,w
  5774  0F67  0879               	movwf	(_TempTone)
  5775  0F68  00C0               	line	130
  5776                           ;SONG.c: 130: TempMetre = JingleBell[++MusicPosition];
  5777                           	movlw	01h
  5778  0F69  3001               	addwf	(_MusicPosition),f
  5779  0F6A  07A7               	skipnc
  5780  0F6B  1803               	incf	(_MusicPosition+1),f
  5781  0F6C  0AA8               	movlw	0
  5782  0F6D  3000               	addwf	(_MusicPosition+1),f
  5783  0F6E  07A8               	movf	((_MusicPosition)),w
  5784  0F6F  0827               	addlw	low(((_JingleBell)|8000h))
  5785  0F70  3E3B               	movwf	fsr0
  5786  0F71  0084               	movlw	high(((_JingleBell)|8000h))
  5787  0F72  3089               	skipnc
  5788  0F73  1803               	addlw	1
  5789  0F74  3E01               	movwf	btemp+1
  5790  0F75  00FF               	fcall	stringtab
  5791  0F76  120A  158A  2000  120A  158A  	movwf	(??_MusicPlay+0)+0
  5792  0F7B  00F9               	movf	(??_MusicPlay+0)+0,w
  5793  0F7C  0879               	movwf	(_TempMetre)
  5794  0F7D  00BF               	line	131
  5795                           ;SONG.c: 131: } else if (SongNum == 3) {
  5796                           	goto	l4717
  5797  0F7E  2FAF               	
  5798                           l799:	
  5799  0F7F                     	
  5800                           l4713:	
  5801  0F7F                     		movlw	3
  5802  0F7F  3003               	xorwf	((_SongNum)),w
  5803  0F80  0642               	btfss	status,2
  5804  0F81  1D03               	goto	u6681
  5805  0F82  2F84               	goto	u6680
  5806  0F83  2F85               u6681:
  5807  0F84                     	goto	l4717
  5808  0F84  2FAF               u6680:
  5809  0F85                     	line	132
  5810                           	
  5811                           l4715:	
  5812  0F85                     ;SONG.c: 132: TempTone = SkyCity[MusicPosition];
  5813                           	movlw	high(((_SkyCity)|8000h))
  5814  0F85  3088               	addwf	(_MusicPosition+1),w
  5815  0F86  0728               	movwf	btemp+1
  5816  0F87  00FF               	movlw	low(((_SkyCity)|8000h))
  5817  0F88  3012               	addwf	(_MusicPosition),w
  5818  0F89  0727               	movwf	fsr0
  5819  0F8A  0084               	skipnc
  5820  0F8B  1803               	incf	btemp+1,f
  5821  0F8C  0AFF               	fcall	stringtab
  5822  0F8D  120A  158A  2000  120A  158A  	movwf	(??_MusicPlay+0)+0
  5823  0F92  00F9               	movf	(??_MusicPlay+0)+0,w
  5824  0F93  0879               	movwf	(_TempTone)
  5825  0F94  00C0               	line	133
  5826                           ;SONG.c: 133: TempMetre = SkyCity[++MusicPosition];
  5827                           	movlw	01h
  5828  0F95  3001               	addwf	(_MusicPosition),f
  5829  0F96  07A7               	skipnc
  5830  0F97  1803               	incf	(_MusicPosition+1),f
  5831  0F98  0AA8               	movlw	0
  5832  0F99  3000               	addwf	(_MusicPosition+1),f
  5833  0F9A  07A8               	movlw	high(((_SkyCity)|8000h))
  5834  0F9B  3088               	addwf	((_MusicPosition+1)),w
  5835  0F9C  0728               	movwf	btemp+1
  5836  0F9D  00FF               	movlw	low(((_SkyCity)|8000h))
  5837  0F9E  3012               	addwf	((_MusicPosition)),w
  5838  0F9F  0727               	movwf	fsr0
  5839  0FA0  0084               	skipnc
  5840  0FA1  1803               	incf	btemp+1,f
  5841  0FA2  0AFF               	fcall	stringtab
  5842  0FA3  120A  158A  2000  120A  158A  	movwf	(??_MusicPlay+0)+0
  5843  0FA8  00F9               	movf	(??_MusicPlay+0)+0,w
  5844  0FA9  0879               	movwf	(_TempMetre)
  5845  0FAA  00BF               	goto	l4717
  5846  0FAB  2FAF               	line	134
  5847                           	
  5848                           l801:	
  5849  0FAC                     	goto	l4717
  5850  0FAC  2FAF               	line	135
  5851                           	
  5852                           l800:	
  5853  0FAD                     	goto	l4717
  5854  0FAD  2FAF               	
  5855                           l798:	
  5856  0FAE                     	goto	l4717
  5857  0FAE  2FAF               	
  5858                           l796:	
  5859  0FAF                     	
  5860                           l4717:	
  5861  0FAF                     ;SONG.c: 134: };SONG.c: 135: if (TempTone == 0)
  5862                           	movf	((_TempTone)),w
  5863  0FAF  0840               	btfss	status,2
  5864  0FB0  1D03               	goto	u6691
  5865  0FB1  2FB3               	goto	u6690
  5866  0FB2  2FB4               u6691:
  5867  0FB3                     	goto	l4729
  5868  0FB3  2FCC               u6690:
  5869  0FB4                     	line	137
  5870                           	
  5871                           l4719:	
  5872  0FB4                     ;SONG.c: 136: {;SONG.c: 137: TRISCbits.TRISC2 = 1;
  5873                           	bsf	status, 5	;RP0=1, select bank1
  5874  0FB4  1683               	bcf	status, 6	;RP1=0, select bank1
  5875  0FB5  1303               	bsf	(135)^080h,2	;volatile
  5876  0FB6  1507               	line	138
  5877                           	
  5878                           l4721:	
  5879  0FB7                     ;SONG.c: 138: SixteenNoteDelay(TempMetre);
  5880                           	bcf	status, 5	;RP0=0, select bank0
  5881  0FB7  1283               	bcf	status, 6	;RP1=0, select bank0
  5882  0FB8  1303               	movf	(_TempMetre),w
  5883  0FB9  083F               	fcall	_SixteenNoteDelay
  5884  0FBA  160A  118A  24E7  120A  158A  	line	139
  5885                           	
  5886                           l4723:	
  5887  0FBF                     ;SONG.c: 139: TRISCbits.TRISC2 = 0;
  5888                           	bsf	status, 5	;RP0=1, select bank1
  5889  0FBF  1683               	bcf	status, 6	;RP1=0, select bank1
  5890  0FC0  1303               	bcf	(135)^080h,2	;volatile
  5891  0FC1  1107               	line	140
  5892                           	
  5893                           l4725:	
  5894  0FC2                     ;SONG.c: 140: MusicPosition++;
  5895                           	movlw	01h
  5896  0FC2  3001               	bcf	status, 5	;RP0=0, select bank0
  5897  0FC3  1283               	bcf	status, 6	;RP1=0, select bank0
  5898  0FC4  1303               	addwf	(_MusicPosition),f
  5899  0FC5  07A7               	skipnc
  5900  0FC6  1803               	incf	(_MusicPosition+1),f
  5901  0FC7  0AA8               	movlw	0
  5902  0FC8  3000               	addwf	(_MusicPosition+1),f
  5903  0FC9  07A8               	goto	l794
  5904  0FCA  2FFF               	line	141
  5905                           	
  5906                           l4727:	
  5907  0FCB                     ;SONG.c: 141: return;
  5908                           	goto	l794
  5909  0FCB  2FFF               	line	142
  5910                           	
  5911                           l802:	
  5912  0FCC                     	line	143
  5913                           	
  5914                           l4729:	
  5915  0FCC                     ;SONG.c: 142: };SONG.c: 143: if (TempTone == 255) {
  5916                           		incf	((_TempTone)),w
  5917  0FCC  0A40               	btfss	status,2
  5918  0FCD  1D03               	goto	u6701
  5919  0FCE  2FD0               	goto	u6700
  5920  0FCF  2FD1               u6701:
  5921  0FD0                     	goto	l803
  5922  0FD0  2FE1               u6700:
  5923  0FD1                     	line	144
  5924                           	
  5925                           l4731:	
  5926  0FD1                     ;SONG.c: 144: SongNum++;
  5927                           	movlw	low(01h)
  5928  0FD1  3001               	movwf	(??_MusicPlay+0)+0
  5929  0FD2  00F9               	movf	(??_MusicPlay+0)+0,w
  5930  0FD3  0879               	addwf	(_SongNum),f
  5931  0FD4  07C2               	line	145
  5932                           	
  5933                           l4733:	
  5934  0FD5                     ;SONG.c: 145: if (SongNum > 3) {
  5935                           	movf	(_SongNum),w
  5936  0FD5  0842               	xorlw	80h
  5937  0FD6  3A80               	addlw	-((04h)^80h)
  5938  0FD7  3E7C               	skipc
  5939  0FD8  1C03               	goto	u6711
  5940  0FD9  2FDB               	goto	u6710
  5941  0FDA  2FDC               u6711:
  5942  0FDB                     	goto	l804
  5943  0FDB  2FDD               u6710:
  5944  0FDC                     	line	146
  5945                           	
  5946                           l4735:	
  5947  0FDC                     ;SONG.c: 146: SongNum = 0;
  5948                           	clrf	(_SongNum)
  5949  0FDC  01C2               	line	147
  5950                           	
  5951                           l804:	
  5952  0FDD                     	line	148
  5953                           ;SONG.c: 147: };SONG.c: 148: MusicPosition = 0;
  5954                           	clrf	(_MusicPosition)
  5955  0FDD  01A7               	clrf	(_MusicPosition+1)
  5956  0FDE  01A8               	goto	l794
  5957  0FDF  2FFF               	line	149
  5958                           	
  5959                           l4737:	
  5960  0FE0                     ;SONG.c: 149: return;
  5961                           	goto	l794
  5962  0FE0  2FFF               	line	150
  5963                           	
  5964                           l803:	
  5965  0FE1                     	line	152
  5966                           ;SONG.c: 150: };SONG.c: 152: TRISCbits.TRISC2 = 0;
  5967                           	bsf	status, 5	;RP0=1, select bank1
  5968  0FE1  1683               	bcf	status, 6	;RP1=0, select bank1
  5969  0FE2  1303               	bcf	(135)^080h,2	;volatile
  5970  0FE3  1107               	line	153
  5971                           	
  5972                           l4739:	
  5973  0FE4                     ;SONG.c: 153: PwmTone(TempTone);
  5974                           	bcf	status, 5	;RP0=0, select bank0
  5975  0FE4  1283               	bcf	status, 6	;RP1=0, select bank0
  5976  0FE5  1303               	movf	(_TempTone),w
  5977  0FE6  0840               	fcall	_PwmTone
  5978  0FE7  160A  118A  2681  120A  158A  	line	154
  5979                           ;SONG.c: 154: SixteenNoteDelay(TempMetre);
  5980                           	bcf	status, 5	;RP0=0, select bank0
  5981  0FEC  1283               	bcf	status, 6	;RP1=0, select bank0
  5982  0FED  1303               	movf	(_TempMetre),w
  5983  0FEE  083F               	fcall	_SixteenNoteDelay
  5984  0FEF  160A  118A  24E7  120A  158A  	line	155
  5985                           	
  5986                           l4741:	
  5987  0FF4                     ;SONG.c: 155: MusicPosition++;
  5988                           	movlw	01h
  5989  0FF4  3001               	bcf	status, 5	;RP0=0, select bank0
  5990  0FF5  1283               	bcf	status, 6	;RP1=0, select bank0
  5991  0FF6  1303               	addwf	(_MusicPosition),f
  5992  0FF7  07A7               	skipnc
  5993  0FF8  1803               	incf	(_MusicPosition+1),f
  5994  0FF9  0AA8               	movlw	0
  5995  0FFA  3000               	addwf	(_MusicPosition+1),f
  5996  0FFB  07A8               	line	157
  5997                           	
  5998                           l4743:	
  5999  0FFC                     ;SONG.c: 157: TRISCbits.TRISC2 = 1;
  6000                           	bsf	status, 5	;RP0=1, select bank1
  6001  0FFC  1683               	bcf	status, 6	;RP1=0, select bank1
  6002  0FFD  1303               	bsf	(135)^080h,2	;volatile
  6003  0FFE  1507               	line	158
  6004                           	
  6005                           l794:	
  6006  0FFF                     	return
  6007  0FFF  0008               	opt stack 0
  6008                           GLOBAL	__end_of_MusicPlay
  6009                           	__end_of_MusicPlay:
  6010  1000                     	signat	_MusicPlay,89
  6011                           	global	_SixteenNoteDelay
  6012                           
  6013 ;; *************** function _SixteenNoteDelay *****************
  6014 ;; Defined at:
  6015 ;;		line 21 in file "DELAY.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;  n               1    wreg     unsigned char 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  n               1    0[BANK0 ] unsigned char 
  6020 ;;  x               1    1[BANK0 ] unsigned char 
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      void 
  6023 ;; Registers used:
  6024 ;;		wreg, status,2, status,0, pclath, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6030 ;;      Params:         0       0       0       0       0
  6031 ;;      Locals:         0       2       0       0       0
  6032 ;;      Temps:          1       0       0       0       0
  6033 ;;      Totals:         1       2       0       0       0
  6034 ;;Total ram usage:        3 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    2
  6037 ;; This function calls:
  6038 ;;		_delay_ms
  6039 ;; This function is called by:
  6040 ;;		_MusicPlay
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  6044                           	file	"DELAY.c"
  6045                           	line	21
  6046                           global __ptext12
  6047                           __ptext12:	;psect for function _SixteenNoteDelay
  6048  14E7                     psect	text12
  6049                           	file	"DELAY.c"
  6050                           	line	21
  6051                           	global	__size_of_SixteenNoteDelay
  6052                           	__size_of_SixteenNoteDelay	equ	__end_of_SixteenNoteDelay-_SixteenNoteDelay
  6053  0022                     	
  6054                           _SixteenNoteDelay:	
  6055  14E7                     ;incstack = 0
  6056                           	opt	stack 4
  6057                           ; Regs used in _SixteenNoteDelay: [wreg+status,2+status,0+pclath+cstack]
  6058                           ;SixteenNoteDelay@n stored from wreg
  6059                           	bcf	status, 5	;RP0=0, select bank0
  6060  14E7  1283               	bcf	status, 6	;RP1=0, select bank0
  6061  14E8  1303               	movwf	(SixteenNoteDelay@n)
  6062  14E9  00DD               	line	23
  6063                           	
  6064                           l3985:	
  6065  14EA                     ;DELAY.c: 22: unsigned char x;;DELAY.c: 23: for (x = n; x > 0; x--)
  6066                           	movf	(SixteenNoteDelay@n),w
  6067  14EA  085D               	movwf	(??_SixteenNoteDelay+0)+0
  6068  14EB  00F8               	movf	(??_SixteenNoteDelay+0)+0,w
  6069  14EC  0878               	movwf	(SixteenNoteDelay@x)
  6070  14ED  00DE               	
  6071                           l3987:	
  6072  14EE                     	movf	((SixteenNoteDelay@x)),w
  6073  14EE  085E               	btfss	status,2
  6074  14EF  1D03               	goto	u4791
  6075  14F0  2CF2               	goto	u4790
  6076  14F1  2CF3               u4791:
  6077  14F2                     	goto	l3991
  6078  14F2  2CF5               u4790:
  6079  14F3                     	goto	l308
  6080  14F3  2D08               	
  6081                           l3989:	
  6082  14F4                     	goto	l308
  6083  14F4  2D08               	line	24
  6084                           	
  6085                           l306:	
  6086  14F5                     	
  6087                           l3991:	
  6088  14F5                     ;DELAY.c: 24: delay_ms(170);
  6089                           	movlw	0AAh
  6090  14F5  30AA               	movwf	(delay_ms@n)
  6091  14F6  00F2               	movlw	0
  6092  14F7  3000               	movwf	((delay_ms@n))+1
  6093  14F8  00F3               	fcall	_delay_ms
  6094  14F9  160A  118A  2554  160A  118A  	line	23
  6095                           	
  6096                           l3993:	
  6097  14FE                     	movlw	01h
  6098  14FE  3001               	bcf	status, 5	;RP0=0, select bank0
  6099  14FF  1283               	bcf	status, 6	;RP1=0, select bank0
  6100  1500  1303               	subwf	(SixteenNoteDelay@x),f
  6101  1501  02DE               	
  6102                           l3995:	
  6103  1502                     	movf	((SixteenNoteDelay@x)),w
  6104  1502  085E               	btfss	status,2
  6105  1503  1D03               	goto	u4801
  6106  1504  2D06               	goto	u4800
  6107  1505  2D07               u4801:
  6108  1506                     	goto	l3991
  6109  1506  2CF5               u4800:
  6110  1507                     	goto	l308
  6111  1507  2D08               	
  6112                           l307:	
  6113  1508                     	line	25
  6114                           	
  6115                           l308:	
  6116  1508                     	return
  6117  1508  0008               	opt stack 0
  6118                           GLOBAL	__end_of_SixteenNoteDelay
  6119                           	__end_of_SixteenNoteDelay:
  6120  1509                     	signat	_SixteenNoteDelay,4217
  6121                           	global	_PwmTone
  6122                           
  6123 ;; *************** function _PwmTone *****************
  6124 ;; Defined at:
  6125 ;;		line 102 in file "SONG.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  n               1    wreg     unsigned char 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  n               1    6[COMMON] unsigned char 
  6130 ;;  X               2    7[COMMON] int 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6140 ;;      Params:         0       0       0       0       0
  6141 ;;      Locals:         3       0       0       0       0
  6142 ;;      Temps:          4       0       0       0       0
  6143 ;;      Totals:         7       0       0       0       0
  6144 ;;Total ram usage:        7 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; Hardware stack levels required when called:    1
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_beep_ms
  6151 ;;		_MusicPlay
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  6155                           	file	"SONG.c"
  6156                           	line	102
  6157                           global __ptext13
  6158                           __ptext13:	;psect for function _PwmTone
  6159  1681                     psect	text13
  6160                           	file	"SONG.c"
  6161                           	line	102
  6162                           	global	__size_of_PwmTone
  6163                           	__size_of_PwmTone	equ	__end_of_PwmTone-_PwmTone
  6164  003D                     	
  6165                           _PwmTone:	
  6166  1681                     ;incstack = 0
  6167                           	opt	stack 4
  6168                           ; Regs used in _PwmTone: [wreg+status,2+status,0]
  6169                           ;PwmTone@n stored from wreg
  6170                           	movwf	(PwmTone@n)
  6171  1681  00F6               	line	105
  6172                           	
  6173                           l2765:	
  6174  1682                     ;SONG.c: 103: signed int X;;SONG.c: 105: PR2 = n;
  6175                           	movf	(PwmTone@n),w
  6176  1682  0876               	bsf	status, 5	;RP0=1, select bank1
  6177  1683  1683               	bcf	status, 6	;RP1=0, select bank1
  6178  1684  1303               	movwf	(146)^080h	;volatile
  6179  1685  0092               	line	107
  6180                           	
  6181                           l2767:	
  6182  1686                     ;SONG.c: 107: X = (1 + PR2) << 1;
  6183                           	movf	(146)^080h,w	;volatile
  6184  1686  0812               	movwf	(??_PwmTone+0)+0
  6185  1687  00F2               	clrf	(??_PwmTone+0)+0+1
  6186  1688  01F3               	clrc
  6187  1689  1003               	rlf	(??_PwmTone+0)+0,f
  6188  168A  0DF2               	rlf	(??_PwmTone+0)+1,f
  6189  168B  0DF3               	movf	0+(??_PwmTone+0)+0,w
  6190  168C  0872               	addlw	low(02h)
  6191  168D  3E02               	movwf	(??_PwmTone+2)+0
  6192  168E  00F4               	movf	1+(??_PwmTone+0)+0,w
  6193  168F  0873               	skipnc
  6194  1690  1803               	addlw	1
  6195  1691  3E01               	addlw	high(02h)
  6196  1692  3E00               	movwf	1+(??_PwmTone+2)+0
  6197  1693  00F5               	movf	0+(??_PwmTone+2)+0,w
  6198  1694  0874               	movwf	(PwmTone@X)
  6199  1695  00F7               	movf	1+(??_PwmTone+2)+0,w
  6200  1696  0875               	movwf	(PwmTone@X+1)
  6201  1697  00F8               	line	109
  6202                           	
  6203                           l2769:	
  6204  1698                     ;SONG.c: 109: CCPR1L = X >> 2;
  6205                           	movf	(PwmTone@X+1),w
  6206  1698  0878               	movwf	(??_PwmTone+0)+0+1
  6207  1699  00F3               	movf	(PwmTone@X),w
  6208  169A  0877               	movwf	(??_PwmTone+0)+0
  6209  169B  00F2               	rlf	(??_PwmTone+0)+1,w
  6210  169C  0D73               	rrf	(??_PwmTone+0)+1,f
  6211  169D  0CF3               	rrf	(??_PwmTone+0)+0,f
  6212  169E  0CF2               	rlf	(??_PwmTone+0)+1,w
  6213  169F  0D73               	rrf	(??_PwmTone+0)+1,f
  6214  16A0  0CF3               	rrf	(??_PwmTone+0)+0,f
  6215  16A1  0CF2               	movf	0+(??_PwmTone+0)+0,w
  6216  16A2  0872               	bcf	status, 5	;RP0=0, select bank0
  6217  16A3  1283               	bcf	status, 6	;RP1=0, select bank0
  6218  16A4  1303               	movwf	(21)	;volatile
  6219  16A5  0095               	line	111
  6220                           ;SONG.c: 111: CCP1CONbits.CCP1X = X >> 1;
  6221                           	movf	(PwmTone@X+1),w
  6222  16A6  0878               	movwf	(??_PwmTone+0)+0+1
  6223  16A7  00F3               	movf	(PwmTone@X),w
  6224  16A8  0877               	movwf	(??_PwmTone+0)+0
  6225  16A9  00F2               	rlf	(??_PwmTone+0)+1,w
  6226  16AA  0D73               	rrf	(??_PwmTone+0)+1,f
  6227  16AB  0CF3               	rrf	(??_PwmTone+0)+0,f
  6228  16AC  0CF2               	movf	0+(??_PwmTone+0)+0,w
  6229  16AD  0872               	movwf	(??_PwmTone+2)+0
  6230  16AE  00F4               	swapf	(??_PwmTone+2)+0,f
  6231  16AF  0EF4               	rlf	(??_PwmTone+2)+0,f
  6232  16B0  0DF4               	movf	(23),w	;volatile
  6233  16B1  0817               	xorwf	(??_PwmTone+2)+0,w
  6234  16B2  0674               	andlw	not (((1<<1)-1)<<5)
  6235  16B3  39DF               	xorwf	(??_PwmTone+2)+0,w
  6236  16B4  0674               	movwf	(23)	;volatile
  6237  16B5  0097               	line	112
  6238                           	
  6239                           l2771:	
  6240  16B6                     ;SONG.c: 112: CCP1CONbits.CCP1Y = X;
  6241                           	rrf	(PwmTone@X),w
  6242  16B6  0C77               	skipc
  6243  16B7  1C03               	bcf	(23),4	;volatile
  6244  16B8  1217               	skipnc
  6245  16B9  1803               	bsf	(23),4	;volatile
  6246  16BA  1617               	line	114
  6247                           	
  6248                           l2773:	
  6249  16BB                     ;SONG.c: 114: CCP1CONbits.CCP1M3 = 1;
  6250                           	bsf	(23),3	;volatile
  6251  16BB  1597               	line	115
  6252                           	
  6253                           l2775:	
  6254  16BC                     ;SONG.c: 115: CCP1CONbits.CCP1M2 = 1;
  6255                           	bsf	(23),2	;volatile
  6256  16BC  1517               	line	116
  6257                           	
  6258                           l790:	
  6259  16BD                     	return
  6260  16BD  0008               	opt stack 0
  6261                           GLOBAL	__end_of_PwmTone
  6262                           	__end_of_PwmTone:
  6263  16BE                     	signat	_PwmTone,4217
  6264                           	global	_MusicDisplay
  6265                           
  6266 ;; *************** function _MusicDisplay *****************
  6267 ;; Defined at:
  6268 ;;		line 37 in file "main.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;		None
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;		None
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  1    wreg      void 
  6275 ;; Registers used:
  6276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6282 ;;      Params:         0       0       0       0       0
  6283 ;;      Locals:         0       0       0       0       0
  6284 ;;      Temps:          0       4       0       0       0
  6285 ;;      Totals:         0       4       0       0       0
  6286 ;;Total ram usage:        4 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    5
  6289 ;; This function calls:
  6290 ;;		_LCD_write_char
  6291 ;;		_LCD_write_string
  6292 ;; This function is called by:
  6293 ;;		_main
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  6297                           	file	"main.c"
  6298                           	line	37
  6299                           global __ptext14
  6300                           __ptext14:	;psect for function _MusicDisplay
  6301  0C17                     psect	text14
  6302                           	file	"main.c"
  6303                           	line	37
  6304                           	global	__size_of_MusicDisplay
  6305                           	__size_of_MusicDisplay	equ	__end_of_MusicDisplay-_MusicDisplay
  6306  0060                     	
  6307                           _MusicDisplay:	
  6308  0C17                     ;incstack = 0
  6309                           	opt	stack 2
  6310                           ; Regs used in _MusicDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6311                           	line	39
  6312                           	
  6313                           l4101:	
  6314  0C17                     ;main.c: 39: LCD_write_char(4,2,SongNum+'1');
  6315                           	movlw	low(02h)
  6316  0C17  3002               	bcf	status, 5	;RP0=0, select bank0
  6317  0C18  1283               	bcf	status, 6	;RP1=0, select bank0
  6318  0C19  1303               	movwf	(??_MusicDisplay+0)+0
  6319  0C1A  00E5               	movf	(??_MusicDisplay+0)+0,w
  6320  0C1B  0865               	movwf	(LCD_write_char@y)
  6321  0C1C  00E0               	movf	(_SongNum),w
  6322  0C1D  0842               	addlw	031h
  6323  0C1E  3E31               	movwf	(??_MusicDisplay+1)+0
  6324  0C1F  00E6               	movf	(??_MusicDisplay+1)+0,w
  6325  0C20  0866               	movwf	(LCD_write_char@dat)
  6326  0C21  00E1               	movlw	low(04h)
  6327  0C22  3004               	fcall	_LCD_write_char
  6328  0C23  160A  118A  236E  120A  158A  	line	40
  6329                           	
  6330                           l4103:	
  6331  0C28                     ;main.c: 40: LCD_write_string(6,2,SongName[SongNum]);
  6332                           	movlw	low(02h)
  6333  0C28  3002               	bcf	status, 5	;RP0=0, select bank0
  6334  0C29  1283               	bcf	status, 6	;RP1=0, select bank0
  6335  0C2A  1303               	movwf	(??_MusicDisplay+0)+0
  6336  0C2B  00E5               	movf	(??_MusicDisplay+0)+0,w
  6337  0C2C  0865               	movwf	(LCD_write_string@Y)
  6338  0C2D  00E0               	movf	(_SongNum),w
  6339  0C2E  0842               	movwf	(??_MusicDisplay+1)+0
  6340  0C2F  00E6               	movlw	(02h)-1
  6341  0C30  3001               u5125:
  6342  0C31                     	clrc
  6343  0C31  1003               	rlf	(??_MusicDisplay+1)+0,f
  6344  0C32  0DE6               	addlw	-1
  6345  0C33  3EFF               	skipz
  6346  0C34  1D03               	goto	u5125
  6347  0C35  2C31               	clrc
  6348  0C36  1003               	rlf	(??_MusicDisplay+1)+0,w
  6349  0C37  0D66               	addlw	low(((_SongName)|8000h))
  6350  0C38  3EB8               	movwf	fsr0
  6351  0C39  0084               	movlw	high(((_SongName)|8000h))
  6352  0C3A  308A               	skipnc
  6353  0C3B  1803               	addlw	1
  6354  0C3C  3E01               	movwf	btemp+1
  6355  0C3D  00FF               	fcall	stringtab
  6356  0C3E  120A  158A  2000  120A  158A  	movwf	(??_MusicDisplay+2)+0
  6357  0C43  00E7               	fcall	stringtab
  6358  0C44  120A  158A  2000  120A  158A  	movwf	(??_MusicDisplay+2)+0+1
  6359  0C49  00E8               		movf	(??_MusicDisplay+2)+0,w
  6360  0C4A  0867               	movwf	(LCD_write_string@s)
  6361  0C4B  00E1               movf	(??_MusicDisplay+2)+1,w
  6362  0C4C  0868               movwf	(LCD_write_string@s+1)
  6363  0C4D  00E2               
  6364                           	movlw	low(06h)
  6365  0C4E  3006               	fcall	_LCD_write_string
  6366  0C4F  160A  118A  2708  120A  158A  	line	41
  6367                           	
  6368                           l4105:	
  6369  0C54                     ;main.c: 41: if(isMusicPlaying)
  6370                           	btfss	(_isMusicPlaying/8),(_isMusicPlaying)&7
  6371  0C54  1D7A               	goto	u5131
  6372  0C55  2C57               	goto	u5130
  6373  0C56  2C58               u5131:
  6374  0C57                     	goto	l4109
  6375  0C57  2C67               u5130:
  6376  0C58                     	line	43
  6377                           	
  6378                           l4107:	
  6379  0C58                     ;main.c: 42: {;main.c: 43: LCD_write_string(10,1,"PLAY");
  6380                           	bcf	status, 5	;RP0=0, select bank0
  6381  0C58  1283               	bcf	status, 6	;RP1=0, select bank0
  6382  0C59  1303               	clrf	(LCD_write_string@Y)
  6383  0C5A  01E0               	incf	(LCD_write_string@Y),f
  6384  0C5B  0AE0               	movlw	low(((STR_5)|8000h))
  6385  0C5C  3067               	movwf	(LCD_write_string@s)
  6386  0C5D  00E1               	movlw	high(((STR_5)|8000h))
  6387  0C5E  308B               	movwf	((LCD_write_string@s))+1
  6388  0C5F  00E2               	movlw	low(0Ah)
  6389  0C60  300A               	fcall	_LCD_write_string
  6390  0C61  160A  118A  2708  120A  158A  	line	44
  6391                           ;main.c: 44: }
  6392                           	goto	l63
  6393  0C66  2C76               	line	45
  6394                           	
  6395                           l61:	
  6396  0C67                     	line	47
  6397                           	
  6398                           l4109:	
  6399  0C67                     ;main.c: 45: else;main.c: 46: {;main.c: 47: LCD_write_string(10,1,"STOP");
  6400                           	bcf	status, 5	;RP0=0, select bank0
  6401  0C67  1283               	bcf	status, 6	;RP1=0, select bank0
  6402  0C68  1303               	clrf	(LCD_write_string@Y)
  6403  0C69  01E0               	incf	(LCD_write_string@Y),f
  6404  0C6A  0AE0               	movlw	low(((STR_6)|8000h))
  6405  0C6B  3062               	movwf	(LCD_write_string@s)
  6406  0C6C  00E1               	movlw	high(((STR_6)|8000h))
  6407  0C6D  308B               	movwf	((LCD_write_string@s))+1
  6408  0C6E  00E2               	movlw	low(0Ah)
  6409  0C6F  300A               	fcall	_LCD_write_string
  6410  0C70  160A  118A  2708  120A  158A  	goto	l63
  6411  0C75  2C76               	line	48
  6412                           	
  6413                           l62:	
  6414  0C76                     	line	49
  6415                           	
  6416                           l63:	
  6417  0C76                     	return
  6418  0C76  0008               	opt stack 0
  6419                           GLOBAL	__end_of_MusicDisplay
  6420                           	__end_of_MusicDisplay:
  6421  0C77                     	signat	_MusicDisplay,89
  6422                           	global	_ModeSwitch
  6423                           
  6424 ;; *************** function _ModeSwitch *****************
  6425 ;; Defined at:
  6426 ;;		line 172 in file "KEY.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;		None
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;		None
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  1    wreg      void 
  6433 ;; Registers used:
  6434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6440 ;;      Params:         0       0       0       0       0
  6441 ;;      Locals:         0       0       0       0       0
  6442 ;;      Temps:          0       2       0       0       0
  6443 ;;      Totals:         0       2       0       0       0
  6444 ;;Total ram usage:        2 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; Hardware stack levels required when called:    7
  6447 ;; This function calls:
  6448 ;;		_AlarmDataDisplay
  6449 ;;		_ClearScreenOnce
  6450 ;;		_Ds1302ReadTimeBCD
  6451 ;;		_Ds1302WriteTime
  6452 ;;		_LCD_write_string
  6453 ;;		_TimeDataDisplay
  6454 ;;		_Trans_Alarm_bit
  6455 ;;		_Trans_Time_bit
  6456 ;;		_Y_position
  6457 ;;		_delay_ms
  6458 ;; This function is called by:
  6459 ;;		_main
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  6463                           	file	"KEY.c"
  6464                           	line	172
  6465                           global __ptext15
  6466                           __ptext15:	;psect for function _ModeSwitch
  6467  0038                     psect	text15
  6468                           	file	"KEY.c"
  6469                           	line	172
  6470                           	global	__size_of_ModeSwitch
  6471                           	__size_of_ModeSwitch	equ	__end_of_ModeSwitch-_ModeSwitch
  6472  0735                     	
  6473                           _ModeSwitch:	
  6474  0038                     ;incstack = 0
  6475                           	opt	stack 0
  6476                           ; Regs used in _ModeSwitch: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6477                           	line	173
  6478                           	
  6479                           l4155:	
  6480  0038                     ;KEY.c: 173: switch (Mode)
  6481                           	goto	l4689
  6482  0038  2F5F               	line	176
  6483                           ;KEY.c: 174: {;KEY.c: 176: case 0:
  6484                           	
  6485                           l493:	
  6486  0039                     	line	179
  6487                           	
  6488                           l4157:	
  6489  0039                     ;KEY.c: 177: {;KEY.c: 179: ClearScreenOnce();
  6490                           	fcall	_ClearScreenOnce
  6491  0039  120A  158A  23BC  120A  118A  	line	181
  6492                           ;KEY.c: 181: Ds1302ReadTimeBCD();
  6493                           	fcall	_Ds1302ReadTimeBCD
  6494  003E  160A  118A  25D7  120A  118A  	line	182
  6495                           	
  6496                           l4159:	
  6497  0043                     ;KEY.c: 182: Trans_Time_bit();
  6498                           	fcall	_Trans_Time_bit
  6499  0043  120A  158A  25A4  120A  118A  	line	183
  6500                           	
  6501                           l4161:	
  6502  0048                     ;KEY.c: 183: TimeDataDisplay();
  6503                           	fcall	_TimeDataDisplay
  6504  0048  120A  158A  2612  120A  118A  	line	184
  6505                           ;KEY.c: 184: break;
  6506                           	goto	l701
  6507  004D  2F6C               	line	187
  6508                           ;KEY.c: 185: };KEY.c: 187: case 1:
  6509                           	
  6510                           l495:	
  6511  004E                     	line	189
  6512                           	
  6513                           l4163:	
  6514  004E                     ;KEY.c: 188: {;KEY.c: 189: ClearScreenOnce();
  6515                           	fcall	_ClearScreenOnce
  6516  004E  120A  158A  23BC  120A  118A  	line	190
  6517                           	
  6518                           l4165:	
  6519  0053                     ;KEY.c: 190: delay_ms(73);
  6520                           	movlw	049h
  6521  0053  3049               	movwf	(delay_ms@n)
  6522  0054  00F2               	movlw	0
  6523  0055  3000               	movwf	((delay_ms@n))+1
  6524  0056  00F3               	fcall	_delay_ms
  6525  0057  160A  118A  2554  120A  118A  	line	192
  6526                           	
  6527                           l4167:	
  6528  005C                     ;KEY.c: 192: LCD_write_string(LcdTimeAddr[cursor_addr], Y_position(cursor_addr), "_");
  6529                           	bcf	status, 5	;RP0=0, select bank0
  6530  005C  1283               	bcf	status, 6	;RP1=0, select bank0
  6531  005D  1303               	movf	(_cursor_addr),w
  6532  005E  082A               	fcall	_Y_position
  6533  005F  160A  118A  2509  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  6534  0064  1283               	bcf	status, 6	;RP1=0, select bank0
  6535  0065  1303               	movwf	(??_ModeSwitch+0)+0
  6536  0066  00E7               	movf	(??_ModeSwitch+0)+0,w
  6537  0067  0867               	movwf	(LCD_write_string@Y)
  6538  0068  00E0               	movlw	low(((STR_18)|8000h))
  6539  0069  306E               	movwf	(LCD_write_string@s)
  6540  006A  00E1               	movlw	high(((STR_18)|8000h))
  6541  006B  308B               	movwf	((LCD_write_string@s))+1
  6542  006C  00E2               	movf	(_cursor_addr),w
  6543  006D  082A               	addlw	low(_LcdTimeAddr|((0x0)<<8))&0ffh
  6544  006E  3E43               	movwf	fsr0
  6545  006F  0084               	bcf	status, 7	;select IRP bank0
  6546  0070  1383               	movf	indf,w
  6547  0071  0800               	fcall	_LCD_write_string
  6548  0072  160A  118A  2708  120A  118A  	line	193
  6549                           ;KEY.c: 193: delay_ms(96);
  6550                           	movlw	060h
  6551  0077  3060               	movwf	(delay_ms@n)
  6552  0078  00F2               	movlw	0
  6553  0079  3000               	movwf	((delay_ms@n))+1
  6554  007A  00F3               	fcall	_delay_ms
  6555  007B  160A  118A  2554  120A  118A  	line	194
  6556                           ;KEY.c: 194: switch (cursor_addr) {
  6557                           	goto	l4507
  6558  0080  2D0B               	line	195
  6559                           ;KEY.c: 195: case 0:
  6560                           	
  6561                           l497:	
  6562  0081                     	line	197
  6563                           	
  6564                           l4169:	
  6565  0081                     ;KEY.c: 196: {;KEY.c: 197: if (key2pushflag == 1) {
  6566                           		decf	((_key2pushflag)),w
  6567  0081  037B               	btfss	status,2
  6568  0082  1D03               	goto	u5201
  6569  0083  2885               	goto	u5200
  6570  0084  2886               u5201:
  6571  0085                     	goto	l4177
  6572  0085  2896               u5200:
  6573  0086                     	line	198
  6574                           	
  6575                           l4171:	
  6576  0086                     ;KEY.c: 198: YEAR_ten++;
  6577                           	movlw	low(01h)
  6578  0086  3001               	bcf	status, 5	;RP0=0, select bank0
  6579  0087  1283               	bcf	status, 6	;RP1=0, select bank0
  6580  0088  1303               	movwf	(??_ModeSwitch+0)+0
  6581  0089  00E7               	movf	(??_ModeSwitch+0)+0,w
  6582  008A  0867               	addwf	(_YEAR_ten),f
  6583  008B  07B8               	line	199
  6584                           	
  6585                           l4173:	
  6586  008C                     ;KEY.c: 199: if (YEAR_ten > 9) {
  6587                           	movf	(_YEAR_ten),w
  6588  008C  0838               	xorlw	80h
  6589  008D  3A80               	addlw	-((0Ah)^80h)
  6590  008E  3E76               	skipc
  6591  008F  1C03               	goto	u5211
  6592  0090  2892               	goto	u5210
  6593  0091  2893               u5211:
  6594  0092                     	goto	l499
  6595  0092  2894               u5210:
  6596  0093                     	line	200
  6597                           	
  6598                           l4175:	
  6599  0093                     ;KEY.c: 200: YEAR_ten = 0;
  6600                           	clrf	(_YEAR_ten)
  6601  0093  01B8               	line	201
  6602                           	
  6603                           l499:	
  6604  0094                     	line	202
  6605                           ;KEY.c: 201: };KEY.c: 202: key2pushflag = 0;
  6606                           	clrf	(_key2pushflag)
  6607  0094  01FB               	line	203
  6608                           ;KEY.c: 203: } else if (key3pushflag == 1) {
  6609                           	goto	l4187
  6610  0095  28AD               	
  6611                           l498:	
  6612  0096                     	
  6613                           l4177:	
  6614  0096                     	bcf	status, 5	;RP0=0, select bank0
  6615  0096  1283               	bcf	status, 6	;RP1=0, select bank0
  6616  0097  1303               		decf	((_key3pushflag)),w
  6617  0098  0329               	btfss	status,2
  6618  0099  1D03               	goto	u5221
  6619  009A  289C               	goto	u5220
  6620  009B  289D               u5221:
  6621  009C                     	goto	l4187
  6622  009C  28AD               u5220:
  6623  009D                     	line	204
  6624                           	
  6625                           l4179:	
  6626  009D                     ;KEY.c: 204: YEAR_ten--;
  6627                           	movlw	low(-1)
  6628  009D  30FF               	movwf	(??_ModeSwitch+0)+0
  6629  009E  00E7               	movf	(??_ModeSwitch+0)+0,w
  6630  009F  0867               	addwf	(_YEAR_ten),f
  6631  00A0  07B8               	line	205
  6632                           	
  6633                           l4181:	
  6634  00A1                     ;KEY.c: 205: if (YEAR_ten < 0) {
  6635                           	btfss	(_YEAR_ten),7
  6636  00A1  1FB8               	goto	u5231
  6637  00A2  28A4               	goto	u5230
  6638  00A3  28A5               u5231:
  6639  00A4                     	goto	l4185
  6640  00A4  28AA               u5230:
  6641  00A5                     	line	206
  6642                           	
  6643                           l4183:	
  6644  00A5                     ;KEY.c: 206: YEAR_ten = 9;
  6645                           	movlw	low(09h)
  6646  00A5  3009               	movwf	(??_ModeSwitch+0)+0
  6647  00A6  00E7               	movf	(??_ModeSwitch+0)+0,w
  6648  00A7  0867               	movwf	(_YEAR_ten)
  6649  00A8  00B8               	goto	l4185
  6650  00A9  28AA               	line	207
  6651                           	
  6652                           l502:	
  6653  00AA                     	line	208
  6654                           	
  6655                           l4185:	
  6656  00AA                     ;KEY.c: 207: };KEY.c: 208: key3pushflag = 0;
  6657                           	clrf	(_key3pushflag)
  6658  00AA  01A9               	goto	l4187
  6659  00AB  28AD               	line	209
  6660                           	
  6661                           l501:	
  6662  00AC                     	goto	l4187
  6663  00AC  28AD               	line	210
  6664                           	
  6665                           l500:	
  6666  00AD                     	
  6667                           l4187:	
  6668  00AD                     ;KEY.c: 209: };KEY.c: 210: Ds1302WriteTime(6, YEAR_ten << 4 | YEAR_unit);
  6669                           	movf	(_YEAR_ten),w
  6670  00AD  0838               	movwf	(??_ModeSwitch+0)+0
  6671  00AE  00E7               	movlw	(04h)-1
  6672  00AF  3003               u5245:
  6673  00B0                     	clrc
  6674  00B0  1003               	rlf	(??_ModeSwitch+0)+0,f
  6675  00B1  0DE7               	addlw	-1
  6676  00B2  3EFF               	skipz
  6677  00B3  1D03               	goto	u5245
  6678  00B4  28B0               	clrc
  6679  00B5  1003               	rlf	(??_ModeSwitch+0)+0,w
  6680  00B6  0D67               	iorwf	(_YEAR_unit),w
  6681  00B7  0437               	movwf	(??_ModeSwitch+1)+0
  6682  00B8  00E8               	movf	(??_ModeSwitch+1)+0,w
  6683  00B9  0868               	movwf	(Ds1302WriteTime@dat)
  6684  00BA  00F6               	movlw	low(06h)
  6685  00BB  3006               	fcall	_Ds1302WriteTime
  6686  00BC  160A  118A  25A9  120A  118A  	line	211
  6687                           ;KEY.c: 211: break;
  6688                           	goto	l4509
  6689  00C1  2D36               	line	213
  6690                           ;KEY.c: 212: };KEY.c: 213: case 1:
  6691                           	
  6692                           l504:	
  6693  00C2                     	line	215
  6694                           	
  6695                           l4189:	
  6696  00C2                     ;KEY.c: 214: {;KEY.c: 215: if (key2pushflag == 1) {
  6697                           		decf	((_key2pushflag)),w
  6698  00C2  037B               	btfss	status,2
  6699  00C3  1D03               	goto	u5251
  6700  00C4  28C6               	goto	u5250
  6701  00C5  28C7               u5251:
  6702  00C6                     	goto	l4197
  6703  00C6  28D7               u5250:
  6704  00C7                     	line	216
  6705                           	
  6706                           l4191:	
  6707  00C7                     ;KEY.c: 216: YEAR_unit++;
  6708                           	movlw	low(01h)
  6709  00C7  3001               	bcf	status, 5	;RP0=0, select bank0
  6710  00C8  1283               	bcf	status, 6	;RP1=0, select bank0
  6711  00C9  1303               	movwf	(??_ModeSwitch+0)+0
  6712  00CA  00E7               	movf	(??_ModeSwitch+0)+0,w
  6713  00CB  0867               	addwf	(_YEAR_unit),f
  6714  00CC  07B7               	line	217
  6715                           	
  6716                           l4193:	
  6717  00CD                     ;KEY.c: 217: if (YEAR_unit > 9) {
  6718                           	movf	(_YEAR_unit),w
  6719  00CD  0837               	xorlw	80h
  6720  00CE  3A80               	addlw	-((0Ah)^80h)
  6721  00CF  3E76               	skipc
  6722  00D0  1C03               	goto	u5261
  6723  00D1  28D3               	goto	u5260
  6724  00D2  28D4               u5261:
  6725  00D3                     	goto	l506
  6726  00D3  28D5               u5260:
  6727  00D4                     	line	218
  6728                           	
  6729                           l4195:	
  6730  00D4                     ;KEY.c: 218: YEAR_unit = 0;
  6731                           	clrf	(_YEAR_unit)
  6732  00D4  01B7               	line	219
  6733                           	
  6734                           l506:	
  6735  00D5                     	line	220
  6736                           ;KEY.c: 219: };KEY.c: 220: key2pushflag = 0;
  6737                           	clrf	(_key2pushflag)
  6738  00D5  01FB               	line	221
  6739                           ;KEY.c: 221: } else if (key3pushflag == 1) {
  6740                           	goto	l4207
  6741  00D6  28EE               	
  6742                           l505:	
  6743  00D7                     	
  6744                           l4197:	
  6745  00D7                     	bcf	status, 5	;RP0=0, select bank0
  6746  00D7  1283               	bcf	status, 6	;RP1=0, select bank0
  6747  00D8  1303               		decf	((_key3pushflag)),w
  6748  00D9  0329               	btfss	status,2
  6749  00DA  1D03               	goto	u5271
  6750  00DB  28DD               	goto	u5270
  6751  00DC  28DE               u5271:
  6752  00DD                     	goto	l4207
  6753  00DD  28EE               u5270:
  6754  00DE                     	line	222
  6755                           	
  6756                           l4199:	
  6757  00DE                     ;KEY.c: 222: YEAR_unit--;
  6758                           	movlw	low(-1)
  6759  00DE  30FF               	movwf	(??_ModeSwitch+0)+0
  6760  00DF  00E7               	movf	(??_ModeSwitch+0)+0,w
  6761  00E0  0867               	addwf	(_YEAR_unit),f
  6762  00E1  07B7               	line	223
  6763                           	
  6764                           l4201:	
  6765  00E2                     ;KEY.c: 223: if (YEAR_unit < 0) {
  6766                           	btfss	(_YEAR_unit),7
  6767  00E2  1FB7               	goto	u5281
  6768  00E3  28E5               	goto	u5280
  6769  00E4  28E6               u5281:
  6770  00E5                     	goto	l4205
  6771  00E5  28EB               u5280:
  6772  00E6                     	line	224
  6773                           	
  6774                           l4203:	
  6775  00E6                     ;KEY.c: 224: YEAR_unit = 9;
  6776                           	movlw	low(09h)
  6777  00E6  3009               	movwf	(??_ModeSwitch+0)+0
  6778  00E7  00E7               	movf	(??_ModeSwitch+0)+0,w
  6779  00E8  0867               	movwf	(_YEAR_unit)
  6780  00E9  00B7               	goto	l4205
  6781  00EA  28EB               	line	225
  6782                           	
  6783                           l509:	
  6784  00EB                     	line	226
  6785                           	
  6786                           l4205:	
  6787  00EB                     ;KEY.c: 225: };KEY.c: 226: key3pushflag = 0;
  6788                           	clrf	(_key3pushflag)
  6789  00EB  01A9               	goto	l4207
  6790  00EC  28EE               	line	227
  6791                           	
  6792                           l508:	
  6793  00ED                     	goto	l4207
  6794  00ED  28EE               	line	228
  6795                           	
  6796                           l507:	
  6797  00EE                     	
  6798                           l4207:	
  6799  00EE                     ;KEY.c: 227: };KEY.c: 228: Ds1302WriteTime(6, YEAR_ten << 4 | YEAR_unit);
  6800                           	movf	(_YEAR_ten),w
  6801  00EE  0838               	movwf	(??_ModeSwitch+0)+0
  6802  00EF  00E7               	movlw	(04h)-1
  6803  00F0  3003               u5295:
  6804  00F1                     	clrc
  6805  00F1  1003               	rlf	(??_ModeSwitch+0)+0,f
  6806  00F2  0DE7               	addlw	-1
  6807  00F3  3EFF               	skipz
  6808  00F4  1D03               	goto	u5295
  6809  00F5  28F1               	clrc
  6810  00F6  1003               	rlf	(??_ModeSwitch+0)+0,w
  6811  00F7  0D67               	iorwf	(_YEAR_unit),w
  6812  00F8  0437               	movwf	(??_ModeSwitch+1)+0
  6813  00F9  00E8               	movf	(??_ModeSwitch+1)+0,w
  6814  00FA  0868               	movwf	(Ds1302WriteTime@dat)
  6815  00FB  00F6               	movlw	low(06h)
  6816  00FC  3006               	fcall	_Ds1302WriteTime
  6817  00FD  160A  118A  25A9  120A  118A  	line	229
  6818                           ;KEY.c: 229: break;
  6819                           	goto	l4509
  6820  0102  2D36               	line	231
  6821                           ;KEY.c: 230: };KEY.c: 231: case 2:
  6822                           	
  6823                           l510:	
  6824  0103                     	line	233
  6825                           	
  6826                           l4209:	
  6827  0103                     ;KEY.c: 232: {;KEY.c: 233: if (key2pushflag == 1) {
  6828                           		decf	((_key2pushflag)),w
  6829  0103  037B               	btfss	status,2
  6830  0104  1D03               	goto	u5301
  6831  0105  2907               	goto	u5300
  6832  0106  2908               u5301:
  6833  0107                     	goto	l4223
  6834  0107  292A               u5300:
  6835  0108                     	line	234
  6836                           	
  6837                           l4211:	
  6838  0108                     ;KEY.c: 234: MONTH_ten++;
  6839                           	movlw	low(01h)
  6840  0108  3001               	bcf	status, 5	;RP0=0, select bank0
  6841  0109  1283               	bcf	status, 6	;RP1=0, select bank0
  6842  010A  1303               	movwf	(??_ModeSwitch+0)+0
  6843  010B  00E7               	movf	(??_ModeSwitch+0)+0,w
  6844  010C  0867               	addwf	(_MONTH_ten),f
  6845  010D  07B6               	line	235
  6846                           	
  6847                           l4213:	
  6848  010E                     ;KEY.c: 235: if (MONTH_unit > 0) {
  6849                           	movf	(_MONTH_unit),w
  6850  010E  0835               	xorlw	80h
  6851  010F  3A80               	addlw	-((01h)^80h)
  6852  0110  3E7F               	skipc
  6853  0111  1C03               	goto	u5311
  6854  0112  2914               	goto	u5310
  6855  0113  2915               u5311:
  6856  0114                     	goto	l4219
  6857  0114  291F               u5310:
  6858  0115                     	line	236
  6859                           	
  6860                           l4215:	
  6861  0115                     ;KEY.c: 236: if (MONTH_ten > 1) {
  6862                           	movf	(_MONTH_ten),w
  6863  0115  0836               	xorlw	80h
  6864  0116  3A80               	addlw	-((02h)^80h)
  6865  0117  3E7E               	skipc
  6866  0118  1C03               	goto	u5321
  6867  0119  291B               	goto	u5320
  6868  011A  291C               u5321:
  6869  011B                     	goto	l514
  6870  011B  2928               u5320:
  6871  011C                     	line	237
  6872                           	
  6873                           l4217:	
  6874  011C                     ;KEY.c: 237: MONTH_ten = 0;
  6875                           	clrf	(_MONTH_ten)
  6876  011C  01B6               	goto	l514
  6877  011D  2928               	line	238
  6878                           	
  6879                           l513:	
  6880  011E                     	line	239
  6881                           ;KEY.c: 238: };KEY.c: 239: } else {
  6882                           	goto	l514
  6883  011E  2928               	
  6884                           l512:	
  6885  011F                     	line	240
  6886                           	
  6887                           l4219:	
  6888  011F                     ;KEY.c: 240: if (MONTH_ten > 2) {
  6889                           	movf	(_MONTH_ten),w
  6890  011F  0836               	xorlw	80h
  6891  0120  3A80               	addlw	-((03h)^80h)
  6892  0121  3E7D               	skipc
  6893  0122  1C03               	goto	u5331
  6894  0123  2925               	goto	u5330
  6895  0124  2926               u5331:
  6896  0125                     	goto	l514
  6897  0125  2928               u5330:
  6898  0126                     	line	241
  6899                           	
  6900                           l4221:	
  6901  0126                     ;KEY.c: 241: MONTH_ten = 0;
  6902                           	clrf	(_MONTH_ten)
  6903  0126  01B6               	goto	l514
  6904  0127  2928               	line	242
  6905                           	
  6906                           l515:	
  6907  0128                     	line	243
  6908                           	
  6909                           l514:	
  6910  0128                     	line	244
  6911                           ;KEY.c: 242: };KEY.c: 243: };KEY.c: 244: key2pushflag = 0;
  6912                           	clrf	(_key2pushflag)
  6913  0128  01FB               	line	245
  6914                           ;KEY.c: 245: } else if (key3pushflag == 1) {
  6915                           	goto	l4237
  6916  0129  2951               	
  6917                           l511:	
  6918  012A                     	
  6919                           l4223:	
  6920  012A                     	bcf	status, 5	;RP0=0, select bank0
  6921  012A  1283               	bcf	status, 6	;RP1=0, select bank0
  6922  012B  1303               		decf	((_key3pushflag)),w
  6923  012C  0329               	btfss	status,2
  6924  012D  1D03               	goto	u5341
  6925  012E  2930               	goto	u5340
  6926  012F  2931               u5341:
  6927  0130                     	goto	l4237
  6928  0130  2951               u5340:
  6929  0131                     	line	246
  6930                           	
  6931                           l4225:	
  6932  0131                     ;KEY.c: 246: MONTH_ten--;
  6933                           	movlw	low(-1)
  6934  0131  30FF               	movwf	(??_ModeSwitch+0)+0
  6935  0132  00E7               	movf	(??_ModeSwitch+0)+0,w
  6936  0133  0867               	addwf	(_MONTH_ten),f
  6937  0134  07B6               	line	247
  6938                           	
  6939                           l4227:	
  6940  0135                     ;KEY.c: 247: if (MONTH_unit > 0) {
  6941                           	movf	(_MONTH_unit),w
  6942  0135  0835               	xorlw	80h
  6943  0136  3A80               	addlw	-((01h)^80h)
  6944  0137  3E7F               	skipc
  6945  0138  1C03               	goto	u5351
  6946  0139  293B               	goto	u5350
  6947  013A  293C               u5351:
  6948  013B                     	goto	l518
  6949  013B  2944               u5350:
  6950  013C                     	line	248
  6951                           	
  6952                           l4229:	
  6953  013C                     ;KEY.c: 248: if (MONTH_ten < 0) {
  6954                           	btfss	(_MONTH_ten),7
  6955  013C  1FB6               	goto	u5361
  6956  013D  293F               	goto	u5360
  6957  013E  2940               u5361:
  6958  013F                     	goto	l4235
  6959  013F  294E               u5360:
  6960  0140                     	line	249
  6961                           	
  6962                           l4231:	
  6963  0140                     ;KEY.c: 249: MONTH_ten = 1;
  6964                           	clrf	(_MONTH_ten)
  6965  0140  01B6               	incf	(_MONTH_ten),f
  6966  0141  0AB6               	goto	l4235
  6967  0142  294E               	line	250
  6968                           	
  6969                           l519:	
  6970  0143                     	line	251
  6971                           ;KEY.c: 250: };KEY.c: 251: } else {
  6972                           	goto	l4235
  6973  0143  294E               	
  6974                           l518:	
  6975  0144                     	line	252
  6976                           ;KEY.c: 252: if (MONTH_ten < 0) {
  6977                           	btfss	(_MONTH_ten),7
  6978  0144  1FB6               	goto	u5371
  6979  0145  2947               	goto	u5370
  6980  0146  2948               u5371:
  6981  0147                     	goto	l4235
  6982  0147  294E               u5370:
  6983  0148                     	line	253
  6984                           	
  6985                           l4233:	
  6986  0148                     ;KEY.c: 253: MONTH_ten = 2;
  6987                           	movlw	low(02h)
  6988  0148  3002               	movwf	(??_ModeSwitch+0)+0
  6989  0149  00E7               	movf	(??_ModeSwitch+0)+0,w
  6990  014A  0867               	movwf	(_MONTH_ten)
  6991  014B  00B6               	goto	l4235
  6992  014C  294E               	line	254
  6993                           	
  6994                           l521:	
  6995  014D                     	goto	l4235
  6996  014D  294E               	line	255
  6997                           	
  6998                           l520:	
  6999  014E                     	line	256
  7000                           	
  7001                           l4235:	
  7002  014E                     ;KEY.c: 254: };KEY.c: 255: };KEY.c: 256: key3pushflag = 0;
  7003                           	clrf	(_key3pushflag)
  7004  014E  01A9               	goto	l4237
  7005  014F  2951               	line	257
  7006                           	
  7007                           l517:	
  7008  0150                     	goto	l4237
  7009  0150  2951               	line	258
  7010                           	
  7011                           l516:	
  7012  0151                     	
  7013                           l4237:	
  7014  0151                     ;KEY.c: 257: };KEY.c: 258: Ds1302WriteTime(4, MONTH_ten << 4 | MONTH_unit);
  7015                           	movf	(_MONTH_ten),w
  7016  0151  0836               	movwf	(??_ModeSwitch+0)+0
  7017  0152  00E7               	movlw	(04h)-1
  7018  0153  3003               u5385:
  7019  0154                     	clrc
  7020  0154  1003               	rlf	(??_ModeSwitch+0)+0,f
  7021  0155  0DE7               	addlw	-1
  7022  0156  3EFF               	skipz
  7023  0157  1D03               	goto	u5385
  7024  0158  2954               	clrc
  7025  0159  1003               	rlf	(??_ModeSwitch+0)+0,w
  7026  015A  0D67               	iorwf	(_MONTH_unit),w
  7027  015B  0435               	movwf	(??_ModeSwitch+1)+0
  7028  015C  00E8               	movf	(??_ModeSwitch+1)+0,w
  7029  015D  0868               	movwf	(Ds1302WriteTime@dat)
  7030  015E  00F6               	movlw	low(04h)
  7031  015F  3004               	fcall	_Ds1302WriteTime
  7032  0160  160A  118A  25A9  120A  118A  	line	259
  7033                           ;KEY.c: 259: break;
  7034                           	goto	l4509
  7035  0165  2D36               	line	261
  7036                           ;KEY.c: 260: };KEY.c: 261: case 3:
  7037                           	
  7038                           l522:	
  7039  0166                     	line	263
  7040                           	
  7041                           l4239:	
  7042  0166                     ;KEY.c: 262: {;KEY.c: 263: if (key2pushflag == 1) {
  7043                           		decf	((_key2pushflag)),w
  7044  0166  037B               	btfss	status,2
  7045  0167  1D03               	goto	u5391
  7046  0168  296A               	goto	u5390
  7047  0169  296B               u5391:
  7048  016A                     	goto	l4251
  7049  016A  298B               u5390:
  7050  016B                     	line	264
  7051                           	
  7052                           l4241:	
  7053  016B                     ;KEY.c: 264: MONTH_unit++;
  7054                           	movlw	low(01h)
  7055  016B  3001               	bcf	status, 5	;RP0=0, select bank0
  7056  016C  1283               	bcf	status, 6	;RP1=0, select bank0
  7057  016D  1303               	movwf	(??_ModeSwitch+0)+0
  7058  016E  00E7               	movf	(??_ModeSwitch+0)+0,w
  7059  016F  0867               	addwf	(_MONTH_unit),f
  7060  0170  07B5               	line	265
  7061                           ;KEY.c: 265: if (MONTH_ten == 1) {
  7062                           		decf	((_MONTH_ten)),w
  7063  0171  0336               	btfss	status,2
  7064  0172  1D03               	goto	u5401
  7065  0173  2975               	goto	u5400
  7066  0174  2976               u5401:
  7067  0175                     	goto	l4247
  7068  0175  2980               u5400:
  7069  0176                     	line	266
  7070                           	
  7071                           l4243:	
  7072  0176                     ;KEY.c: 266: if (MONTH_unit > 2) {
  7073                           	movf	(_MONTH_unit),w
  7074  0176  0835               	xorlw	80h
  7075  0177  3A80               	addlw	-((03h)^80h)
  7076  0178  3E7D               	skipc
  7077  0179  1C03               	goto	u5411
  7078  017A  297C               	goto	u5410
  7079  017B  297D               u5411:
  7080  017C                     	goto	l526
  7081  017C  2989               u5410:
  7082  017D                     	line	267
  7083                           	
  7084                           l4245:	
  7085  017D                     ;KEY.c: 267: MONTH_unit = 0;
  7086                           	clrf	(_MONTH_unit)
  7087  017D  01B5               	goto	l526
  7088  017E  2989               	line	268
  7089                           	
  7090                           l525:	
  7091  017F                     	line	269
  7092                           ;KEY.c: 268: };KEY.c: 269: } else {
  7093                           	goto	l526
  7094  017F  2989               	
  7095                           l524:	
  7096  0180                     	line	270
  7097                           	
  7098                           l4247:	
  7099  0180                     ;KEY.c: 270: if (MONTH_unit > 9) {
  7100                           	movf	(_MONTH_unit),w
  7101  0180  0835               	xorlw	80h
  7102  0181  3A80               	addlw	-((0Ah)^80h)
  7103  0182  3E76               	skipc
  7104  0183  1C03               	goto	u5421
  7105  0184  2986               	goto	u5420
  7106  0185  2987               u5421:
  7107  0186                     	goto	l526
  7108  0186  2989               u5420:
  7109  0187                     	line	271
  7110                           	
  7111                           l4249:	
  7112  0187                     ;KEY.c: 271: MONTH_unit = 0;
  7113                           	clrf	(_MONTH_unit)
  7114  0187  01B5               	goto	l526
  7115  0188  2989               	line	272
  7116                           	
  7117                           l527:	
  7118  0189                     	line	273
  7119                           	
  7120                           l526:	
  7121  0189                     	line	274
  7122                           ;KEY.c: 272: };KEY.c: 273: };KEY.c: 274: key2pushflag = 0;
  7123                           	clrf	(_key2pushflag)
  7124  0189  01FB               	line	275
  7125                           ;KEY.c: 275: } else if (key3pushflag == 1) {
  7126                           	goto	l4263
  7127  018A  29B2               	
  7128                           l523:	
  7129  018B                     	
  7130                           l4251:	
  7131  018B                     	bcf	status, 5	;RP0=0, select bank0
  7132  018B  1283               	bcf	status, 6	;RP1=0, select bank0
  7133  018C  1303               		decf	((_key3pushflag)),w
  7134  018D  0329               	btfss	status,2
  7135  018E  1D03               	goto	u5431
  7136  018F  2991               	goto	u5430
  7137  0190  2992               u5431:
  7138  0191                     	goto	l4263
  7139  0191  29B2               u5430:
  7140  0192                     	line	276
  7141                           	
  7142                           l4253:	
  7143  0192                     ;KEY.c: 276: MONTH_unit--;
  7144                           	movlw	low(-1)
  7145  0192  30FF               	movwf	(??_ModeSwitch+0)+0
  7146  0193  00E7               	movf	(??_ModeSwitch+0)+0,w
  7147  0194  0867               	addwf	(_MONTH_unit),f
  7148  0195  07B5               	line	277
  7149                           ;KEY.c: 277: if (MONTH_ten == 1) {
  7150                           		decf	((_MONTH_ten)),w
  7151  0196  0336               	btfss	status,2
  7152  0197  1D03               	goto	u5441
  7153  0198  299A               	goto	u5440
  7154  0199  299B               u5441:
  7155  019A                     	goto	l530
  7156  019A  29A5               u5440:
  7157  019B                     	line	278
  7158                           	
  7159                           l4255:	
  7160  019B                     ;KEY.c: 278: if (MONTH_unit < 0) {
  7161                           	btfss	(_MONTH_unit),7
  7162  019B  1FB5               	goto	u5451
  7163  019C  299E               	goto	u5450
  7164  019D  299F               u5451:
  7165  019E                     	goto	l4261
  7166  019E  29AF               u5450:
  7167  019F                     	line	279
  7168                           	
  7169                           l4257:	
  7170  019F                     ;KEY.c: 279: MONTH_unit = 2;
  7171                           	movlw	low(02h)
  7172  019F  3002               	movwf	(??_ModeSwitch+0)+0
  7173  01A0  00E7               	movf	(??_ModeSwitch+0)+0,w
  7174  01A1  0867               	movwf	(_MONTH_unit)
  7175  01A2  00B5               	goto	l4261
  7176  01A3  29AF               	line	280
  7177                           	
  7178                           l531:	
  7179  01A4                     	line	281
  7180                           ;KEY.c: 280: };KEY.c: 281: } else {
  7181                           	goto	l4261
  7182  01A4  29AF               	
  7183                           l530:	
  7184  01A5                     	line	282
  7185                           ;KEY.c: 282: if (MONTH_unit < 0) {
  7186                           	btfss	(_MONTH_unit),7
  7187  01A5  1FB5               	goto	u5461
  7188  01A6  29A8               	goto	u5460
  7189  01A7  29A9               u5461:
  7190  01A8                     	goto	l4261
  7191  01A8  29AF               u5460:
  7192  01A9                     	line	283
  7193                           	
  7194                           l4259:	
  7195  01A9                     ;KEY.c: 283: MONTH_unit = 9;
  7196                           	movlw	low(09h)
  7197  01A9  3009               	movwf	(??_ModeSwitch+0)+0
  7198  01AA  00E7               	movf	(??_ModeSwitch+0)+0,w
  7199  01AB  0867               	movwf	(_MONTH_unit)
  7200  01AC  00B5               	goto	l4261
  7201  01AD  29AF               	line	284
  7202                           	
  7203                           l533:	
  7204  01AE                     	goto	l4261
  7205  01AE  29AF               	line	285
  7206                           	
  7207                           l532:	
  7208  01AF                     	line	286
  7209                           	
  7210                           l4261:	
  7211  01AF                     ;KEY.c: 284: };KEY.c: 285: };KEY.c: 286: key3pushflag = 0;
  7212                           	clrf	(_key3pushflag)
  7213  01AF  01A9               	goto	l4263
  7214  01B0  29B2               	line	287
  7215                           	
  7216                           l529:	
  7217  01B1                     	goto	l4263
  7218  01B1  29B2               	line	288
  7219                           	
  7220                           l528:	
  7221  01B2                     	
  7222                           l4263:	
  7223  01B2                     ;KEY.c: 287: };KEY.c: 288: Ds1302WriteTime(4, MONTH_ten << 4 | MONTH_unit);
  7224                           	movf	(_MONTH_ten),w
  7225  01B2  0836               	movwf	(??_ModeSwitch+0)+0
  7226  01B3  00E7               	movlw	(04h)-1
  7227  01B4  3003               u5475:
  7228  01B5                     	clrc
  7229  01B5  1003               	rlf	(??_ModeSwitch+0)+0,f
  7230  01B6  0DE7               	addlw	-1
  7231  01B7  3EFF               	skipz
  7232  01B8  1D03               	goto	u5475
  7233  01B9  29B5               	clrc
  7234  01BA  1003               	rlf	(??_ModeSwitch+0)+0,w
  7235  01BB  0D67               	iorwf	(_MONTH_unit),w
  7236  01BC  0435               	movwf	(??_ModeSwitch+1)+0
  7237  01BD  00E8               	movf	(??_ModeSwitch+1)+0,w
  7238  01BE  0868               	movwf	(Ds1302WriteTime@dat)
  7239  01BF  00F6               	movlw	low(04h)
  7240  01C0  3004               	fcall	_Ds1302WriteTime
  7241  01C1  160A  118A  25A9  120A  118A  	line	289
  7242                           ;KEY.c: 289: break;
  7243                           	goto	l4509
  7244  01C6  2D36               	line	291
  7245                           ;KEY.c: 290: };KEY.c: 291: case 4:
  7246                           	
  7247                           l534:	
  7248  01C7                     	line	293
  7249                           	
  7250                           l4265:	
  7251  01C7                     ;KEY.c: 292: {;KEY.c: 293: if (key2pushflag == 1) {
  7252                           		decf	((_key2pushflag)),w
  7253  01C7  037B               	btfss	status,2
  7254  01C8  1D03               	goto	u5481
  7255  01C9  29CB               	goto	u5480
  7256  01CA  29CC               u5481:
  7257  01CB                     	goto	l4279
  7258  01CB  29EE               u5480:
  7259  01CC                     	line	294
  7260                           	
  7261                           l4267:	
  7262  01CC                     ;KEY.c: 294: DAY_ten++;
  7263                           	movlw	low(01h)
  7264  01CC  3001               	bcf	status, 5	;RP0=0, select bank0
  7265  01CD  1283               	bcf	status, 6	;RP1=0, select bank0
  7266  01CE  1303               	movwf	(??_ModeSwitch+0)+0
  7267  01CF  00E7               	movf	(??_ModeSwitch+0)+0,w
  7268  01D0  0867               	addwf	(_DAY_ten),f
  7269  01D1  07B4               	line	295
  7270                           	
  7271                           l4269:	
  7272  01D2                     ;KEY.c: 295: if (DAY_unit > 0) {
  7273                           	movf	(_DAY_unit),w
  7274  01D2  0833               	xorlw	80h
  7275  01D3  3A80               	addlw	-((01h)^80h)
  7276  01D4  3E7F               	skipc
  7277  01D5  1C03               	goto	u5491
  7278  01D6  29D8               	goto	u5490
  7279  01D7  29D9               u5491:
  7280  01D8                     	goto	l4275
  7281  01D8  29E3               u5490:
  7282  01D9                     	line	296
  7283                           	
  7284                           l4271:	
  7285  01D9                     ;KEY.c: 296: if (DAY_ten > 2) {
  7286                           	movf	(_DAY_ten),w
  7287  01D9  0834               	xorlw	80h
  7288  01DA  3A80               	addlw	-((03h)^80h)
  7289  01DB  3E7D               	skipc
  7290  01DC  1C03               	goto	u5501
  7291  01DD  29DF               	goto	u5500
  7292  01DE  29E0               u5501:
  7293  01DF                     	goto	l538
  7294  01DF  29EC               u5500:
  7295  01E0                     	line	297
  7296                           	
  7297                           l4273:	
  7298  01E0                     ;KEY.c: 297: DAY_ten = 0;
  7299                           	clrf	(_DAY_ten)
  7300  01E0  01B4               	goto	l538
  7301  01E1  29EC               	line	298
  7302                           	
  7303                           l537:	
  7304  01E2                     	line	299
  7305                           ;KEY.c: 298: };KEY.c: 299: } else {
  7306                           	goto	l538
  7307  01E2  29EC               	
  7308                           l536:	
  7309  01E3                     	line	300
  7310                           	
  7311                           l4275:	
  7312  01E3                     ;KEY.c: 300: if (DAY_ten > 3) {
  7313                           	movf	(_DAY_ten),w
  7314  01E3  0834               	xorlw	80h
  7315  01E4  3A80               	addlw	-((04h)^80h)
  7316  01E5  3E7C               	skipc
  7317  01E6  1C03               	goto	u5511
  7318  01E7  29E9               	goto	u5510
  7319  01E8  29EA               u5511:
  7320  01E9                     	goto	l538
  7321  01E9  29EC               u5510:
  7322  01EA                     	line	301
  7323                           	
  7324                           l4277:	
  7325  01EA                     ;KEY.c: 301: DAY_ten = 0;
  7326                           	clrf	(_DAY_ten)
  7327  01EA  01B4               	goto	l538
  7328  01EB  29EC               	line	302
  7329                           	
  7330                           l539:	
  7331  01EC                     	line	303
  7332                           	
  7333                           l538:	
  7334  01EC                     	line	304
  7335                           ;KEY.c: 302: };KEY.c: 303: };KEY.c: 304: key2pushflag = 0;
  7336                           	clrf	(_key2pushflag)
  7337  01EC  01FB               	line	305
  7338                           ;KEY.c: 305: } else if (key3pushflag == 1) {
  7339                           	goto	l4293
  7340  01ED  2A17               	
  7341                           l535:	
  7342  01EE                     	
  7343                           l4279:	
  7344  01EE                     	bcf	status, 5	;RP0=0, select bank0
  7345  01EE  1283               	bcf	status, 6	;RP1=0, select bank0
  7346  01EF  1303               		decf	((_key3pushflag)),w
  7347  01F0  0329               	btfss	status,2
  7348  01F1  1D03               	goto	u5521
  7349  01F2  29F4               	goto	u5520
  7350  01F3  29F5               u5521:
  7351  01F4                     	goto	l4293
  7352  01F4  2A17               u5520:
  7353  01F5                     	line	306
  7354                           	
  7355                           l4281:	
  7356  01F5                     ;KEY.c: 306: DAY_ten--;
  7357                           	movlw	low(-1)
  7358  01F5  30FF               	movwf	(??_ModeSwitch+0)+0
  7359  01F6  00E7               	movf	(??_ModeSwitch+0)+0,w
  7360  01F7  0867               	addwf	(_DAY_ten),f
  7361  01F8  07B4               	line	307
  7362                           	
  7363                           l4283:	
  7364  01F9                     ;KEY.c: 307: if (DAY_unit > 0) {
  7365                           	movf	(_DAY_unit),w
  7366  01F9  0833               	xorlw	80h
  7367  01FA  3A80               	addlw	-((01h)^80h)
  7368  01FB  3E7F               	skipc
  7369  01FC  1C03               	goto	u5531
  7370  01FD  29FF               	goto	u5530
  7371  01FE  2A00               u5531:
  7372  01FF                     	goto	l542
  7373  01FF  2A0A               u5530:
  7374  0200                     	line	308
  7375                           	
  7376                           l4285:	
  7377  0200                     ;KEY.c: 308: if (DAY_ten < 0) {
  7378                           	btfss	(_DAY_ten),7
  7379  0200  1FB4               	goto	u5541
  7380  0201  2A03               	goto	u5540
  7381  0202  2A04               u5541:
  7382  0203                     	goto	l4291
  7383  0203  2A14               u5540:
  7384  0204                     	line	309
  7385                           	
  7386                           l4287:	
  7387  0204                     ;KEY.c: 309: DAY_ten = 2;
  7388                           	movlw	low(02h)
  7389  0204  3002               	movwf	(??_ModeSwitch+0)+0
  7390  0205  00E7               	movf	(??_ModeSwitch+0)+0,w
  7391  0206  0867               	movwf	(_DAY_ten)
  7392  0207  00B4               	goto	l4291
  7393  0208  2A14               	line	310
  7394                           	
  7395                           l543:	
  7396  0209                     	line	311
  7397                           ;KEY.c: 310: };KEY.c: 311: } else {
  7398                           	goto	l4291
  7399  0209  2A14               	
  7400                           l542:	
  7401  020A                     	line	312
  7402                           ;KEY.c: 312: if (DAY_ten < 0) {
  7403                           	btfss	(_DAY_ten),7
  7404  020A  1FB4               	goto	u5551
  7405  020B  2A0D               	goto	u5550
  7406  020C  2A0E               u5551:
  7407  020D                     	goto	l4291
  7408  020D  2A14               u5550:
  7409  020E                     	line	313
  7410                           	
  7411                           l4289:	
  7412  020E                     ;KEY.c: 313: DAY_ten = 3;
  7413                           	movlw	low(03h)
  7414  020E  3003               	movwf	(??_ModeSwitch+0)+0
  7415  020F  00E7               	movf	(??_ModeSwitch+0)+0,w
  7416  0210  0867               	movwf	(_DAY_ten)
  7417  0211  00B4               	goto	l4291
  7418  0212  2A14               	line	314
  7419                           	
  7420                           l545:	
  7421  0213                     	goto	l4291
  7422  0213  2A14               	line	315
  7423                           	
  7424                           l544:	
  7425  0214                     	line	316
  7426                           	
  7427                           l4291:	
  7428  0214                     ;KEY.c: 314: };KEY.c: 315: };KEY.c: 316: key3pushflag = 0;
  7429                           	clrf	(_key3pushflag)
  7430  0214  01A9               	goto	l4293
  7431  0215  2A17               	line	317
  7432                           	
  7433                           l541:	
  7434  0216                     	goto	l4293
  7435  0216  2A17               	line	318
  7436                           	
  7437                           l540:	
  7438  0217                     	
  7439                           l4293:	
  7440  0217                     ;KEY.c: 317: };KEY.c: 318: Ds1302WriteTime(3, DAY_ten << 4 | DAY_unit);
  7441                           	movf	(_DAY_ten),w
  7442  0217  0834               	movwf	(??_ModeSwitch+0)+0
  7443  0218  00E7               	movlw	(04h)-1
  7444  0219  3003               u5565:
  7445  021A                     	clrc
  7446  021A  1003               	rlf	(??_ModeSwitch+0)+0,f
  7447  021B  0DE7               	addlw	-1
  7448  021C  3EFF               	skipz
  7449  021D  1D03               	goto	u5565
  7450  021E  2A1A               	clrc
  7451  021F  1003               	rlf	(??_ModeSwitch+0)+0,w
  7452  0220  0D67               	iorwf	(_DAY_unit),w
  7453  0221  0433               	movwf	(??_ModeSwitch+1)+0
  7454  0222  00E8               	movf	(??_ModeSwitch+1)+0,w
  7455  0223  0868               	movwf	(Ds1302WriteTime@dat)
  7456  0224  00F6               	movlw	low(03h)
  7457  0225  3003               	fcall	_Ds1302WriteTime
  7458  0226  160A  118A  25A9  120A  118A  	line	319
  7459                           ;KEY.c: 319: break;
  7460                           	goto	l4509
  7461  022B  2D36               	line	321
  7462                           ;KEY.c: 320: };KEY.c: 321: case 5:
  7463                           	
  7464                           l546:	
  7465  022C                     	line	323
  7466                           	
  7467                           l4295:	
  7468  022C                     ;KEY.c: 322: {;KEY.c: 323: if (key2pushflag == 1) {
  7469                           		decf	((_key2pushflag)),w
  7470  022C  037B               	btfss	status,2
  7471  022D  1D03               	goto	u5571
  7472  022E  2A30               	goto	u5570
  7473  022F  2A31               u5571:
  7474  0230                     	goto	l4307
  7475  0230  2A52               u5570:
  7476  0231                     	line	324
  7477                           	
  7478                           l4297:	
  7479  0231                     ;KEY.c: 324: DAY_unit++;
  7480                           	movlw	low(01h)
  7481  0231  3001               	bcf	status, 5	;RP0=0, select bank0
  7482  0232  1283               	bcf	status, 6	;RP1=0, select bank0
  7483  0233  1303               	movwf	(??_ModeSwitch+0)+0
  7484  0234  00E7               	movf	(??_ModeSwitch+0)+0,w
  7485  0235  0867               	addwf	(_DAY_unit),f
  7486  0236  07B3               	line	325
  7487                           ;KEY.c: 325: if (DAY_ten == 3) {
  7488                           		movlw	3
  7489  0237  3003               	xorwf	((_DAY_ten)),w
  7490  0238  0634               	btfss	status,2
  7491  0239  1D03               	goto	u5581
  7492  023A  2A3C               	goto	u5580
  7493  023B  2A3D               u5581:
  7494  023C                     	goto	l4303
  7495  023C  2A47               u5580:
  7496  023D                     	line	326
  7497                           	
  7498                           l4299:	
  7499  023D                     ;KEY.c: 326: if (DAY_unit > 2) {
  7500                           	movf	(_DAY_unit),w
  7501  023D  0833               	xorlw	80h
  7502  023E  3A80               	addlw	-((03h)^80h)
  7503  023F  3E7D               	skipc
  7504  0240  1C03               	goto	u5591
  7505  0241  2A43               	goto	u5590
  7506  0242  2A44               u5591:
  7507  0243                     	goto	l550
  7508  0243  2A50               u5590:
  7509  0244                     	line	327
  7510                           	
  7511                           l4301:	
  7512  0244                     ;KEY.c: 327: DAY_unit = 0;
  7513                           	clrf	(_DAY_unit)
  7514  0244  01B3               	goto	l550
  7515  0245  2A50               	line	328
  7516                           	
  7517                           l549:	
  7518  0246                     	line	329
  7519                           ;KEY.c: 328: };KEY.c: 329: } else {
  7520                           	goto	l550
  7521  0246  2A50               	
  7522                           l548:	
  7523  0247                     	line	330
  7524                           	
  7525                           l4303:	
  7526  0247                     ;KEY.c: 330: if (DAY_unit > 9) {
  7527                           	movf	(_DAY_unit),w
  7528  0247  0833               	xorlw	80h
  7529  0248  3A80               	addlw	-((0Ah)^80h)
  7530  0249  3E76               	skipc
  7531  024A  1C03               	goto	u5601
  7532  024B  2A4D               	goto	u5600
  7533  024C  2A4E               u5601:
  7534  024D                     	goto	l550
  7535  024D  2A50               u5600:
  7536  024E                     	line	331
  7537                           	
  7538                           l4305:	
  7539  024E                     ;KEY.c: 331: DAY_unit = 0;
  7540                           	clrf	(_DAY_unit)
  7541  024E  01B3               	goto	l550
  7542  024F  2A50               	line	332
  7543                           	
  7544                           l551:	
  7545  0250                     	line	333
  7546                           	
  7547                           l550:	
  7548  0250                     	line	334
  7549                           ;KEY.c: 332: };KEY.c: 333: };KEY.c: 334: key2pushflag = 0;
  7550                           	clrf	(_key2pushflag)
  7551  0250  01FB               	line	335
  7552                           ;KEY.c: 335: } else if (key3pushflag == 1) {
  7553                           	goto	l4319
  7554  0251  2A78               	
  7555                           l547:	
  7556  0252                     	
  7557                           l4307:	
  7558  0252                     	bcf	status, 5	;RP0=0, select bank0
  7559  0252  1283               	bcf	status, 6	;RP1=0, select bank0
  7560  0253  1303               		decf	((_key3pushflag)),w
  7561  0254  0329               	btfss	status,2
  7562  0255  1D03               	goto	u5611
  7563  0256  2A58               	goto	u5610
  7564  0257  2A59               u5611:
  7565  0258                     	goto	l4319
  7566  0258  2A78               u5610:
  7567  0259                     	line	336
  7568                           	
  7569                           l4309:	
  7570  0259                     ;KEY.c: 336: DAY_unit--;
  7571                           	movlw	low(-1)
  7572  0259  30FF               	movwf	(??_ModeSwitch+0)+0
  7573  025A  00E7               	movf	(??_ModeSwitch+0)+0,w
  7574  025B  0867               	addwf	(_DAY_unit),f
  7575  025C  07B3               	line	337
  7576                           ;KEY.c: 337: if (DAY_ten == 3) {
  7577                           		movlw	3
  7578  025D  3003               	xorwf	((_DAY_ten)),w
  7579  025E  0634               	btfss	status,2
  7580  025F  1D03               	goto	u5621
  7581  0260  2A62               	goto	u5620
  7582  0261  2A63               u5621:
  7583  0262                     	goto	l554
  7584  0262  2A6B               u5620:
  7585  0263                     	line	338
  7586                           	
  7587                           l4311:	
  7588  0263                     ;KEY.c: 338: if (DAY_unit < 0) {
  7589                           	btfss	(_DAY_unit),7
  7590  0263  1FB3               	goto	u5631
  7591  0264  2A66               	goto	u5630
  7592  0265  2A67               u5631:
  7593  0266                     	goto	l4317
  7594  0266  2A75               u5630:
  7595  0267                     	line	339
  7596                           	
  7597                           l4313:	
  7598  0267                     ;KEY.c: 339: DAY_unit = 1;
  7599                           	clrf	(_DAY_unit)
  7600  0267  01B3               	incf	(_DAY_unit),f
  7601  0268  0AB3               	goto	l4317
  7602  0269  2A75               	line	340
  7603                           	
  7604                           l555:	
  7605  026A                     	line	341
  7606                           ;KEY.c: 340: };KEY.c: 341: } else {
  7607                           	goto	l4317
  7608  026A  2A75               	
  7609                           l554:	
  7610  026B                     	line	342
  7611                           ;KEY.c: 342: if (DAY_unit < 0) {
  7612                           	btfss	(_DAY_unit),7
  7613  026B  1FB3               	goto	u5641
  7614  026C  2A6E               	goto	u5640
  7615  026D  2A6F               u5641:
  7616  026E                     	goto	l4317
  7617  026E  2A75               u5640:
  7618  026F                     	line	343
  7619                           	
  7620                           l4315:	
  7621  026F                     ;KEY.c: 343: DAY_unit = 9;
  7622                           	movlw	low(09h)
  7623  026F  3009               	movwf	(??_ModeSwitch+0)+0
  7624  0270  00E7               	movf	(??_ModeSwitch+0)+0,w
  7625  0271  0867               	movwf	(_DAY_unit)
  7626  0272  00B3               	goto	l4317
  7627  0273  2A75               	line	344
  7628                           	
  7629                           l557:	
  7630  0274                     	goto	l4317
  7631  0274  2A75               	line	345
  7632                           	
  7633                           l556:	
  7634  0275                     	line	346
  7635                           	
  7636                           l4317:	
  7637  0275                     ;KEY.c: 344: };KEY.c: 345: };KEY.c: 346: key3pushflag = 0;
  7638                           	clrf	(_key3pushflag)
  7639  0275  01A9               	goto	l4319
  7640  0276  2A78               	line	347
  7641                           	
  7642                           l553:	
  7643  0277                     	goto	l4319
  7644  0277  2A78               	line	348
  7645                           	
  7646                           l552:	
  7647  0278                     	
  7648                           l4319:	
  7649  0278                     ;KEY.c: 347: };KEY.c: 348: Ds1302WriteTime(3, DAY_ten << 4 | DAY_unit);
  7650                           	movf	(_DAY_ten),w
  7651  0278  0834               	movwf	(??_ModeSwitch+0)+0
  7652  0279  00E7               	movlw	(04h)-1
  7653  027A  3003               u5655:
  7654  027B                     	clrc
  7655  027B  1003               	rlf	(??_ModeSwitch+0)+0,f
  7656  027C  0DE7               	addlw	-1
  7657  027D  3EFF               	skipz
  7658  027E  1D03               	goto	u5655
  7659  027F  2A7B               	clrc
  7660  0280  1003               	rlf	(??_ModeSwitch+0)+0,w
  7661  0281  0D67               	iorwf	(_DAY_unit),w
  7662  0282  0433               	movwf	(??_ModeSwitch+1)+0
  7663  0283  00E8               	movf	(??_ModeSwitch+1)+0,w
  7664  0284  0868               	movwf	(Ds1302WriteTime@dat)
  7665  0285  00F6               	movlw	low(03h)
  7666  0286  3003               	fcall	_Ds1302WriteTime
  7667  0287  160A  118A  25A9  120A  118A  	line	349
  7668                           ;KEY.c: 349: break;
  7669                           	goto	l4509
  7670  028C  2D36               	line	351
  7671                           ;KEY.c: 350: };KEY.c: 351: case 6:
  7672                           	
  7673                           l558:	
  7674  028D                     	line	353
  7675                           	
  7676                           l4321:	
  7677  028D                     ;KEY.c: 352: {;KEY.c: 353: LCD_write_string(13 - 1, 1, "___");
  7678                           	bcf	status, 5	;RP0=0, select bank0
  7679  028D  1283               	bcf	status, 6	;RP1=0, select bank0
  7680  028E  1303               	clrf	(LCD_write_string@Y)
  7681  028F  01E0               	incf	(LCD_write_string@Y),f
  7682  0290  0AE0               	movlw	low(((STR_19)|8000h))
  7683  0291  306C               	movwf	(LCD_write_string@s)
  7684  0292  00E1               	movlw	high(((STR_19)|8000h))
  7685  0293  308B               	movwf	((LCD_write_string@s))+1
  7686  0294  00E2               	movlw	low(0Ch)
  7687  0295  300C               	fcall	_LCD_write_string
  7688  0296  160A  118A  2708  120A  118A  	line	354
  7689                           	
  7690                           l4323:	
  7691  029B                     ;KEY.c: 354: if (key2pushflag == 1) {
  7692                           		decf	((_key2pushflag)),w
  7693  029B  037B               	btfss	status,2
  7694  029C  1D03               	goto	u5661
  7695  029D  2A9F               	goto	u5660
  7696  029E  2AA0               u5661:
  7697  029F                     	goto	l4333
  7698  029F  2AB2               u5660:
  7699  02A0                     	line	355
  7700                           	
  7701                           l4325:	
  7702  02A0                     ;KEY.c: 355: WEEK_unit++;
  7703                           	movlw	low(01h)
  7704  02A0  3001               	bcf	status, 5	;RP0=0, select bank0
  7705  02A1  1283               	bcf	status, 6	;RP1=0, select bank0
  7706  02A2  1303               	movwf	(??_ModeSwitch+0)+0
  7707  02A3  00E7               	movf	(??_ModeSwitch+0)+0,w
  7708  02A4  0867               	addwf	(_WEEK_unit),f
  7709  02A5  07B2               	line	356
  7710                           	
  7711                           l4327:	
  7712  02A6                     ;KEY.c: 356: if (WEEK_unit > 7) {
  7713                           	movf	(_WEEK_unit),w
  7714  02A6  0832               	xorlw	80h
  7715  02A7  3A80               	addlw	-((08h)^80h)
  7716  02A8  3E78               	skipc
  7717  02A9  1C03               	goto	u5671
  7718  02AA  2AAC               	goto	u5670
  7719  02AB  2AAD               u5671:
  7720  02AC                     	goto	l4331
  7721  02AC  2AB0               u5670:
  7722  02AD                     	line	357
  7723                           	
  7724                           l4329:	
  7725  02AD                     ;KEY.c: 357: WEEK_unit = 1;
  7726                           	clrf	(_WEEK_unit)
  7727  02AD  01B2               	incf	(_WEEK_unit),f
  7728  02AE  0AB2               	goto	l4331
  7729  02AF  2AB0               	line	358
  7730                           	
  7731                           l560:	
  7732  02B0                     	line	359
  7733                           	
  7734                           l4331:	
  7735  02B0                     ;KEY.c: 358: };KEY.c: 359: key2pushflag = 0;
  7736                           	clrf	(_key2pushflag)
  7737  02B0  01FB               	line	360
  7738                           ;KEY.c: 360: } else if (key3pushflag == 1) {
  7739                           	goto	l4343
  7740  02B1  2AC9               	
  7741                           l559:	
  7742  02B2                     	
  7743                           l4333:	
  7744  02B2                     	bcf	status, 5	;RP0=0, select bank0
  7745  02B2  1283               	bcf	status, 6	;RP1=0, select bank0
  7746  02B3  1303               		decf	((_key3pushflag)),w
  7747  02B4  0329               	btfss	status,2
  7748  02B5  1D03               	goto	u5681
  7749  02B6  2AB8               	goto	u5680
  7750  02B7  2AB9               u5681:
  7751  02B8                     	goto	l4343
  7752  02B8  2AC9               u5680:
  7753  02B9                     	line	361
  7754                           	
  7755                           l4335:	
  7756  02B9                     ;KEY.c: 361: WEEK_unit--;
  7757                           	movlw	low(-1)
  7758  02B9  30FF               	movwf	(??_ModeSwitch+0)+0
  7759  02BA  00E7               	movf	(??_ModeSwitch+0)+0,w
  7760  02BB  0867               	addwf	(_WEEK_unit),f
  7761  02BC  07B2               	line	362
  7762                           	
  7763                           l4337:	
  7764  02BD                     ;KEY.c: 362: if (WEEK_unit < 0) {
  7765                           	btfss	(_WEEK_unit),7
  7766  02BD  1FB2               	goto	u5691
  7767  02BE  2AC0               	goto	u5690
  7768  02BF  2AC1               u5691:
  7769  02C0                     	goto	l4341
  7770  02C0  2AC6               u5690:
  7771  02C1                     	line	363
  7772                           	
  7773                           l4339:	
  7774  02C1                     ;KEY.c: 363: WEEK_unit = 7;
  7775                           	movlw	low(07h)
  7776  02C1  3007               	movwf	(??_ModeSwitch+0)+0
  7777  02C2  00E7               	movf	(??_ModeSwitch+0)+0,w
  7778  02C3  0867               	movwf	(_WEEK_unit)
  7779  02C4  00B2               	goto	l4341
  7780  02C5  2AC6               	line	364
  7781                           	
  7782                           l563:	
  7783  02C6                     	line	365
  7784                           	
  7785                           l4341:	
  7786  02C6                     ;KEY.c: 364: };KEY.c: 365: key3pushflag = 0;
  7787                           	clrf	(_key3pushflag)
  7788  02C6  01A9               	goto	l4343
  7789  02C7  2AC9               	line	366
  7790                           	
  7791                           l562:	
  7792  02C8                     	goto	l4343
  7793  02C8  2AC9               	line	367
  7794                           	
  7795                           l561:	
  7796  02C9                     	
  7797                           l4343:	
  7798  02C9                     ;KEY.c: 366: };KEY.c: 367: Ds1302WriteTime(5, WEEK_unit);
  7799                           	movf	(_WEEK_unit),w
  7800  02C9  0832               	movwf	(??_ModeSwitch+0)+0
  7801  02CA  00E7               	movf	(??_ModeSwitch+0)+0,w
  7802  02CB  0867               	movwf	(Ds1302WriteTime@dat)
  7803  02CC  00F6               	movlw	low(05h)
  7804  02CD  3005               	fcall	_Ds1302WriteTime
  7805  02CE  160A  118A  25A9  120A  118A  	line	368
  7806                           ;KEY.c: 368: break;
  7807                           	goto	l4509
  7808  02D3  2D36               	line	372
  7809                           ;KEY.c: 369: };KEY.c: 372: case 7:
  7810                           	
  7811                           l564:	
  7812  02D4                     	line	374
  7813                           	
  7814                           l4345:	
  7815  02D4                     ;KEY.c: 373: {;KEY.c: 374: if (key2pushflag == 1) {
  7816                           		decf	((_key2pushflag)),w
  7817  02D4  037B               	btfss	status,2
  7818  02D5  1D03               	goto	u5701
  7819  02D6  2AD8               	goto	u5700
  7820  02D7  2AD9               u5701:
  7821  02D8                     	goto	l4359
  7822  02D8  2AFB               u5700:
  7823  02D9                     	line	375
  7824                           	
  7825                           l4347:	
  7826  02D9                     ;KEY.c: 375: HOUR_ten++;
  7827                           	movlw	low(01h)
  7828  02D9  3001               	bcf	status, 5	;RP0=0, select bank0
  7829  02DA  1283               	bcf	status, 6	;RP1=0, select bank0
  7830  02DB  1303               	movwf	(??_ModeSwitch+0)+0
  7831  02DC  00E7               	movf	(??_ModeSwitch+0)+0,w
  7832  02DD  0867               	addwf	(_HOUR_ten),f
  7833  02DE  07B1               	line	376
  7834                           	
  7835                           l4349:	
  7836  02DF                     ;KEY.c: 376: if (HOUR_unit > 4) {
  7837                           	movf	(_HOUR_unit),w
  7838  02DF  0830               	xorlw	80h
  7839  02E0  3A80               	addlw	-((05h)^80h)
  7840  02E1  3E7B               	skipc
  7841  02E2  1C03               	goto	u5711
  7842  02E3  2AE5               	goto	u5710
  7843  02E4  2AE6               u5711:
  7844  02E5                     	goto	l4355
  7845  02E5  2AF0               u5710:
  7846  02E6                     	line	377
  7847                           	
  7848                           l4351:	
  7849  02E6                     ;KEY.c: 377: if (HOUR_ten > 1) {
  7850                           	movf	(_HOUR_ten),w
  7851  02E6  0831               	xorlw	80h
  7852  02E7  3A80               	addlw	-((02h)^80h)
  7853  02E8  3E7E               	skipc
  7854  02E9  1C03               	goto	u5721
  7855  02EA  2AEC               	goto	u5720
  7856  02EB  2AED               u5721:
  7857  02EC                     	goto	l568
  7858  02EC  2AF9               u5720:
  7859  02ED                     	line	378
  7860                           	
  7861                           l4353:	
  7862  02ED                     ;KEY.c: 378: HOUR_ten = 0;
  7863                           	clrf	(_HOUR_ten)
  7864  02ED  01B1               	goto	l568
  7865  02EE  2AF9               	line	379
  7866                           	
  7867                           l567:	
  7868  02EF                     	line	380
  7869                           ;KEY.c: 379: };KEY.c: 380: } else {
  7870                           	goto	l568
  7871  02EF  2AF9               	
  7872                           l566:	
  7873  02F0                     	line	381
  7874                           	
  7875                           l4355:	
  7876  02F0                     ;KEY.c: 381: if (HOUR_ten > 2) {
  7877                           	movf	(_HOUR_ten),w
  7878  02F0  0831               	xorlw	80h
  7879  02F1  3A80               	addlw	-((03h)^80h)
  7880  02F2  3E7D               	skipc
  7881  02F3  1C03               	goto	u5731
  7882  02F4  2AF6               	goto	u5730
  7883  02F5  2AF7               u5731:
  7884  02F6                     	goto	l568
  7885  02F6  2AF9               u5730:
  7886  02F7                     	line	382
  7887                           	
  7888                           l4357:	
  7889  02F7                     ;KEY.c: 382: HOUR_ten = 0;
  7890                           	clrf	(_HOUR_ten)
  7891  02F7  01B1               	goto	l568
  7892  02F8  2AF9               	line	383
  7893                           	
  7894                           l569:	
  7895  02F9                     	line	384
  7896                           	
  7897                           l568:	
  7898  02F9                     	line	385
  7899                           ;KEY.c: 383: };KEY.c: 384: };KEY.c: 385: key2pushflag = 0;
  7900                           	clrf	(_key2pushflag)
  7901  02F9  01FB               	line	386
  7902                           ;KEY.c: 386: } else if (key3pushflag == 1) {
  7903                           	goto	l4373
  7904  02FA  2B22               	
  7905                           l565:	
  7906  02FB                     	
  7907                           l4359:	
  7908  02FB                     	bcf	status, 5	;RP0=0, select bank0
  7909  02FB  1283               	bcf	status, 6	;RP1=0, select bank0
  7910  02FC  1303               		decf	((_key3pushflag)),w
  7911  02FD  0329               	btfss	status,2
  7912  02FE  1D03               	goto	u5741
  7913  02FF  2B01               	goto	u5740
  7914  0300  2B02               u5741:
  7915  0301                     	goto	l4373
  7916  0301  2B22               u5740:
  7917  0302                     	line	387
  7918                           	
  7919                           l4361:	
  7920  0302                     ;KEY.c: 387: HOUR_ten--;
  7921                           	movlw	low(-1)
  7922  0302  30FF               	movwf	(??_ModeSwitch+0)+0
  7923  0303  00E7               	movf	(??_ModeSwitch+0)+0,w
  7924  0304  0867               	addwf	(_HOUR_ten),f
  7925  0305  07B1               	line	388
  7926                           	
  7927                           l4363:	
  7928  0306                     ;KEY.c: 388: if (HOUR_unit > 4) {
  7929                           	movf	(_HOUR_unit),w
  7930  0306  0830               	xorlw	80h
  7931  0307  3A80               	addlw	-((05h)^80h)
  7932  0308  3E7B               	skipc
  7933  0309  1C03               	goto	u5751
  7934  030A  2B0C               	goto	u5750
  7935  030B  2B0D               u5751:
  7936  030C                     	goto	l572
  7937  030C  2B15               u5750:
  7938  030D                     	line	389
  7939                           	
  7940                           l4365:	
  7941  030D                     ;KEY.c: 389: if (HOUR_ten < 0) {
  7942                           	btfss	(_HOUR_ten),7
  7943  030D  1FB1               	goto	u5761
  7944  030E  2B10               	goto	u5760
  7945  030F  2B11               u5761:
  7946  0310                     	goto	l4371
  7947  0310  2B1F               u5760:
  7948  0311                     	line	390
  7949                           	
  7950                           l4367:	
  7951  0311                     ;KEY.c: 390: HOUR_ten = 1;
  7952                           	clrf	(_HOUR_ten)
  7953  0311  01B1               	incf	(_HOUR_ten),f
  7954  0312  0AB1               	goto	l4371
  7955  0313  2B1F               	line	391
  7956                           	
  7957                           l573:	
  7958  0314                     	line	392
  7959                           ;KEY.c: 391: };KEY.c: 392: } else {
  7960                           	goto	l4371
  7961  0314  2B1F               	
  7962                           l572:	
  7963  0315                     	line	393
  7964                           ;KEY.c: 393: if (HOUR_ten < 0) {
  7965                           	btfss	(_HOUR_ten),7
  7966  0315  1FB1               	goto	u5771
  7967  0316  2B18               	goto	u5770
  7968  0317  2B19               u5771:
  7969  0318                     	goto	l4371
  7970  0318  2B1F               u5770:
  7971  0319                     	line	394
  7972                           	
  7973                           l4369:	
  7974  0319                     ;KEY.c: 394: HOUR_ten = 2;
  7975                           	movlw	low(02h)
  7976  0319  3002               	movwf	(??_ModeSwitch+0)+0
  7977  031A  00E7               	movf	(??_ModeSwitch+0)+0,w
  7978  031B  0867               	movwf	(_HOUR_ten)
  7979  031C  00B1               	goto	l4371
  7980  031D  2B1F               	line	395
  7981                           	
  7982                           l575:	
  7983  031E                     	goto	l4371
  7984  031E  2B1F               	line	396
  7985                           	
  7986                           l574:	
  7987  031F                     	line	398
  7988                           	
  7989                           l4371:	
  7990  031F                     ;KEY.c: 395: };KEY.c: 396: };KEY.c: 398: key3pushflag = 0;
  7991                           	clrf	(_key3pushflag)
  7992  031F  01A9               	goto	l4373
  7993  0320  2B22               	line	399
  7994                           	
  7995                           l571:	
  7996  0321                     	goto	l4373
  7997  0321  2B22               	line	400
  7998                           	
  7999                           l570:	
  8000  0322                     	
  8001                           l4373:	
  8002  0322                     ;KEY.c: 399: };KEY.c: 400: Ds1302WriteTime(3, HOUR_ten << 4 | HOUR_unit);
  8003                           	movf	(_HOUR_ten),w
  8004  0322  0831               	movwf	(??_ModeSwitch+0)+0
  8005  0323  00E7               	movlw	(04h)-1
  8006  0324  3003               u5785:
  8007  0325                     	clrc
  8008  0325  1003               	rlf	(??_ModeSwitch+0)+0,f
  8009  0326  0DE7               	addlw	-1
  8010  0327  3EFF               	skipz
  8011  0328  1D03               	goto	u5785
  8012  0329  2B25               	clrc
  8013  032A  1003               	rlf	(??_ModeSwitch+0)+0,w
  8014  032B  0D67               	iorwf	(_HOUR_unit),w
  8015  032C  0430               	movwf	(??_ModeSwitch+1)+0
  8016  032D  00E8               	movf	(??_ModeSwitch+1)+0,w
  8017  032E  0868               	movwf	(Ds1302WriteTime@dat)
  8018  032F  00F6               	movlw	low(03h)
  8019  0330  3003               	fcall	_Ds1302WriteTime
  8020  0331  160A  118A  25A9  120A  118A  	line	401
  8021                           ;KEY.c: 401: break;
  8022                           	goto	l4509
  8023  0336  2D36               	line	403
  8024                           ;KEY.c: 402: };KEY.c: 403: case 8:
  8025                           	
  8026                           l576:	
  8027  0337                     	line	405
  8028                           	
  8029                           l4375:	
  8030  0337                     ;KEY.c: 404: {;KEY.c: 405: if (key2pushflag == 1) {
  8031                           		decf	((_key2pushflag)),w
  8032  0337  037B               	btfss	status,2
  8033  0338  1D03               	goto	u5791
  8034  0339  2B3B               	goto	u5790
  8035  033A  2B3C               u5791:
  8036  033B                     	goto	l4387
  8037  033B  2B5D               u5790:
  8038  033C                     	line	406
  8039                           	
  8040                           l4377:	
  8041  033C                     ;KEY.c: 406: HOUR_unit++;
  8042                           	movlw	low(01h)
  8043  033C  3001               	bcf	status, 5	;RP0=0, select bank0
  8044  033D  1283               	bcf	status, 6	;RP1=0, select bank0
  8045  033E  1303               	movwf	(??_ModeSwitch+0)+0
  8046  033F  00E7               	movf	(??_ModeSwitch+0)+0,w
  8047  0340  0867               	addwf	(_HOUR_unit),f
  8048  0341  07B0               	line	407
  8049                           ;KEY.c: 407: if (HOUR_ten == 2) {
  8050                           		movlw	2
  8051  0342  3002               	xorwf	((_HOUR_ten)),w
  8052  0343  0631               	btfss	status,2
  8053  0344  1D03               	goto	u5801
  8054  0345  2B47               	goto	u5800
  8055  0346  2B48               u5801:
  8056  0347                     	goto	l4383
  8057  0347  2B52               u5800:
  8058  0348                     	line	408
  8059                           	
  8060                           l4379:	
  8061  0348                     ;KEY.c: 408: if (HOUR_unit > 4) {
  8062                           	movf	(_HOUR_unit),w
  8063  0348  0830               	xorlw	80h
  8064  0349  3A80               	addlw	-((05h)^80h)
  8065  034A  3E7B               	skipc
  8066  034B  1C03               	goto	u5811
  8067  034C  2B4E               	goto	u5810
  8068  034D  2B4F               u5811:
  8069  034E                     	goto	l580
  8070  034E  2B5B               u5810:
  8071  034F                     	line	409
  8072                           	
  8073                           l4381:	
  8074  034F                     ;KEY.c: 409: HOUR_unit = 0;
  8075                           	clrf	(_HOUR_unit)
  8076  034F  01B0               	goto	l580
  8077  0350  2B5B               	line	410
  8078                           	
  8079                           l579:	
  8080  0351                     	line	411
  8081                           ;KEY.c: 410: };KEY.c: 411: } else {
  8082                           	goto	l580
  8083  0351  2B5B               	
  8084                           l578:	
  8085  0352                     	line	412
  8086                           	
  8087                           l4383:	
  8088  0352                     ;KEY.c: 412: if (HOUR_unit > 9) {
  8089                           	movf	(_HOUR_unit),w
  8090  0352  0830               	xorlw	80h
  8091  0353  3A80               	addlw	-((0Ah)^80h)
  8092  0354  3E76               	skipc
  8093  0355  1C03               	goto	u5821
  8094  0356  2B58               	goto	u5820
  8095  0357  2B59               u5821:
  8096  0358                     	goto	l580
  8097  0358  2B5B               u5820:
  8098  0359                     	line	413
  8099                           	
  8100                           l4385:	
  8101  0359                     ;KEY.c: 413: HOUR_unit = 0;
  8102                           	clrf	(_HOUR_unit)
  8103  0359  01B0               	goto	l580
  8104  035A  2B5B               	line	414
  8105                           	
  8106                           l581:	
  8107  035B                     	line	415
  8108                           	
  8109                           l580:	
  8110  035B                     	line	416
  8111                           ;KEY.c: 414: };KEY.c: 415: };KEY.c: 416: key2pushflag = 0;
  8112                           	clrf	(_key2pushflag)
  8113  035B  01FB               	line	417
  8114                           ;KEY.c: 417: } else if (key3pushflag == 1) {
  8115                           	goto	l4399
  8116  035C  2B85               	
  8117                           l577:	
  8118  035D                     	
  8119                           l4387:	
  8120  035D                     	bcf	status, 5	;RP0=0, select bank0
  8121  035D  1283               	bcf	status, 6	;RP1=0, select bank0
  8122  035E  1303               		decf	((_key3pushflag)),w
  8123  035F  0329               	btfss	status,2
  8124  0360  1D03               	goto	u5831
  8125  0361  2B63               	goto	u5830
  8126  0362  2B64               u5831:
  8127  0363                     	goto	l4399
  8128  0363  2B85               u5830:
  8129  0364                     	line	418
  8130                           	
  8131                           l4389:	
  8132  0364                     ;KEY.c: 418: HOUR_unit--;
  8133                           	movlw	low(-1)
  8134  0364  30FF               	movwf	(??_ModeSwitch+0)+0
  8135  0365  00E7               	movf	(??_ModeSwitch+0)+0,w
  8136  0366  0867               	addwf	(_HOUR_unit),f
  8137  0367  07B0               	line	419
  8138                           ;KEY.c: 419: if (HOUR_ten == 2) {
  8139                           		movlw	2
  8140  0368  3002               	xorwf	((_HOUR_ten)),w
  8141  0369  0631               	btfss	status,2
  8142  036A  1D03               	goto	u5841
  8143  036B  2B6D               	goto	u5840
  8144  036C  2B6E               u5841:
  8145  036D                     	goto	l584
  8146  036D  2B78               u5840:
  8147  036E                     	line	420
  8148                           	
  8149                           l4391:	
  8150  036E                     ;KEY.c: 420: if (HOUR_unit < 0) {
  8151                           	btfss	(_HOUR_unit),7
  8152  036E  1FB0               	goto	u5851
  8153  036F  2B71               	goto	u5850
  8154  0370  2B72               u5851:
  8155  0371                     	goto	l4397
  8156  0371  2B82               u5850:
  8157  0372                     	line	421
  8158                           	
  8159                           l4393:	
  8160  0372                     ;KEY.c: 421: HOUR_unit = 4;
  8161                           	movlw	low(04h)
  8162  0372  3004               	movwf	(??_ModeSwitch+0)+0
  8163  0373  00E7               	movf	(??_ModeSwitch+0)+0,w
  8164  0374  0867               	movwf	(_HOUR_unit)
  8165  0375  00B0               	goto	l4397
  8166  0376  2B82               	line	422
  8167                           	
  8168                           l585:	
  8169  0377                     	line	423
  8170                           ;KEY.c: 422: };KEY.c: 423: } else {
  8171                           	goto	l4397
  8172  0377  2B82               	
  8173                           l584:	
  8174  0378                     	line	424
  8175                           ;KEY.c: 424: if (HOUR_unit < 0) {
  8176                           	btfss	(_HOUR_unit),7
  8177  0378  1FB0               	goto	u5861
  8178  0379  2B7B               	goto	u5860
  8179  037A  2B7C               u5861:
  8180  037B                     	goto	l4397
  8181  037B  2B82               u5860:
  8182  037C                     	line	425
  8183                           	
  8184                           l4395:	
  8185  037C                     ;KEY.c: 425: HOUR_unit = 9;
  8186                           	movlw	low(09h)
  8187  037C  3009               	movwf	(??_ModeSwitch+0)+0
  8188  037D  00E7               	movf	(??_ModeSwitch+0)+0,w
  8189  037E  0867               	movwf	(_HOUR_unit)
  8190  037F  00B0               	goto	l4397
  8191  0380  2B82               	line	426
  8192                           	
  8193                           l587:	
  8194  0381                     	goto	l4397
  8195  0381  2B82               	line	427
  8196                           	
  8197                           l586:	
  8198  0382                     	line	428
  8199                           	
  8200                           l4397:	
  8201  0382                     ;KEY.c: 426: };KEY.c: 427: };KEY.c: 428: key3pushflag = 0;
  8202                           	clrf	(_key3pushflag)
  8203  0382  01A9               	goto	l4399
  8204  0383  2B85               	line	429
  8205                           	
  8206                           l583:	
  8207  0384                     	goto	l4399
  8208  0384  2B85               	line	430
  8209                           	
  8210                           l582:	
  8211  0385                     	
  8212                           l4399:	
  8213  0385                     ;KEY.c: 429: };KEY.c: 430: Ds1302WriteTime(2, HOUR_ten << 4 | HOUR_unit);
  8214                           	movf	(_HOUR_ten),w
  8215  0385  0831               	movwf	(??_ModeSwitch+0)+0
  8216  0386  00E7               	movlw	(04h)-1
  8217  0387  3003               u5875:
  8218  0388                     	clrc
  8219  0388  1003               	rlf	(??_ModeSwitch+0)+0,f
  8220  0389  0DE7               	addlw	-1
  8221  038A  3EFF               	skipz
  8222  038B  1D03               	goto	u5875
  8223  038C  2B88               	clrc
  8224  038D  1003               	rlf	(??_ModeSwitch+0)+0,w
  8225  038E  0D67               	iorwf	(_HOUR_unit),w
  8226  038F  0430               	movwf	(??_ModeSwitch+1)+0
  8227  0390  00E8               	movf	(??_ModeSwitch+1)+0,w
  8228  0391  0868               	movwf	(Ds1302WriteTime@dat)
  8229  0392  00F6               	movlw	low(02h)
  8230  0393  3002               	fcall	_Ds1302WriteTime
  8231  0394  160A  118A  25A9  120A  118A  	line	431
  8232                           ;KEY.c: 431: break;
  8233                           	goto	l4509
  8234  0399  2D36               	line	433
  8235                           ;KEY.c: 432: };KEY.c: 433: case 9:
  8236                           	
  8237                           l588:	
  8238  039A                     	line	435
  8239                           	
  8240                           l4401:	
  8241  039A                     ;KEY.c: 434: {;KEY.c: 435: if (key2pushflag == 1) {
  8242                           		decf	((_key2pushflag)),w
  8243  039A  037B               	btfss	status,2
  8244  039B  1D03               	goto	u5881
  8245  039C  2B9E               	goto	u5880
  8246  039D  2B9F               u5881:
  8247  039E                     	goto	l4415
  8248  039E  2BC1               u5880:
  8249  039F                     	line	436
  8250                           	
  8251                           l4403:	
  8252  039F                     ;KEY.c: 436: MINUTE_ten++;
  8253                           	movlw	low(01h)
  8254  039F  3001               	bcf	status, 5	;RP0=0, select bank0
  8255  03A0  1283               	bcf	status, 6	;RP1=0, select bank0
  8256  03A1  1303               	movwf	(??_ModeSwitch+0)+0
  8257  03A2  00E7               	movf	(??_ModeSwitch+0)+0,w
  8258  03A3  0867               	addwf	(_MINUTE_ten),f
  8259  03A4  07AF               	line	437
  8260                           	
  8261                           l4405:	
  8262  03A5                     ;KEY.c: 437: if (MINUTE_unit > 0) {
  8263                           	movf	(_MINUTE_unit),w
  8264  03A5  082E               	xorlw	80h
  8265  03A6  3A80               	addlw	-((01h)^80h)
  8266  03A7  3E7F               	skipc
  8267  03A8  1C03               	goto	u5891
  8268  03A9  2BAB               	goto	u5890
  8269  03AA  2BAC               u5891:
  8270  03AB                     	goto	l4411
  8271  03AB  2BB6               u5890:
  8272  03AC                     	line	438
  8273                           	
  8274                           l4407:	
  8275  03AC                     ;KEY.c: 438: if (MINUTE_ten > 5) {
  8276                           	movf	(_MINUTE_ten),w
  8277  03AC  082F               	xorlw	80h
  8278  03AD  3A80               	addlw	-((06h)^80h)
  8279  03AE  3E7A               	skipc
  8280  03AF  1C03               	goto	u5901
  8281  03B0  2BB2               	goto	u5900
  8282  03B1  2BB3               u5901:
  8283  03B2                     	goto	l592
  8284  03B2  2BBF               u5900:
  8285  03B3                     	line	439
  8286                           	
  8287                           l4409:	
  8288  03B3                     ;KEY.c: 439: MINUTE_ten = 0;
  8289                           	clrf	(_MINUTE_ten)
  8290  03B3  01AF               	goto	l592
  8291  03B4  2BBF               	line	440
  8292                           	
  8293                           l591:	
  8294  03B5                     	line	441
  8295                           ;KEY.c: 440: };KEY.c: 441: } else {
  8296                           	goto	l592
  8297  03B5  2BBF               	
  8298                           l590:	
  8299  03B6                     	line	442
  8300                           	
  8301                           l4411:	
  8302  03B6                     ;KEY.c: 442: if (MINUTE_ten > 6) {
  8303                           	movf	(_MINUTE_ten),w
  8304  03B6  082F               	xorlw	80h
  8305  03B7  3A80               	addlw	-((07h)^80h)
  8306  03B8  3E79               	skipc
  8307  03B9  1C03               	goto	u5911
  8308  03BA  2BBC               	goto	u5910
  8309  03BB  2BBD               u5911:
  8310  03BC                     	goto	l592
  8311  03BC  2BBF               u5910:
  8312  03BD                     	line	443
  8313                           	
  8314                           l4413:	
  8315  03BD                     ;KEY.c: 443: MINUTE_ten = 0;
  8316                           	clrf	(_MINUTE_ten)
  8317  03BD  01AF               	goto	l592
  8318  03BE  2BBF               	line	444
  8319                           	
  8320                           l593:	
  8321  03BF                     	line	445
  8322                           	
  8323                           l592:	
  8324  03BF                     	line	446
  8325                           ;KEY.c: 444: };KEY.c: 445: };KEY.c: 446: key2pushflag = 0;
  8326                           	clrf	(_key2pushflag)
  8327  03BF  01FB               	line	447
  8328                           ;KEY.c: 447: } else if (key3pushflag == 1) {
  8329                           	goto	l4429
  8330  03C0  2BEA               	
  8331                           l589:	
  8332  03C1                     	
  8333                           l4415:	
  8334  03C1                     	bcf	status, 5	;RP0=0, select bank0
  8335  03C1  1283               	bcf	status, 6	;RP1=0, select bank0
  8336  03C2  1303               		decf	((_key3pushflag)),w
  8337  03C3  0329               	btfss	status,2
  8338  03C4  1D03               	goto	u5921
  8339  03C5  2BC7               	goto	u5920
  8340  03C6  2BC8               u5921:
  8341  03C7                     	goto	l4429
  8342  03C7  2BEA               u5920:
  8343  03C8                     	line	448
  8344                           	
  8345                           l4417:	
  8346  03C8                     ;KEY.c: 448: MINUTE_ten--;
  8347                           	movlw	low(-1)
  8348  03C8  30FF               	movwf	(??_ModeSwitch+0)+0
  8349  03C9  00E7               	movf	(??_ModeSwitch+0)+0,w
  8350  03CA  0867               	addwf	(_MINUTE_ten),f
  8351  03CB  07AF               	line	449
  8352                           	
  8353                           l4419:	
  8354  03CC                     ;KEY.c: 449: if (MINUTE_unit > 0) {
  8355                           	movf	(_MINUTE_unit),w
  8356  03CC  082E               	xorlw	80h
  8357  03CD  3A80               	addlw	-((01h)^80h)
  8358  03CE  3E7F               	skipc
  8359  03CF  1C03               	goto	u5931
  8360  03D0  2BD2               	goto	u5930
  8361  03D1  2BD3               u5931:
  8362  03D2                     	goto	l596
  8363  03D2  2BDD               u5930:
  8364  03D3                     	line	450
  8365                           	
  8366                           l4421:	
  8367  03D3                     ;KEY.c: 450: if (MINUTE_ten < 0) {
  8368                           	btfss	(_MINUTE_ten),7
  8369  03D3  1FAF               	goto	u5941
  8370  03D4  2BD6               	goto	u5940
  8371  03D5  2BD7               u5941:
  8372  03D6                     	goto	l4427
  8373  03D6  2BE7               u5940:
  8374  03D7                     	line	451
  8375                           	
  8376                           l4423:	
  8377  03D7                     ;KEY.c: 451: MINUTE_ten = 5;
  8378                           	movlw	low(05h)
  8379  03D7  3005               	movwf	(??_ModeSwitch+0)+0
  8380  03D8  00E7               	movf	(??_ModeSwitch+0)+0,w
  8381  03D9  0867               	movwf	(_MINUTE_ten)
  8382  03DA  00AF               	goto	l4427
  8383  03DB  2BE7               	line	452
  8384                           	
  8385                           l597:	
  8386  03DC                     	line	453
  8387                           ;KEY.c: 452: };KEY.c: 453: } else {
  8388                           	goto	l4427
  8389  03DC  2BE7               	
  8390                           l596:	
  8391  03DD                     	line	454
  8392                           ;KEY.c: 454: if (MINUTE_ten < 0) {
  8393                           	btfss	(_MINUTE_ten),7
  8394  03DD  1FAF               	goto	u5951
  8395  03DE  2BE0               	goto	u5950
  8396  03DF  2BE1               u5951:
  8397  03E0                     	goto	l4427
  8398  03E0  2BE7               u5950:
  8399  03E1                     	line	455
  8400                           	
  8401                           l4425:	
  8402  03E1                     ;KEY.c: 455: MINUTE_ten = 6;
  8403                           	movlw	low(06h)
  8404  03E1  3006               	movwf	(??_ModeSwitch+0)+0
  8405  03E2  00E7               	movf	(??_ModeSwitch+0)+0,w
  8406  03E3  0867               	movwf	(_MINUTE_ten)
  8407  03E4  00AF               	goto	l4427
  8408  03E5  2BE7               	line	456
  8409                           	
  8410                           l599:	
  8411  03E6                     	goto	l4427
  8412  03E6  2BE7               	line	457
  8413                           	
  8414                           l598:	
  8415  03E7                     	line	458
  8416                           	
  8417                           l4427:	
  8418  03E7                     ;KEY.c: 456: };KEY.c: 457: };KEY.c: 458: key3pushflag = 0;
  8419                           	clrf	(_key3pushflag)
  8420  03E7  01A9               	goto	l4429
  8421  03E8  2BEA               	line	459
  8422                           	
  8423                           l595:	
  8424  03E9                     	goto	l4429
  8425  03E9  2BEA               	line	460
  8426                           	
  8427                           l594:	
  8428  03EA                     	
  8429                           l4429:	
  8430  03EA                     ;KEY.c: 459: };KEY.c: 460: Ds1302WriteTime(1, MINUTE_ten << 4 | MINUTE_unit);
  8431                           	movf	(_MINUTE_ten),w
  8432  03EA  082F               	movwf	(??_ModeSwitch+0)+0
  8433  03EB  00E7               	movlw	(04h)-1
  8434  03EC  3003               u5965:
  8435  03ED                     	clrc
  8436  03ED  1003               	rlf	(??_ModeSwitch+0)+0,f
  8437  03EE  0DE7               	addlw	-1
  8438  03EF  3EFF               	skipz
  8439  03F0  1D03               	goto	u5965
  8440  03F1  2BED               	clrc
  8441  03F2  1003               	rlf	(??_ModeSwitch+0)+0,w
  8442  03F3  0D67               	iorwf	(_MINUTE_unit),w
  8443  03F4  042E               	movwf	(??_ModeSwitch+1)+0
  8444  03F5  00E8               	movf	(??_ModeSwitch+1)+0,w
  8445  03F6  0868               	movwf	(Ds1302WriteTime@dat)
  8446  03F7  00F6               	movlw	low(01h)
  8447  03F8  3001               	fcall	_Ds1302WriteTime
  8448  03F9  160A  118A  25A9  120A  118A  	line	461
  8449                           ;KEY.c: 461: break;
  8450                           	goto	l4509
  8451  03FE  2D36               	line	463
  8452                           ;KEY.c: 462: };KEY.c: 463: case 10:
  8453                           	
  8454                           l600:	
  8455  03FF                     	line	465
  8456                           	
  8457                           l4431:	
  8458  03FF                     ;KEY.c: 464: {;KEY.c: 465: if (key2pushflag == 1) {
  8459                           		decf	((_key2pushflag)),w
  8460  03FF  037B               	btfss	status,2
  8461  0400  1D03               	goto	u5971
  8462  0401  2C03               	goto	u5970
  8463  0402  2C04               u5971:
  8464  0403                     	goto	l4441
  8465  0403  2C1D               u5970:
  8466  0404                     	line	466
  8467                           	
  8468                           l4433:	
  8469  0404                     ;KEY.c: 466: MINUTE_unit++;
  8470                           	movlw	low(01h)
  8471  0404  3001               	bcf	status, 5	;RP0=0, select bank0
  8472  0405  1283               	bcf	status, 6	;RP1=0, select bank0
  8473  0406  1303               	movwf	(??_ModeSwitch+0)+0
  8474  0407  00E7               	movf	(??_ModeSwitch+0)+0,w
  8475  0408  0867               	addwf	(_MINUTE_unit),f
  8476  0409  07AE               	line	467
  8477                           ;KEY.c: 467: if (MINUTE_ten == 6) {
  8478                           		movlw	6
  8479  040A  3006               	xorwf	((_MINUTE_ten)),w
  8480  040B  062F               	btfss	status,2
  8481  040C  1D03               	goto	u5981
  8482  040D  2C0F               	goto	u5980
  8483  040E  2C10               u5981:
  8484  040F                     	goto	l4437
  8485  040F  2C12               u5980:
  8486  0410                     	line	468
  8487                           	
  8488                           l4435:	
  8489  0410                     ;KEY.c: 468: MINUTE_unit = 0;
  8490                           	clrf	(_MINUTE_unit)
  8491  0410  01AE               	line	469
  8492                           ;KEY.c: 469: } else {
  8493                           	goto	l603
  8494  0411  2C1B               	
  8495                           l602:	
  8496  0412                     	line	470
  8497                           	
  8498                           l4437:	
  8499  0412                     ;KEY.c: 470: if (MINUTE_unit > 9) {
  8500                           	movf	(_MINUTE_unit),w
  8501  0412  082E               	xorlw	80h
  8502  0413  3A80               	addlw	-((0Ah)^80h)
  8503  0414  3E76               	skipc
  8504  0415  1C03               	goto	u5991
  8505  0416  2C18               	goto	u5990
  8506  0417  2C19               u5991:
  8507  0418                     	goto	l603
  8508  0418  2C1B               u5990:
  8509  0419                     	line	471
  8510                           	
  8511                           l4439:	
  8512  0419                     ;KEY.c: 471: MINUTE_unit = 0;
  8513                           	clrf	(_MINUTE_unit)
  8514  0419  01AE               	goto	l603
  8515  041A  2C1B               	line	472
  8516                           	
  8517                           l604:	
  8518  041B                     	line	473
  8519                           	
  8520                           l603:	
  8521  041B                     	line	474
  8522                           ;KEY.c: 472: };KEY.c: 473: };KEY.c: 474: key2pushflag = 0;
  8523                           	clrf	(_key2pushflag)
  8524  041B  01FB               	line	475
  8525                           ;KEY.c: 475: } else if (key3pushflag == 1) {
  8526                           	goto	l4451
  8527  041C  2C3D               	
  8528                           l601:	
  8529  041D                     	
  8530                           l4441:	
  8531  041D                     	bcf	status, 5	;RP0=0, select bank0
  8532  041D  1283               	bcf	status, 6	;RP1=0, select bank0
  8533  041E  1303               		decf	((_key3pushflag)),w
  8534  041F  0329               	btfss	status,2
  8535  0420  1D03               	goto	u6001
  8536  0421  2C23               	goto	u6000
  8537  0422  2C24               u6001:
  8538  0423                     	goto	l4451
  8539  0423  2C3D               u6000:
  8540  0424                     	line	476
  8541                           	
  8542                           l4443:	
  8543  0424                     ;KEY.c: 476: MINUTE_unit--;
  8544                           	movlw	low(-1)
  8545  0424  30FF               	movwf	(??_ModeSwitch+0)+0
  8546  0425  00E7               	movf	(??_ModeSwitch+0)+0,w
  8547  0426  0867               	addwf	(_MINUTE_unit),f
  8548  0427  07AE               	line	477
  8549                           ;KEY.c: 477: if (MINUTE_ten == 6) {
  8550                           		movlw	6
  8551  0428  3006               	xorwf	((_MINUTE_ten)),w
  8552  0429  062F               	btfss	status,2
  8553  042A  1D03               	goto	u6011
  8554  042B  2C2D               	goto	u6010
  8555  042C  2C2E               u6011:
  8556  042D                     	goto	l607
  8557  042D  2C30               u6010:
  8558  042E                     	line	478
  8559                           	
  8560                           l4445:	
  8561  042E                     ;KEY.c: 478: MINUTE_unit = 0;
  8562                           	clrf	(_MINUTE_unit)
  8563  042E  01AE               	line	479
  8564                           ;KEY.c: 479: } else {
  8565                           	goto	l4449
  8566  042F  2C3A               	
  8567                           l607:	
  8568  0430                     	line	480
  8569                           ;KEY.c: 480: if (MINUTE_unit < 0) {
  8570                           	btfss	(_MINUTE_unit),7
  8571  0430  1FAE               	goto	u6021
  8572  0431  2C33               	goto	u6020
  8573  0432  2C34               u6021:
  8574  0433                     	goto	l4449
  8575  0433  2C3A               u6020:
  8576  0434                     	line	481
  8577                           	
  8578                           l4447:	
  8579  0434                     ;KEY.c: 481: MINUTE_unit = 9;
  8580                           	movlw	low(09h)
  8581  0434  3009               	movwf	(??_ModeSwitch+0)+0
  8582  0435  00E7               	movf	(??_ModeSwitch+0)+0,w
  8583  0436  0867               	movwf	(_MINUTE_unit)
  8584  0437  00AE               	goto	l4449
  8585  0438  2C3A               	line	482
  8586                           	
  8587                           l609:	
  8588  0439                     	goto	l4449
  8589  0439  2C3A               	line	483
  8590                           	
  8591                           l608:	
  8592  043A                     	line	485
  8593                           	
  8594                           l4449:	
  8595  043A                     ;KEY.c: 482: };KEY.c: 483: };KEY.c: 485: key3pushflag = 0;
  8596                           	clrf	(_key3pushflag)
  8597  043A  01A9               	goto	l4451
  8598  043B  2C3D               	line	486
  8599                           	
  8600                           l606:	
  8601  043C                     	goto	l4451
  8602  043C  2C3D               	line	487
  8603                           	
  8604                           l605:	
  8605  043D                     	
  8606                           l4451:	
  8607  043D                     ;KEY.c: 486: };KEY.c: 487: Ds1302WriteTime(1, MINUTE_ten << 4 | MINUTE_unit);
  8608                           	movf	(_MINUTE_ten),w
  8609  043D  082F               	movwf	(??_ModeSwitch+0)+0
  8610  043E  00E7               	movlw	(04h)-1
  8611  043F  3003               u6035:
  8612  0440                     	clrc
  8613  0440  1003               	rlf	(??_ModeSwitch+0)+0,f
  8614  0441  0DE7               	addlw	-1
  8615  0442  3EFF               	skipz
  8616  0443  1D03               	goto	u6035
  8617  0444  2C40               	clrc
  8618  0445  1003               	rlf	(??_ModeSwitch+0)+0,w
  8619  0446  0D67               	iorwf	(_MINUTE_unit),w
  8620  0447  042E               	movwf	(??_ModeSwitch+1)+0
  8621  0448  00E8               	movf	(??_ModeSwitch+1)+0,w
  8622  0449  0868               	movwf	(Ds1302WriteTime@dat)
  8623  044A  00F6               	movlw	low(01h)
  8624  044B  3001               	fcall	_Ds1302WriteTime
  8625  044C  160A  118A  25A9  120A  118A  	line	488
  8626                           ;KEY.c: 488: break;
  8627                           	goto	l4509
  8628  0451  2D36               	line	490
  8629                           ;KEY.c: 489: };KEY.c: 490: case 11:
  8630                           	
  8631                           l610:	
  8632  0452                     	line	492
  8633                           	
  8634                           l4453:	
  8635  0452                     ;KEY.c: 491: {;KEY.c: 492: if (key2pushflag == 1) {
  8636                           		decf	((_key2pushflag)),w
  8637  0452  037B               	btfss	status,2
  8638  0453  1D03               	goto	u6041
  8639  0454  2C56               	goto	u6040
  8640  0455  2C57               u6041:
  8641  0456                     	goto	l4467
  8642  0456  2C79               u6040:
  8643  0457                     	line	493
  8644                           	
  8645                           l4455:	
  8646  0457                     ;KEY.c: 493: SECOND_ten++;
  8647                           	movlw	low(01h)
  8648  0457  3001               	bcf	status, 5	;RP0=0, select bank0
  8649  0458  1283               	bcf	status, 6	;RP1=0, select bank0
  8650  0459  1303               	movwf	(??_ModeSwitch+0)+0
  8651  045A  00E7               	movf	(??_ModeSwitch+0)+0,w
  8652  045B  0867               	addwf	(_SECOND_ten),f
  8653  045C  07AD               	line	494
  8654                           	
  8655                           l4457:	
  8656  045D                     ;KEY.c: 494: if (SECOND_unit > 0) {
  8657                           	movf	(_SECOND_unit),w
  8658  045D  082C               	xorlw	80h
  8659  045E  3A80               	addlw	-((01h)^80h)
  8660  045F  3E7F               	skipc
  8661  0460  1C03               	goto	u6051
  8662  0461  2C63               	goto	u6050
  8663  0462  2C64               u6051:
  8664  0463                     	goto	l4463
  8665  0463  2C6E               u6050:
  8666  0464                     	line	495
  8667                           	
  8668                           l4459:	
  8669  0464                     ;KEY.c: 495: if (SECOND_ten > 5) {
  8670                           	movf	(_SECOND_ten),w
  8671  0464  082D               	xorlw	80h
  8672  0465  3A80               	addlw	-((06h)^80h)
  8673  0466  3E7A               	skipc
  8674  0467  1C03               	goto	u6061
  8675  0468  2C6A               	goto	u6060
  8676  0469  2C6B               u6061:
  8677  046A                     	goto	l614
  8678  046A  2C77               u6060:
  8679  046B                     	line	496
  8680                           	
  8681                           l4461:	
  8682  046B                     ;KEY.c: 496: SECOND_ten = 0;
  8683                           	clrf	(_SECOND_ten)
  8684  046B  01AD               	goto	l614
  8685  046C  2C77               	line	497
  8686                           	
  8687                           l613:	
  8688  046D                     	line	498
  8689                           ;KEY.c: 497: };KEY.c: 498: } else {
  8690                           	goto	l614
  8691  046D  2C77               	
  8692                           l612:	
  8693  046E                     	line	499
  8694                           	
  8695                           l4463:	
  8696  046E                     ;KEY.c: 499: if (SECOND_ten > 6) {
  8697                           	movf	(_SECOND_ten),w
  8698  046E  082D               	xorlw	80h
  8699  046F  3A80               	addlw	-((07h)^80h)
  8700  0470  3E79               	skipc
  8701  0471  1C03               	goto	u6071
  8702  0472  2C74               	goto	u6070
  8703  0473  2C75               u6071:
  8704  0474                     	goto	l614
  8705  0474  2C77               u6070:
  8706  0475                     	line	500
  8707                           	
  8708                           l4465:	
  8709  0475                     ;KEY.c: 500: SECOND_ten = 0;
  8710                           	clrf	(_SECOND_ten)
  8711  0475  01AD               	goto	l614
  8712  0476  2C77               	line	501
  8713                           	
  8714                           l615:	
  8715  0477                     	line	502
  8716                           	
  8717                           l614:	
  8718  0477                     	line	503
  8719                           ;KEY.c: 501: };KEY.c: 502: };KEY.c: 503: key2pushflag = 0;
  8720                           	clrf	(_key2pushflag)
  8721  0477  01FB               	line	504
  8722                           ;KEY.c: 504: } else if (key3pushflag == 1) {
  8723                           	goto	l4481
  8724  0478  2CA2               	
  8725                           l611:	
  8726  0479                     	
  8727                           l4467:	
  8728  0479                     	bcf	status, 5	;RP0=0, select bank0
  8729  0479  1283               	bcf	status, 6	;RP1=0, select bank0
  8730  047A  1303               		decf	((_key3pushflag)),w
  8731  047B  0329               	btfss	status,2
  8732  047C  1D03               	goto	u6081
  8733  047D  2C7F               	goto	u6080
  8734  047E  2C80               u6081:
  8735  047F                     	goto	l4481
  8736  047F  2CA2               u6080:
  8737  0480                     	line	505
  8738                           	
  8739                           l4469:	
  8740  0480                     ;KEY.c: 505: SECOND_ten--;
  8741                           	movlw	low(-1)
  8742  0480  30FF               	movwf	(??_ModeSwitch+0)+0
  8743  0481  00E7               	movf	(??_ModeSwitch+0)+0,w
  8744  0482  0867               	addwf	(_SECOND_ten),f
  8745  0483  07AD               	line	506
  8746                           	
  8747                           l4471:	
  8748  0484                     ;KEY.c: 506: if (SECOND_unit > 0) {
  8749                           	movf	(_SECOND_unit),w
  8750  0484  082C               	xorlw	80h
  8751  0485  3A80               	addlw	-((01h)^80h)
  8752  0486  3E7F               	skipc
  8753  0487  1C03               	goto	u6091
  8754  0488  2C8A               	goto	u6090
  8755  0489  2C8B               u6091:
  8756  048A                     	goto	l618
  8757  048A  2C95               u6090:
  8758  048B                     	line	507
  8759                           	
  8760                           l4473:	
  8761  048B                     ;KEY.c: 507: if (SECOND_ten < 0) {
  8762                           	btfss	(_SECOND_ten),7
  8763  048B  1FAD               	goto	u6101
  8764  048C  2C8E               	goto	u6100
  8765  048D  2C8F               u6101:
  8766  048E                     	goto	l4479
  8767  048E  2C9F               u6100:
  8768  048F                     	line	508
  8769                           	
  8770                           l4475:	
  8771  048F                     ;KEY.c: 508: SECOND_ten = 5;
  8772                           	movlw	low(05h)
  8773  048F  3005               	movwf	(??_ModeSwitch+0)+0
  8774  0490  00E7               	movf	(??_ModeSwitch+0)+0,w
  8775  0491  0867               	movwf	(_SECOND_ten)
  8776  0492  00AD               	goto	l4479
  8777  0493  2C9F               	line	509
  8778                           	
  8779                           l619:	
  8780  0494                     	line	510
  8781                           ;KEY.c: 509: };KEY.c: 510: } else {
  8782                           	goto	l4479
  8783  0494  2C9F               	
  8784                           l618:	
  8785  0495                     	line	511
  8786                           ;KEY.c: 511: if (SECOND_ten < 0) {
  8787                           	btfss	(_SECOND_ten),7
  8788  0495  1FAD               	goto	u6111
  8789  0496  2C98               	goto	u6110
  8790  0497  2C99               u6111:
  8791  0498                     	goto	l4479
  8792  0498  2C9F               u6110:
  8793  0499                     	line	512
  8794                           	
  8795                           l4477:	
  8796  0499                     ;KEY.c: 512: SECOND_ten = 6;
  8797                           	movlw	low(06h)
  8798  0499  3006               	movwf	(??_ModeSwitch+0)+0
  8799  049A  00E7               	movf	(??_ModeSwitch+0)+0,w
  8800  049B  0867               	movwf	(_SECOND_ten)
  8801  049C  00AD               	goto	l4479
  8802  049D  2C9F               	line	513
  8803                           	
  8804                           l621:	
  8805  049E                     	goto	l4479
  8806  049E  2C9F               	line	514
  8807                           	
  8808                           l620:	
  8809  049F                     	line	515
  8810                           	
  8811                           l4479:	
  8812  049F                     ;KEY.c: 513: };KEY.c: 514: };KEY.c: 515: key3pushflag = 0;
  8813                           	clrf	(_key3pushflag)
  8814  049F  01A9               	goto	l4481
  8815  04A0  2CA2               	line	516
  8816                           	
  8817                           l617:	
  8818  04A1                     	goto	l4481
  8819  04A1  2CA2               	line	517
  8820                           	
  8821                           l616:	
  8822  04A2                     	
  8823                           l4481:	
  8824  04A2                     ;KEY.c: 516: };KEY.c: 517: Ds1302WriteTime(0, SECOND_ten << 4 | SECOND_unit);
  8825                           	movf	(_SECOND_ten),w
  8826  04A2  082D               	movwf	(??_ModeSwitch+0)+0
  8827  04A3  00E7               	movlw	(04h)-1
  8828  04A4  3003               u6125:
  8829  04A5                     	clrc
  8830  04A5  1003               	rlf	(??_ModeSwitch+0)+0,f
  8831  04A6  0DE7               	addlw	-1
  8832  04A7  3EFF               	skipz
  8833  04A8  1D03               	goto	u6125
  8834  04A9  2CA5               	clrc
  8835  04AA  1003               	rlf	(??_ModeSwitch+0)+0,w
  8836  04AB  0D67               	iorwf	(_SECOND_unit),w
  8837  04AC  042C               	movwf	(??_ModeSwitch+1)+0
  8838  04AD  00E8               	movf	(??_ModeSwitch+1)+0,w
  8839  04AE  0868               	movwf	(Ds1302WriteTime@dat)
  8840  04AF  00F6               	movlw	low(0)
  8841  04B0  3000               	fcall	_Ds1302WriteTime
  8842  04B1  160A  118A  25A9  120A  118A  	line	518
  8843                           ;KEY.c: 518: break;
  8844                           	goto	l4509
  8845  04B6  2D36               	line	520
  8846                           ;KEY.c: 519: };KEY.c: 520: case 12:
  8847                           	
  8848                           l622:	
  8849  04B7                     	line	522
  8850                           	
  8851                           l4483:	
  8852  04B7                     ;KEY.c: 521: {;KEY.c: 522: if (key2pushflag == 1) {
  8853                           		decf	((_key2pushflag)),w
  8854  04B7  037B               	btfss	status,2
  8855  04B8  1D03               	goto	u6131
  8856  04B9  2CBB               	goto	u6130
  8857  04BA  2CBC               u6131:
  8858  04BB                     	goto	l4493
  8859  04BB  2CD5               u6130:
  8860  04BC                     	line	523
  8861                           	
  8862                           l4485:	
  8863  04BC                     ;KEY.c: 523: SECOND_unit++;
  8864                           	movlw	low(01h)
  8865  04BC  3001               	bcf	status, 5	;RP0=0, select bank0
  8866  04BD  1283               	bcf	status, 6	;RP1=0, select bank0
  8867  04BE  1303               	movwf	(??_ModeSwitch+0)+0
  8868  04BF  00E7               	movf	(??_ModeSwitch+0)+0,w
  8869  04C0  0867               	addwf	(_SECOND_unit),f
  8870  04C1  07AC               	line	524
  8871                           ;KEY.c: 524: if (SECOND_ten == 6) {
  8872                           		movlw	6
  8873  04C2  3006               	xorwf	((_SECOND_ten)),w
  8874  04C3  062D               	btfss	status,2
  8875  04C4  1D03               	goto	u6141
  8876  04C5  2CC7               	goto	u6140
  8877  04C6  2CC8               u6141:
  8878  04C7                     	goto	l4489
  8879  04C7  2CCA               u6140:
  8880  04C8                     	line	525
  8881                           	
  8882                           l4487:	
  8883  04C8                     ;KEY.c: 525: SECOND_unit = 0;
  8884                           	clrf	(_SECOND_unit)
  8885  04C8  01AC               	line	526
  8886                           ;KEY.c: 526: } else {
  8887                           	goto	l625
  8888  04C9  2CD3               	
  8889                           l624:	
  8890  04CA                     	line	527
  8891                           	
  8892                           l4489:	
  8893  04CA                     ;KEY.c: 527: if (SECOND_unit > 9) {
  8894                           	movf	(_SECOND_unit),w
  8895  04CA  082C               	xorlw	80h
  8896  04CB  3A80               	addlw	-((0Ah)^80h)
  8897  04CC  3E76               	skipc
  8898  04CD  1C03               	goto	u6151
  8899  04CE  2CD0               	goto	u6150
  8900  04CF  2CD1               u6151:
  8901  04D0                     	goto	l625
  8902  04D0  2CD3               u6150:
  8903  04D1                     	line	528
  8904                           	
  8905                           l4491:	
  8906  04D1                     ;KEY.c: 528: SECOND_unit = 0;
  8907                           	clrf	(_SECOND_unit)
  8908  04D1  01AC               	goto	l625
  8909  04D2  2CD3               	line	529
  8910                           	
  8911                           l626:	
  8912  04D3                     	line	530
  8913                           	
  8914                           l625:	
  8915  04D3                     	line	531
  8916                           ;KEY.c: 529: };KEY.c: 530: };KEY.c: 531: key2pushflag = 0;
  8917                           	clrf	(_key2pushflag)
  8918  04D3  01FB               	line	532
  8919                           ;KEY.c: 532: } else if (key3pushflag == 1) {
  8920                           	goto	l4503
  8921  04D4  2CF5               	
  8922                           l623:	
  8923  04D5                     	
  8924                           l4493:	
  8925  04D5                     	bcf	status, 5	;RP0=0, select bank0
  8926  04D5  1283               	bcf	status, 6	;RP1=0, select bank0
  8927  04D6  1303               		decf	((_key3pushflag)),w
  8928  04D7  0329               	btfss	status,2
  8929  04D8  1D03               	goto	u6161
  8930  04D9  2CDB               	goto	u6160
  8931  04DA  2CDC               u6161:
  8932  04DB                     	goto	l4503
  8933  04DB  2CF5               u6160:
  8934  04DC                     	line	533
  8935                           	
  8936                           l4495:	
  8937  04DC                     ;KEY.c: 533: SECOND_unit--;
  8938                           	movlw	low(-1)
  8939  04DC  30FF               	movwf	(??_ModeSwitch+0)+0
  8940  04DD  00E7               	movf	(??_ModeSwitch+0)+0,w
  8941  04DE  0867               	addwf	(_SECOND_unit),f
  8942  04DF  07AC               	line	534
  8943                           ;KEY.c: 534: if (SECOND_ten == 6) {
  8944                           		movlw	6
  8945  04E0  3006               	xorwf	((_SECOND_ten)),w
  8946  04E1  062D               	btfss	status,2
  8947  04E2  1D03               	goto	u6171
  8948  04E3  2CE5               	goto	u6170
  8949  04E4  2CE6               u6171:
  8950  04E5                     	goto	l629
  8951  04E5  2CE8               u6170:
  8952  04E6                     	line	535
  8953                           	
  8954                           l4497:	
  8955  04E6                     ;KEY.c: 535: SECOND_unit = 0;
  8956                           	clrf	(_SECOND_unit)
  8957  04E6  01AC               	line	536
  8958                           ;KEY.c: 536: } else {
  8959                           	goto	l4501
  8960  04E7  2CF2               	
  8961                           l629:	
  8962  04E8                     	line	537
  8963                           ;KEY.c: 537: if (SECOND_unit < 0) {
  8964                           	btfss	(_SECOND_unit),7
  8965  04E8  1FAC               	goto	u6181
  8966  04E9  2CEB               	goto	u6180
  8967  04EA  2CEC               u6181:
  8968  04EB                     	goto	l4501
  8969  04EB  2CF2               u6180:
  8970  04EC                     	line	538
  8971                           	
  8972                           l4499:	
  8973  04EC                     ;KEY.c: 538: SECOND_unit = 9;
  8974                           	movlw	low(09h)
  8975  04EC  3009               	movwf	(??_ModeSwitch+0)+0
  8976  04ED  00E7               	movf	(??_ModeSwitch+0)+0,w
  8977  04EE  0867               	movwf	(_SECOND_unit)
  8978  04EF  00AC               	goto	l4501
  8979  04F0  2CF2               	line	539
  8980                           	
  8981                           l631:	
  8982  04F1                     	goto	l4501
  8983  04F1  2CF2               	line	540
  8984                           	
  8985                           l630:	
  8986  04F2                     	line	541
  8987                           	
  8988                           l4501:	
  8989  04F2                     ;KEY.c: 539: };KEY.c: 540: };KEY.c: 541: key3pushflag = 0;
  8990                           	clrf	(_key3pushflag)
  8991  04F2  01A9               	goto	l4503
  8992  04F3  2CF5               	line	542
  8993                           	
  8994                           l628:	
  8995  04F4                     	goto	l4503
  8996  04F4  2CF5               	line	543
  8997                           	
  8998                           l627:	
  8999  04F5                     	
  9000                           l4503:	
  9001  04F5                     ;KEY.c: 542: };KEY.c: 543: Ds1302WriteTime(0, SECOND_ten << 4 | SECOND_unit);
  9002                           	movf	(_SECOND_ten),w
  9003  04F5  082D               	movwf	(??_ModeSwitch+0)+0
  9004  04F6  00E7               	movlw	(04h)-1
  9005  04F7  3003               u6195:
  9006  04F8                     	clrc
  9007  04F8  1003               	rlf	(??_ModeSwitch+0)+0,f
  9008  04F9  0DE7               	addlw	-1
  9009  04FA  3EFF               	skipz
  9010  04FB  1D03               	goto	u6195
  9011  04FC  2CF8               	clrc
  9012  04FD  1003               	rlf	(??_ModeSwitch+0)+0,w
  9013  04FE  0D67               	iorwf	(_SECOND_unit),w
  9014  04FF  042C               	movwf	(??_ModeSwitch+1)+0
  9015  0500  00E8               	movf	(??_ModeSwitch+1)+0,w
  9016  0501  0868               	movwf	(Ds1302WriteTime@dat)
  9017  0502  00F6               	movlw	low(0)
  9018  0503  3000               	fcall	_Ds1302WriteTime
  9019  0504  160A  118A  25A9  120A  118A  	line	544
  9020                           ;KEY.c: 544: break;
  9021                           	goto	l4509
  9022  0509  2D36               	line	546
  9023                           	
  9024                           l4505:	
  9025  050A                     ;KEY.c: 545: };KEY.c: 546: }
  9026                           	goto	l4509
  9027  050A  2D36               	line	194
  9028                           	
  9029                           l496:	
  9030  050B                     	
  9031                           l4507:	
  9032  050B                     	bcf	status, 5	;RP0=0, select bank0
  9033  050B  1283               	bcf	status, 6	;RP1=0, select bank0
  9034  050C  1303               	movf	(_cursor_addr),w
  9035  050D  082A               	; Switch size 1, requested type "space"
  9036                           ; Number of cases is 13, Range of values is 0 to 12
  9037                           ; switch strategies available:
  9038                           ; Name         Instructions Cycles
  9039                           ; simple_byte           40    21 (average)
  9040                           ; direct_byte           47     8 (fixed)
  9041                           ; jumptable            260     6 (fixed)
  9042                           ;	Chosen strategy is simple_byte
  9043                           
  9044                           	opt asmopt_push
  9045                           	opt asmopt_off
  9046                           	xorlw	0^0	; case 0
  9047  050E  3A00               	skipnz
  9048  050F  1903               	goto	l4169
  9049  0510  2881               	xorlw	1^0	; case 1
  9050  0511  3A01               	skipnz
  9051  0512  1903               	goto	l4189
  9052  0513  28C2               	xorlw	2^1	; case 2
  9053  0514  3A03               	skipnz
  9054  0515  1903               	goto	l4209
  9055  0516  2903               	xorlw	3^2	; case 3
  9056  0517  3A01               	skipnz
  9057  0518  1903               	goto	l4239
  9058  0519  2966               	xorlw	4^3	; case 4
  9059  051A  3A07               	skipnz
  9060  051B  1903               	goto	l4265
  9061  051C  29C7               	xorlw	5^4	; case 5
  9062  051D  3A01               	skipnz
  9063  051E  1903               	goto	l4295
  9064  051F  2A2C               	xorlw	6^5	; case 6
  9065  0520  3A03               	skipnz
  9066  0521  1903               	goto	l4321
  9067  0522  2A8D               	xorlw	7^6	; case 7
  9068  0523  3A01               	skipnz
  9069  0524  1903               	goto	l4345
  9070  0525  2AD4               	xorlw	8^7	; case 8
  9071  0526  3A0F               	skipnz
  9072  0527  1903               	goto	l4375
  9073  0528  2B37               	xorlw	9^8	; case 9
  9074  0529  3A01               	skipnz
  9075  052A  1903               	goto	l4401
  9076  052B  2B9A               	xorlw	10^9	; case 10
  9077  052C  3A03               	skipnz
  9078  052D  1903               	goto	l4431
  9079  052E  2BFF               	xorlw	11^10	; case 11
  9080  052F  3A01               	skipnz
  9081  0530  1903               	goto	l4453
  9082  0531  2C52               	xorlw	12^11	; case 12
  9083  0532  3A07               	skipnz
  9084  0533  1903               	goto	l4483
  9085  0534  2CB7               	goto	l4509
  9086  0535  2D36               	opt asmopt_pop
  9087                           
  9088                           	line	546
  9089                           	
  9090                           l503:	
  9091  0536                     	line	547
  9092                           	
  9093                           l4509:	
  9094  0536                     ;KEY.c: 547: TimeDataDisplay();
  9095                           	fcall	_TimeDataDisplay
  9096  0536  120A  158A  2612  120A  118A  	line	548
  9097                           ;KEY.c: 548: break;
  9098                           	goto	l701
  9099  053B  2F6C               	line	551
  9100                           ;KEY.c: 549: };KEY.c: 551: case 2:
  9101                           	
  9102                           l632:	
  9103  053C                     	line	553
  9104                           	
  9105                           l4511:	
  9106  053C                     ;KEY.c: 552: {;KEY.c: 553: ClearScreenOnce();
  9107                           	fcall	_ClearScreenOnce
  9108  053C  120A  158A  23BC  120A  118A  	line	554
  9109                           	
  9110                           l4513:	
  9111  0541                     ;KEY.c: 554: Trans_Alarm_bit();
  9112                           	fcall	_Trans_Alarm_bit
  9113  0541  160A  118A  23B5  120A  118A  	line	555
  9114                           	
  9115                           l4515:	
  9116  0546                     ;KEY.c: 555: AlarmDataDisplay();
  9117                           	fcall	_AlarmDataDisplay
  9118  0546  120A  158A  253D  120A  118A  	line	556
  9119                           	
  9120                           l4517:	
  9121  054B                     ;KEY.c: 556: delay_ms(78);
  9122                           	movlw	04Eh
  9123  054B  304E               	movwf	(delay_ms@n)
  9124  054C  00F2               	movlw	0
  9125  054D  3000               	movwf	((delay_ms@n))+1
  9126  054E  00F3               	fcall	_delay_ms
  9127  054F  160A  118A  2554  120A  118A  	line	557
  9128                           	
  9129                           l4519:	
  9130  0554                     ;KEY.c: 557: LCD_write_string(LcdTimeAddr[cursor_addr + 7], 2, "_");
  9131                           	movlw	low(02h)
  9132  0554  3002               	bcf	status, 5	;RP0=0, select bank0
  9133  0555  1283               	bcf	status, 6	;RP1=0, select bank0
  9134  0556  1303               	movwf	(??_ModeSwitch+0)+0
  9135  0557  00E7               	movf	(??_ModeSwitch+0)+0,w
  9136  0558  0867               	movwf	(LCD_write_string@Y)
  9137  0559  00E0               	movlw	low(((STR_20)|8000h))
  9138  055A  306E               	movwf	(LCD_write_string@s)
  9139  055B  00E1               	movlw	high(((STR_20)|8000h))
  9140  055C  308B               	movwf	((LCD_write_string@s))+1
  9141  055D  00E2               	movf	(_cursor_addr),w
  9142  055E  082A               	addlw	07h
  9143  055F  3E07               	addlw	low(_LcdTimeAddr|((0x0)<<8))&0ffh
  9144  0560  3E43               	movwf	fsr0
  9145  0561  0084               	bcf	status, 7	;select IRP bank0
  9146  0562  1383               	movf	indf,w
  9147  0563  0800               	fcall	_LCD_write_string
  9148  0564  160A  118A  2708  120A  118A  	line	558
  9149                           ;KEY.c: 558: delay_ms(98);
  9150                           	movlw	062h
  9151  0569  3062               	movwf	(delay_ms@n)
  9152  056A  00F2               	movlw	0
  9153  056B  3000               	movwf	((delay_ms@n))+1
  9154  056C  00F3               	fcall	_delay_ms
  9155  056D  160A  118A  2554  120A  118A  	line	559
  9156                           ;KEY.c: 559: switch (cursor_addr + 7) {
  9157                           	goto	l4683
  9158  0572  2F2D               	line	560
  9159                           ;KEY.c: 560: case 7:
  9160                           	
  9161                           l634:	
  9162  0573                     	line	561
  9163                           	
  9164                           l4521:	
  9165  0573                     ;KEY.c: 561: if (key2pushflag == 1) {
  9166                           		decf	((_key2pushflag)),w
  9167  0573  037B               	btfss	status,2
  9168  0574  1D03               	goto	u6201
  9169  0575  2D77               	goto	u6200
  9170  0576  2D78               u6201:
  9171  0577                     	goto	l4535
  9172  0577  2D9A               u6200:
  9173  0578                     	line	562
  9174                           	
  9175                           l4523:	
  9176  0578                     ;KEY.c: 562: aHOUR_ten++;
  9177                           	movlw	low(01h)
  9178  0578  3001               	bcf	status, 5	;RP0=0, select bank0
  9179  0579  1283               	bcf	status, 6	;RP1=0, select bank0
  9180  057A  1303               	movwf	(??_ModeSwitch+0)+0
  9181  057B  00E7               	movf	(??_ModeSwitch+0)+0,w
  9182  057C  0867               	addwf	(_aHOUR_ten),f
  9183  057D  07BE               	line	563
  9184                           	
  9185                           l4525:	
  9186  057E                     ;KEY.c: 563: if (aHOUR_unit > 4) {
  9187                           	movf	(_aHOUR_unit),w
  9188  057E  083D               	xorlw	80h
  9189  057F  3A80               	addlw	-((05h)^80h)
  9190  0580  3E7B               	skipc
  9191  0581  1C03               	goto	u6211
  9192  0582  2D84               	goto	u6210
  9193  0583  2D85               u6211:
  9194  0584                     	goto	l4531
  9195  0584  2D8F               u6210:
  9196  0585                     	line	564
  9197                           	
  9198                           l4527:	
  9199  0585                     ;KEY.c: 564: if (aHOUR_ten > 1) {
  9200                           	movf	(_aHOUR_ten),w
  9201  0585  083E               	xorlw	80h
  9202  0586  3A80               	addlw	-((02h)^80h)
  9203  0587  3E7E               	skipc
  9204  0588  1C03               	goto	u6221
  9205  0589  2D8B               	goto	u6220
  9206  058A  2D8C               u6221:
  9207  058B                     	goto	l638
  9208  058B  2D98               u6220:
  9209  058C                     	line	565
  9210                           	
  9211                           l4529:	
  9212  058C                     ;KEY.c: 565: aHOUR_ten = 0;
  9213                           	clrf	(_aHOUR_ten)
  9214  058C  01BE               	goto	l638
  9215  058D  2D98               	line	566
  9216                           	
  9217                           l637:	
  9218  058E                     	line	567
  9219                           ;KEY.c: 566: };KEY.c: 567: } else {
  9220                           	goto	l638
  9221  058E  2D98               	
  9222                           l636:	
  9223  058F                     	line	568
  9224                           	
  9225                           l4531:	
  9226  058F                     ;KEY.c: 568: if (aHOUR_ten > 2) {
  9227                           	movf	(_aHOUR_ten),w
  9228  058F  083E               	xorlw	80h
  9229  0590  3A80               	addlw	-((03h)^80h)
  9230  0591  3E7D               	skipc
  9231  0592  1C03               	goto	u6231
  9232  0593  2D95               	goto	u6230
  9233  0594  2D96               u6231:
  9234  0595                     	goto	l638
  9235  0595  2D98               u6230:
  9236  0596                     	line	569
  9237                           	
  9238                           l4533:	
  9239  0596                     ;KEY.c: 569: aHOUR_ten = 0;
  9240                           	clrf	(_aHOUR_ten)
  9241  0596  01BE               	goto	l638
  9242  0597  2D98               	line	570
  9243                           	
  9244                           l639:	
  9245  0598                     	line	571
  9246                           	
  9247                           l638:	
  9248  0598                     	line	572
  9249                           ;KEY.c: 570: };KEY.c: 571: };KEY.c: 572: key2pushflag = 0;
  9250                           	clrf	(_key2pushflag)
  9251  0598  01FB               	line	573
  9252                           ;KEY.c: 573: } else if (key3pushflag == 1) {
  9253                           	goto	l4549
  9254  0599  2DC1               	
  9255                           l635:	
  9256  059A                     	
  9257                           l4535:	
  9258  059A                     	bcf	status, 5	;RP0=0, select bank0
  9259  059A  1283               	bcf	status, 6	;RP1=0, select bank0
  9260  059B  1303               		decf	((_key3pushflag)),w
  9261  059C  0329               	btfss	status,2
  9262  059D  1D03               	goto	u6241
  9263  059E  2DA0               	goto	u6240
  9264  059F  2DA1               u6241:
  9265  05A0                     	goto	l4549
  9266  05A0  2DC1               u6240:
  9267  05A1                     	line	574
  9268                           	
  9269                           l4537:	
  9270  05A1                     ;KEY.c: 574: aHOUR_ten--;
  9271                           	movlw	low(-1)
  9272  05A1  30FF               	movwf	(??_ModeSwitch+0)+0
  9273  05A2  00E7               	movf	(??_ModeSwitch+0)+0,w
  9274  05A3  0867               	addwf	(_aHOUR_ten),f
  9275  05A4  07BE               	line	575
  9276                           	
  9277                           l4539:	
  9278  05A5                     ;KEY.c: 575: if (aHOUR_unit > 4) {
  9279                           	movf	(_aHOUR_unit),w
  9280  05A5  083D               	xorlw	80h
  9281  05A6  3A80               	addlw	-((05h)^80h)
  9282  05A7  3E7B               	skipc
  9283  05A8  1C03               	goto	u6251
  9284  05A9  2DAB               	goto	u6250
  9285  05AA  2DAC               u6251:
  9286  05AB                     	goto	l642
  9287  05AB  2DB4               u6250:
  9288  05AC                     	line	576
  9289                           	
  9290                           l4541:	
  9291  05AC                     ;KEY.c: 576: if (aHOUR_ten < 0) {
  9292                           	btfss	(_aHOUR_ten),7
  9293  05AC  1FBE               	goto	u6261
  9294  05AD  2DAF               	goto	u6260
  9295  05AE  2DB0               u6261:
  9296  05AF                     	goto	l4547
  9297  05AF  2DBE               u6260:
  9298  05B0                     	line	577
  9299                           	
  9300                           l4543:	
  9301  05B0                     ;KEY.c: 577: aHOUR_ten = 1;
  9302                           	clrf	(_aHOUR_ten)
  9303  05B0  01BE               	incf	(_aHOUR_ten),f
  9304  05B1  0ABE               	goto	l4547
  9305  05B2  2DBE               	line	578
  9306                           	
  9307                           l643:	
  9308  05B3                     	line	579
  9309                           ;KEY.c: 578: };KEY.c: 579: } else {
  9310                           	goto	l4547
  9311  05B3  2DBE               	
  9312                           l642:	
  9313  05B4                     	line	580
  9314                           ;KEY.c: 580: if (aHOUR_ten < 0) {
  9315                           	btfss	(_aHOUR_ten),7
  9316  05B4  1FBE               	goto	u6271
  9317  05B5  2DB7               	goto	u6270
  9318  05B6  2DB8               u6271:
  9319  05B7                     	goto	l4547
  9320  05B7  2DBE               u6270:
  9321  05B8                     	line	581
  9322                           	
  9323                           l4545:	
  9324  05B8                     ;KEY.c: 581: aHOUR_ten = 2;
  9325                           	movlw	low(02h)
  9326  05B8  3002               	movwf	(??_ModeSwitch+0)+0
  9327  05B9  00E7               	movf	(??_ModeSwitch+0)+0,w
  9328  05BA  0867               	movwf	(_aHOUR_ten)
  9329  05BB  00BE               	goto	l4547
  9330  05BC  2DBE               	line	582
  9331                           	
  9332                           l645:	
  9333  05BD                     	goto	l4547
  9334  05BD  2DBE               	line	583
  9335                           	
  9336                           l644:	
  9337  05BE                     	line	585
  9338                           	
  9339                           l4547:	
  9340  05BE                     ;KEY.c: 582: };KEY.c: 583: };KEY.c: 585: key3pushflag = 0;
  9341                           	clrf	(_key3pushflag)
  9342  05BE  01A9               	goto	l4549
  9343  05BF  2DC1               	line	586
  9344                           	
  9345                           l641:	
  9346  05C0                     	goto	l4549
  9347  05C0  2DC1               	line	587
  9348                           	
  9349                           l640:	
  9350  05C1                     	
  9351                           l4549:	
  9352  05C1                     ;KEY.c: 586: };KEY.c: 587: Alarm_TIME[5] = aHOUR_ten;
  9353                           	movf	(_aHOUR_ten),w
  9354  05C1  083E               	movwf	(??_ModeSwitch+0)+0
  9355  05C2  00E7               	movf	(??_ModeSwitch+0)+0,w
  9356  05C3  0867               	movwf	0+(_Alarm_TIME)+05h
  9357  05C4  00DC               	line	588
  9358                           ;KEY.c: 588: break;
  9359                           	goto	l4685
  9360  05C5  2F53               	line	589
  9361                           ;KEY.c: 589: case 8:
  9362                           	
  9363                           l647:	
  9364  05C6                     	line	590
  9365                           	
  9366                           l4551:	
  9367  05C6                     ;KEY.c: 590: if (key2pushflag == 1) {
  9368                           		decf	((_key2pushflag)),w
  9369  05C6  037B               	btfss	status,2
  9370  05C7  1D03               	goto	u6281
  9371  05C8  2DCA               	goto	u6280
  9372  05C9  2DCB               u6281:
  9373  05CA                     	goto	l4563
  9374  05CA  2DEA               u6280:
  9375  05CB                     	line	591
  9376                           	
  9377                           l4553:	
  9378  05CB                     ;KEY.c: 591: aHOUR_unit++;
  9379                           	movlw	low(01h)
  9380  05CB  3001               	movwf	(??_ModeSwitch+0)+0
  9381  05CC  00E7               	movf	(??_ModeSwitch+0)+0,w
  9382  05CD  0867               	addwf	(_aHOUR_unit),f
  9383  05CE  07BD               	line	592
  9384                           ;KEY.c: 592: if (aHOUR_ten == 2) {
  9385                           		movlw	2
  9386  05CF  3002               	xorwf	((_aHOUR_ten)),w
  9387  05D0  063E               	btfss	status,2
  9388  05D1  1D03               	goto	u6291
  9389  05D2  2DD4               	goto	u6290
  9390  05D3  2DD5               u6291:
  9391  05D4                     	goto	l4559
  9392  05D4  2DDF               u6290:
  9393  05D5                     	line	593
  9394                           	
  9395                           l4555:	
  9396  05D5                     ;KEY.c: 593: if (aHOUR_unit > 4) {
  9397                           	movf	(_aHOUR_unit),w
  9398  05D5  083D               	xorlw	80h
  9399  05D6  3A80               	addlw	-((05h)^80h)
  9400  05D7  3E7B               	skipc
  9401  05D8  1C03               	goto	u6301
  9402  05D9  2DDB               	goto	u6300
  9403  05DA  2DDC               u6301:
  9404  05DB                     	goto	l651
  9405  05DB  2DE8               u6300:
  9406  05DC                     	line	594
  9407                           	
  9408                           l4557:	
  9409  05DC                     ;KEY.c: 594: aHOUR_unit = 0;
  9410                           	clrf	(_aHOUR_unit)
  9411  05DC  01BD               	goto	l651
  9412  05DD  2DE8               	line	595
  9413                           	
  9414                           l650:	
  9415  05DE                     	line	596
  9416                           ;KEY.c: 595: };KEY.c: 596: } else {
  9417                           	goto	l651
  9418  05DE  2DE8               	
  9419                           l649:	
  9420  05DF                     	line	597
  9421                           	
  9422                           l4559:	
  9423  05DF                     ;KEY.c: 597: if (aHOUR_unit > 9) {
  9424                           	movf	(_aHOUR_unit),w
  9425  05DF  083D               	xorlw	80h
  9426  05E0  3A80               	addlw	-((0Ah)^80h)
  9427  05E1  3E76               	skipc
  9428  05E2  1C03               	goto	u6311
  9429  05E3  2DE5               	goto	u6310
  9430  05E4  2DE6               u6311:
  9431  05E5                     	goto	l651
  9432  05E5  2DE8               u6310:
  9433  05E6                     	line	598
  9434                           	
  9435                           l4561:	
  9436  05E6                     ;KEY.c: 598: aHOUR_unit = 0;
  9437                           	clrf	(_aHOUR_unit)
  9438  05E6  01BD               	goto	l651
  9439  05E7  2DE8               	line	599
  9440                           	
  9441                           l652:	
  9442  05E8                     	line	600
  9443                           	
  9444                           l651:	
  9445  05E8                     	line	601
  9446                           ;KEY.c: 599: };KEY.c: 600: };KEY.c: 601: key2pushflag = 0;
  9447                           	clrf	(_key2pushflag)
  9448  05E8  01FB               	line	602
  9449                           ;KEY.c: 602: } else if (key3pushflag == 1) {
  9450                           	goto	l4575
  9451  05E9  2E10               	
  9452                           l648:	
  9453  05EA                     	
  9454                           l4563:	
  9455  05EA                     		decf	((_key3pushflag)),w
  9456  05EA  0329               	btfss	status,2
  9457  05EB  1D03               	goto	u6321
  9458  05EC  2DEE               	goto	u6320
  9459  05ED  2DEF               u6321:
  9460  05EE                     	goto	l4575
  9461  05EE  2E10               u6320:
  9462  05EF                     	line	603
  9463                           	
  9464                           l4565:	
  9465  05EF                     ;KEY.c: 603: aHOUR_unit--;
  9466                           	movlw	low(-1)
  9467  05EF  30FF               	movwf	(??_ModeSwitch+0)+0
  9468  05F0  00E7               	movf	(??_ModeSwitch+0)+0,w
  9469  05F1  0867               	addwf	(_aHOUR_unit),f
  9470  05F2  07BD               	line	604
  9471                           ;KEY.c: 604: if (aHOUR_ten == 2) {
  9472                           		movlw	2
  9473  05F3  3002               	xorwf	((_aHOUR_ten)),w
  9474  05F4  063E               	btfss	status,2
  9475  05F5  1D03               	goto	u6331
  9476  05F6  2DF8               	goto	u6330
  9477  05F7  2DF9               u6331:
  9478  05F8                     	goto	l655
  9479  05F8  2E03               u6330:
  9480  05F9                     	line	605
  9481                           	
  9482                           l4567:	
  9483  05F9                     ;KEY.c: 605: if (aHOUR_unit < 0) {
  9484                           	btfss	(_aHOUR_unit),7
  9485  05F9  1FBD               	goto	u6341
  9486  05FA  2DFC               	goto	u6340
  9487  05FB  2DFD               u6341:
  9488  05FC                     	goto	l4573
  9489  05FC  2E0D               u6340:
  9490  05FD                     	line	606
  9491                           	
  9492                           l4569:	
  9493  05FD                     ;KEY.c: 606: aHOUR_unit = 4;
  9494                           	movlw	low(04h)
  9495  05FD  3004               	movwf	(??_ModeSwitch+0)+0
  9496  05FE  00E7               	movf	(??_ModeSwitch+0)+0,w
  9497  05FF  0867               	movwf	(_aHOUR_unit)
  9498  0600  00BD               	goto	l4573
  9499  0601  2E0D               	line	607
  9500                           	
  9501                           l656:	
  9502  0602                     	line	608
  9503                           ;KEY.c: 607: };KEY.c: 608: } else {
  9504                           	goto	l4573
  9505  0602  2E0D               	
  9506                           l655:	
  9507  0603                     	line	609
  9508                           ;KEY.c: 609: if (aHOUR_unit < 0) {
  9509                           	btfss	(_aHOUR_unit),7
  9510  0603  1FBD               	goto	u6351
  9511  0604  2E06               	goto	u6350
  9512  0605  2E07               u6351:
  9513  0606                     	goto	l4573
  9514  0606  2E0D               u6350:
  9515  0607                     	line	610
  9516                           	
  9517                           l4571:	
  9518  0607                     ;KEY.c: 610: aHOUR_unit = 9;
  9519                           	movlw	low(09h)
  9520  0607  3009               	movwf	(??_ModeSwitch+0)+0
  9521  0608  00E7               	movf	(??_ModeSwitch+0)+0,w
  9522  0609  0867               	movwf	(_aHOUR_unit)
  9523  060A  00BD               	goto	l4573
  9524  060B  2E0D               	line	611
  9525                           	
  9526                           l658:	
  9527  060C                     	goto	l4573
  9528  060C  2E0D               	line	612
  9529                           	
  9530                           l657:	
  9531  060D                     	line	613
  9532                           	
  9533                           l4573:	
  9534  060D                     ;KEY.c: 611: };KEY.c: 612: };KEY.c: 613: key3pushflag = 0;
  9535                           	clrf	(_key3pushflag)
  9536  060D  01A9               	goto	l4575
  9537  060E  2E10               	line	614
  9538                           	
  9539                           l654:	
  9540  060F                     	goto	l4575
  9541  060F  2E10               	line	615
  9542                           	
  9543                           l653:	
  9544  0610                     	
  9545                           l4575:	
  9546  0610                     ;KEY.c: 614: };KEY.c: 615: Alarm_TIME[4] = aHOUR_unit;
  9547                           	movf	(_aHOUR_unit),w
  9548  0610  083D               	movwf	(??_ModeSwitch+0)+0
  9549  0611  00E7               	movf	(??_ModeSwitch+0)+0,w
  9550  0612  0867               	movwf	0+(_Alarm_TIME)+04h
  9551  0613  00DB               	line	616
  9552                           ;KEY.c: 616: break;
  9553                           	goto	l4685
  9554  0614  2F53               	line	617
  9555                           ;KEY.c: 617: case 9:
  9556                           	
  9557                           l659:	
  9558  0615                     	line	618
  9559                           	
  9560                           l4577:	
  9561  0615                     ;KEY.c: 618: if (key2pushflag == 1) {
  9562                           		decf	((_key2pushflag)),w
  9563  0615  037B               	btfss	status,2
  9564  0616  1D03               	goto	u6361
  9565  0617  2E19               	goto	u6360
  9566  0618  2E1A               u6361:
  9567  0619                     	goto	l4591
  9568  0619  2E3A               u6360:
  9569  061A                     	line	619
  9570                           	
  9571                           l4579:	
  9572  061A                     ;KEY.c: 619: aMINUTE_ten++;
  9573                           	movlw	low(01h)
  9574  061A  3001               	movwf	(??_ModeSwitch+0)+0
  9575  061B  00E7               	movf	(??_ModeSwitch+0)+0,w
  9576  061C  0867               	addwf	(_aMINUTE_ten),f
  9577  061D  07BC               	line	620
  9578                           	
  9579                           l4581:	
  9580  061E                     ;KEY.c: 620: if (aMINUTE_unit > 0) {
  9581                           	movf	(_aMINUTE_unit),w
  9582  061E  083B               	xorlw	80h
  9583  061F  3A80               	addlw	-((01h)^80h)
  9584  0620  3E7F               	skipc
  9585  0621  1C03               	goto	u6371
  9586  0622  2E24               	goto	u6370
  9587  0623  2E25               u6371:
  9588  0624                     	goto	l4587
  9589  0624  2E2F               u6370:
  9590  0625                     	line	621
  9591                           	
  9592                           l4583:	
  9593  0625                     ;KEY.c: 621: if (aMINUTE_ten > 5) {
  9594                           	movf	(_aMINUTE_ten),w
  9595  0625  083C               	xorlw	80h
  9596  0626  3A80               	addlw	-((06h)^80h)
  9597  0627  3E7A               	skipc
  9598  0628  1C03               	goto	u6381
  9599  0629  2E2B               	goto	u6380
  9600  062A  2E2C               u6381:
  9601  062B                     	goto	l663
  9602  062B  2E38               u6380:
  9603  062C                     	line	622
  9604                           	
  9605                           l4585:	
  9606  062C                     ;KEY.c: 622: aMINUTE_ten = 0;
  9607                           	clrf	(_aMINUTE_ten)
  9608  062C  01BC               	goto	l663
  9609  062D  2E38               	line	623
  9610                           	
  9611                           l662:	
  9612  062E                     	line	624
  9613                           ;KEY.c: 623: };KEY.c: 624: } else {
  9614                           	goto	l663
  9615  062E  2E38               	
  9616                           l661:	
  9617  062F                     	line	625
  9618                           	
  9619                           l4587:	
  9620  062F                     ;KEY.c: 625: if (aMINUTE_ten > 6) {
  9621                           	movf	(_aMINUTE_ten),w
  9622  062F  083C               	xorlw	80h
  9623  0630  3A80               	addlw	-((07h)^80h)
  9624  0631  3E79               	skipc
  9625  0632  1C03               	goto	u6391
  9626  0633  2E35               	goto	u6390
  9627  0634  2E36               u6391:
  9628  0635                     	goto	l663
  9629  0635  2E38               u6390:
  9630  0636                     	line	626
  9631                           	
  9632                           l4589:	
  9633  0636                     ;KEY.c: 626: aMINUTE_ten = 0;
  9634                           	clrf	(_aMINUTE_ten)
  9635  0636  01BC               	goto	l663
  9636  0637  2E38               	line	627
  9637                           	
  9638                           l664:	
  9639  0638                     	line	628
  9640                           	
  9641                           l663:	
  9642  0638                     	line	629
  9643                           ;KEY.c: 627: };KEY.c: 628: };KEY.c: 629: key2pushflag = 0;
  9644                           	clrf	(_key2pushflag)
  9645  0638  01FB               	line	630
  9646                           ;KEY.c: 630: } else if (key3pushflag == 1) {
  9647                           	goto	l4605
  9648  0639  2E61               	
  9649                           l660:	
  9650  063A                     	
  9651                           l4591:	
  9652  063A                     		decf	((_key3pushflag)),w
  9653  063A  0329               	btfss	status,2
  9654  063B  1D03               	goto	u6401
  9655  063C  2E3E               	goto	u6400
  9656  063D  2E3F               u6401:
  9657  063E                     	goto	l4605
  9658  063E  2E61               u6400:
  9659  063F                     	line	631
  9660                           	
  9661                           l4593:	
  9662  063F                     ;KEY.c: 631: aMINUTE_ten--;
  9663                           	movlw	low(-1)
  9664  063F  30FF               	movwf	(??_ModeSwitch+0)+0
  9665  0640  00E7               	movf	(??_ModeSwitch+0)+0,w
  9666  0641  0867               	addwf	(_aMINUTE_ten),f
  9667  0642  07BC               	line	632
  9668                           	
  9669                           l4595:	
  9670  0643                     ;KEY.c: 632: if (aMINUTE_unit > 0) {
  9671                           	movf	(_aMINUTE_unit),w
  9672  0643  083B               	xorlw	80h
  9673  0644  3A80               	addlw	-((01h)^80h)
  9674  0645  3E7F               	skipc
  9675  0646  1C03               	goto	u6411
  9676  0647  2E49               	goto	u6410
  9677  0648  2E4A               u6411:
  9678  0649                     	goto	l667
  9679  0649  2E54               u6410:
  9680  064A                     	line	633
  9681                           	
  9682                           l4597:	
  9683  064A                     ;KEY.c: 633: if (aMINUTE_ten < 0) {
  9684                           	btfss	(_aMINUTE_ten),7
  9685  064A  1FBC               	goto	u6421
  9686  064B  2E4D               	goto	u6420
  9687  064C  2E4E               u6421:
  9688  064D                     	goto	l4603
  9689  064D  2E5E               u6420:
  9690  064E                     	line	634
  9691                           	
  9692                           l4599:	
  9693  064E                     ;KEY.c: 634: aMINUTE_ten = 5;
  9694                           	movlw	low(05h)
  9695  064E  3005               	movwf	(??_ModeSwitch+0)+0
  9696  064F  00E7               	movf	(??_ModeSwitch+0)+0,w
  9697  0650  0867               	movwf	(_aMINUTE_ten)
  9698  0651  00BC               	goto	l4603
  9699  0652  2E5E               	line	635
  9700                           	
  9701                           l668:	
  9702  0653                     	line	636
  9703                           ;KEY.c: 635: };KEY.c: 636: } else {
  9704                           	goto	l4603
  9705  0653  2E5E               	
  9706                           l667:	
  9707  0654                     	line	637
  9708                           ;KEY.c: 637: if (aMINUTE_ten < 0) {
  9709                           	btfss	(_aMINUTE_ten),7
  9710  0654  1FBC               	goto	u6431
  9711  0655  2E57               	goto	u6430
  9712  0656  2E58               u6431:
  9713  0657                     	goto	l4603
  9714  0657  2E5E               u6430:
  9715  0658                     	line	638
  9716                           	
  9717                           l4601:	
  9718  0658                     ;KEY.c: 638: aMINUTE_ten = 6;
  9719                           	movlw	low(06h)
  9720  0658  3006               	movwf	(??_ModeSwitch+0)+0
  9721  0659  00E7               	movf	(??_ModeSwitch+0)+0,w
  9722  065A  0867               	movwf	(_aMINUTE_ten)
  9723  065B  00BC               	goto	l4603
  9724  065C  2E5E               	line	639
  9725                           	
  9726                           l670:	
  9727  065D                     	goto	l4603
  9728  065D  2E5E               	line	640
  9729                           	
  9730                           l669:	
  9731  065E                     	line	641
  9732                           	
  9733                           l4603:	
  9734  065E                     ;KEY.c: 639: };KEY.c: 640: };KEY.c: 641: key3pushflag = 0;
  9735                           	clrf	(_key3pushflag)
  9736  065E  01A9               	goto	l4605
  9737  065F  2E61               	line	642
  9738                           	
  9739                           l666:	
  9740  0660                     	goto	l4605
  9741  0660  2E61               	line	643
  9742                           	
  9743                           l665:	
  9744  0661                     	
  9745                           l4605:	
  9746  0661                     ;KEY.c: 642: };KEY.c: 643: Alarm_TIME[3] = aMINUTE_ten;
  9747                           	movf	(_aMINUTE_ten),w
  9748  0661  083C               	movwf	(??_ModeSwitch+0)+0
  9749  0662  00E7               	movf	(??_ModeSwitch+0)+0,w
  9750  0663  0867               	movwf	0+(_Alarm_TIME)+03h
  9751  0664  00DA               	line	644
  9752                           ;KEY.c: 644: break;
  9753                           	goto	l4685
  9754  0665  2F53               	line	646
  9755                           ;KEY.c: 646: case 10:
  9756                           	
  9757                           l671:	
  9758  0666                     	line	647
  9759                           	
  9760                           l4607:	
  9761  0666                     ;KEY.c: 647: if (key2pushflag == 1) {
  9762                           		decf	((_key2pushflag)),w
  9763  0666  037B               	btfss	status,2
  9764  0667  1D03               	goto	u6441
  9765  0668  2E6A               	goto	u6440
  9766  0669  2E6B               u6441:
  9767  066A                     	goto	l4617
  9768  066A  2E82               u6440:
  9769  066B                     	line	648
  9770                           	
  9771                           l4609:	
  9772  066B                     ;KEY.c: 648: aMINUTE_unit++;
  9773                           	movlw	low(01h)
  9774  066B  3001               	movwf	(??_ModeSwitch+0)+0
  9775  066C  00E7               	movf	(??_ModeSwitch+0)+0,w
  9776  066D  0867               	addwf	(_aMINUTE_unit),f
  9777  066E  07BB               	line	649
  9778                           ;KEY.c: 649: if (aMINUTE_ten == 6) {
  9779                           		movlw	6
  9780  066F  3006               	xorwf	((_aMINUTE_ten)),w
  9781  0670  063C               	btfss	status,2
  9782  0671  1D03               	goto	u6451
  9783  0672  2E74               	goto	u6450
  9784  0673  2E75               u6451:
  9785  0674                     	goto	l4613
  9786  0674  2E77               u6450:
  9787  0675                     	line	650
  9788                           	
  9789                           l4611:	
  9790  0675                     ;KEY.c: 650: aMINUTE_unit = 0;
  9791                           	clrf	(_aMINUTE_unit)
  9792  0675  01BB               	line	651
  9793                           ;KEY.c: 651: } else {
  9794                           	goto	l674
  9795  0676  2E80               	
  9796                           l673:	
  9797  0677                     	line	652
  9798                           	
  9799                           l4613:	
  9800  0677                     ;KEY.c: 652: if (aMINUTE_unit > 9) {
  9801                           	movf	(_aMINUTE_unit),w
  9802  0677  083B               	xorlw	80h
  9803  0678  3A80               	addlw	-((0Ah)^80h)
  9804  0679  3E76               	skipc
  9805  067A  1C03               	goto	u6461
  9806  067B  2E7D               	goto	u6460
  9807  067C  2E7E               u6461:
  9808  067D                     	goto	l674
  9809  067D  2E80               u6460:
  9810  067E                     	line	653
  9811                           	
  9812                           l4615:	
  9813  067E                     ;KEY.c: 653: aMINUTE_unit = 0;
  9814                           	clrf	(_aMINUTE_unit)
  9815  067E  01BB               	goto	l674
  9816  067F  2E80               	line	654
  9817                           	
  9818                           l675:	
  9819  0680                     	line	655
  9820                           	
  9821                           l674:	
  9822  0680                     	line	656
  9823                           ;KEY.c: 654: };KEY.c: 655: };KEY.c: 656: key2pushflag = 0;
  9824                           	clrf	(_key2pushflag)
  9825  0680  01FB               	line	657
  9826                           ;KEY.c: 657: } else if (key3pushflag == 1) {
  9827                           	goto	l4627
  9828  0681  2EA0               	
  9829                           l672:	
  9830  0682                     	
  9831                           l4617:	
  9832  0682                     		decf	((_key3pushflag)),w
  9833  0682  0329               	btfss	status,2
  9834  0683  1D03               	goto	u6471
  9835  0684  2E86               	goto	u6470
  9836  0685  2E87               u6471:
  9837  0686                     	goto	l4627
  9838  0686  2EA0               u6470:
  9839  0687                     	line	658
  9840                           	
  9841                           l4619:	
  9842  0687                     ;KEY.c: 658: aMINUTE_unit--;
  9843                           	movlw	low(-1)
  9844  0687  30FF               	movwf	(??_ModeSwitch+0)+0
  9845  0688  00E7               	movf	(??_ModeSwitch+0)+0,w
  9846  0689  0867               	addwf	(_aMINUTE_unit),f
  9847  068A  07BB               	line	659
  9848                           ;KEY.c: 659: if (aMINUTE_ten == 6) {
  9849                           		movlw	6
  9850  068B  3006               	xorwf	((_aMINUTE_ten)),w
  9851  068C  063C               	btfss	status,2
  9852  068D  1D03               	goto	u6481
  9853  068E  2E90               	goto	u6480
  9854  068F  2E91               u6481:
  9855  0690                     	goto	l678
  9856  0690  2E93               u6480:
  9857  0691                     	line	660
  9858                           	
  9859                           l4621:	
  9860  0691                     ;KEY.c: 660: aMINUTE_unit = 0;
  9861                           	clrf	(_aMINUTE_unit)
  9862  0691  01BB               	line	661
  9863                           ;KEY.c: 661: } else {
  9864                           	goto	l4625
  9865  0692  2E9D               	
  9866                           l678:	
  9867  0693                     	line	662
  9868                           ;KEY.c: 662: if (aMINUTE_unit < 0) {
  9869                           	btfss	(_aMINUTE_unit),7
  9870  0693  1FBB               	goto	u6491
  9871  0694  2E96               	goto	u6490
  9872  0695  2E97               u6491:
  9873  0696                     	goto	l4625
  9874  0696  2E9D               u6490:
  9875  0697                     	line	663
  9876                           	
  9877                           l4623:	
  9878  0697                     ;KEY.c: 663: aMINUTE_unit = 9;
  9879                           	movlw	low(09h)
  9880  0697  3009               	movwf	(??_ModeSwitch+0)+0
  9881  0698  00E7               	movf	(??_ModeSwitch+0)+0,w
  9882  0699  0867               	movwf	(_aMINUTE_unit)
  9883  069A  00BB               	goto	l4625
  9884  069B  2E9D               	line	664
  9885                           	
  9886                           l680:	
  9887  069C                     	goto	l4625
  9888  069C  2E9D               	line	665
  9889                           	
  9890                           l679:	
  9891  069D                     	line	667
  9892                           	
  9893                           l4625:	
  9894  069D                     ;KEY.c: 664: };KEY.c: 665: };KEY.c: 667: key3pushflag = 0;
  9895                           	clrf	(_key3pushflag)
  9896  069D  01A9               	goto	l4627
  9897  069E  2EA0               	line	668
  9898                           	
  9899                           l677:	
  9900  069F                     	goto	l4627
  9901  069F  2EA0               	line	669
  9902                           	
  9903                           l676:	
  9904  06A0                     	
  9905                           l4627:	
  9906  06A0                     ;KEY.c: 668: };KEY.c: 669: Alarm_TIME[2] = aMINUTE_unit;
  9907                           	movf	(_aMINUTE_unit),w
  9908  06A0  083B               	movwf	(??_ModeSwitch+0)+0
  9909  06A1  00E7               	movf	(??_ModeSwitch+0)+0,w
  9910  06A2  0867               	movwf	0+(_Alarm_TIME)+02h
  9911  06A3  00D9               	line	670
  9912                           ;KEY.c: 670: break;
  9913                           	goto	l4685
  9914  06A4  2F53               	line	671
  9915                           ;KEY.c: 671: case 11:
  9916                           	
  9917                           l681:	
  9918  06A5                     	line	672
  9919                           	
  9920                           l4629:	
  9921  06A5                     ;KEY.c: 672: if (key2pushflag == 1) {
  9922                           		decf	((_key2pushflag)),w
  9923  06A5  037B               	btfss	status,2
  9924  06A6  1D03               	goto	u6501
  9925  06A7  2EA9               	goto	u6500
  9926  06A8  2EAA               u6501:
  9927  06A9                     	goto	l4643
  9928  06A9  2ECA               u6500:
  9929  06AA                     	line	673
  9930                           	
  9931                           l4631:	
  9932  06AA                     ;KEY.c: 673: aSECOND_ten++;
  9933                           	movlw	low(01h)
  9934  06AA  3001               	movwf	(??_ModeSwitch+0)+0
  9935  06AB  00E7               	movf	(??_ModeSwitch+0)+0,w
  9936  06AC  0867               	addwf	(_aSECOND_ten),f
  9937  06AD  07BA               	line	674
  9938                           	
  9939                           l4633:	
  9940  06AE                     ;KEY.c: 674: if (aSECOND_unit > 0) {
  9941                           	movf	(_aSECOND_unit),w
  9942  06AE  0839               	xorlw	80h
  9943  06AF  3A80               	addlw	-((01h)^80h)
  9944  06B0  3E7F               	skipc
  9945  06B1  1C03               	goto	u6511
  9946  06B2  2EB4               	goto	u6510
  9947  06B3  2EB5               u6511:
  9948  06B4                     	goto	l4639
  9949  06B4  2EBF               u6510:
  9950  06B5                     	line	675
  9951                           	
  9952                           l4635:	
  9953  06B5                     ;KEY.c: 675: if (aSECOND_ten > 5) {
  9954                           	movf	(_aSECOND_ten),w
  9955  06B5  083A               	xorlw	80h
  9956  06B6  3A80               	addlw	-((06h)^80h)
  9957  06B7  3E7A               	skipc
  9958  06B8  1C03               	goto	u6521
  9959  06B9  2EBB               	goto	u6520
  9960  06BA  2EBC               u6521:
  9961  06BB                     	goto	l685
  9962  06BB  2EC8               u6520:
  9963  06BC                     	line	676
  9964                           	
  9965                           l4637:	
  9966  06BC                     ;KEY.c: 676: aSECOND_ten = 0;
  9967                           	clrf	(_aSECOND_ten)
  9968  06BC  01BA               	goto	l685
  9969  06BD  2EC8               	line	677
  9970                           	
  9971                           l684:	
  9972  06BE                     	line	678
  9973                           ;KEY.c: 677: };KEY.c: 678: } else {
  9974                           	goto	l685
  9975  06BE  2EC8               	
  9976                           l683:	
  9977  06BF                     	line	679
  9978                           	
  9979                           l4639:	
  9980  06BF                     ;KEY.c: 679: if (aSECOND_ten > 6) {
  9981                           	movf	(_aSECOND_ten),w
  9982  06BF  083A               	xorlw	80h
  9983  06C0  3A80               	addlw	-((07h)^80h)
  9984  06C1  3E79               	skipc
  9985  06C2  1C03               	goto	u6531
  9986  06C3  2EC5               	goto	u6530
  9987  06C4  2EC6               u6531:
  9988  06C5                     	goto	l685
  9989  06C5  2EC8               u6530:
  9990  06C6                     	line	680
  9991                           	
  9992                           l4641:	
  9993  06C6                     ;KEY.c: 680: aSECOND_ten = 0;
  9994                           	clrf	(_aSECOND_ten)
  9995  06C6  01BA               	goto	l685
  9996  06C7  2EC8               	line	681
  9997                           	
  9998                           l686:	
  9999  06C8                     	line	682
 10000                           	
 10001                           l685:	
 10002  06C8                     	line	683
 10003                           ;KEY.c: 681: };KEY.c: 682: };KEY.c: 683: key2pushflag = 0;
 10004                           	clrf	(_key2pushflag)
 10005  06C8  01FB               	line	684
 10006                           ;KEY.c: 684: } else if (key3pushflag == 1) {
 10007                           	goto	l4657
 10008  06C9  2EF1               	
 10009                           l682:	
 10010  06CA                     	
 10011                           l4643:	
 10012  06CA                     		decf	((_key3pushflag)),w
 10013  06CA  0329               	btfss	status,2
 10014  06CB  1D03               	goto	u6541
 10015  06CC  2ECE               	goto	u6540
 10016  06CD  2ECF               u6541:
 10017  06CE                     	goto	l4657
 10018  06CE  2EF1               u6540:
 10019  06CF                     	line	685
 10020                           	
 10021                           l4645:	
 10022  06CF                     ;KEY.c: 685: aSECOND_ten--;
 10023                           	movlw	low(-1)
 10024  06CF  30FF               	movwf	(??_ModeSwitch+0)+0
 10025  06D0  00E7               	movf	(??_ModeSwitch+0)+0,w
 10026  06D1  0867               	addwf	(_aSECOND_ten),f
 10027  06D2  07BA               	line	686
 10028                           	
 10029                           l4647:	
 10030  06D3                     ;KEY.c: 686: if (aMINUTE_unit > 0) {
 10031                           	movf	(_aMINUTE_unit),w
 10032  06D3  083B               	xorlw	80h
 10033  06D4  3A80               	addlw	-((01h)^80h)
 10034  06D5  3E7F               	skipc
 10035  06D6  1C03               	goto	u6551
 10036  06D7  2ED9               	goto	u6550
 10037  06D8  2EDA               u6551:
 10038  06D9                     	goto	l689
 10039  06D9  2EE4               u6550:
 10040  06DA                     	line	687
 10041                           	
 10042                           l4649:	
 10043  06DA                     ;KEY.c: 687: if (aSECOND_ten < 0) {
 10044                           	btfss	(_aSECOND_ten),7
 10045  06DA  1FBA               	goto	u6561
 10046  06DB  2EDD               	goto	u6560
 10047  06DC  2EDE               u6561:
 10048  06DD                     	goto	l4655
 10049  06DD  2EEE               u6560:
 10050  06DE                     	line	688
 10051                           	
 10052                           l4651:	
 10053  06DE                     ;KEY.c: 688: aSECOND_ten = 5;
 10054                           	movlw	low(05h)
 10055  06DE  3005               	movwf	(??_ModeSwitch+0)+0
 10056  06DF  00E7               	movf	(??_ModeSwitch+0)+0,w
 10057  06E0  0867               	movwf	(_aSECOND_ten)
 10058  06E1  00BA               	goto	l4655
 10059  06E2  2EEE               	line	689
 10060                           	
 10061                           l690:	
 10062  06E3                     	line	690
 10063                           ;KEY.c: 689: };KEY.c: 690: } else {
 10064                           	goto	l4655
 10065  06E3  2EEE               	
 10066                           l689:	
 10067  06E4                     	line	691
 10068                           ;KEY.c: 691: if (aSECOND_ten < 0) {
 10069                           	btfss	(_aSECOND_ten),7
 10070  06E4  1FBA               	goto	u6571
 10071  06E5  2EE7               	goto	u6570
 10072  06E6  2EE8               u6571:
 10073  06E7                     	goto	l4655
 10074  06E7  2EEE               u6570:
 10075  06E8                     	line	692
 10076                           	
 10077                           l4653:	
 10078  06E8                     ;KEY.c: 692: aSECOND_ten = 6;
 10079                           	movlw	low(06h)
 10080  06E8  3006               	movwf	(??_ModeSwitch+0)+0
 10081  06E9  00E7               	movf	(??_ModeSwitch+0)+0,w
 10082  06EA  0867               	movwf	(_aSECOND_ten)
 10083  06EB  00BA               	goto	l4655
 10084  06EC  2EEE               	line	693
 10085                           	
 10086                           l692:	
 10087  06ED                     	goto	l4655
 10088  06ED  2EEE               	line	694
 10089                           	
 10090                           l691:	
 10091  06EE                     	line	695
 10092                           	
 10093                           l4655:	
 10094  06EE                     ;KEY.c: 693: };KEY.c: 694: };KEY.c: 695: key3pushflag = 0;
 10095                           	clrf	(_key3pushflag)
 10096  06EE  01A9               	goto	l4657
 10097  06EF  2EF1               	line	696
 10098                           	
 10099                           l688:	
 10100  06F0                     	goto	l4657
 10101  06F0  2EF1               	line	697
 10102                           	
 10103                           l687:	
 10104  06F1                     	
 10105                           l4657:	
 10106  06F1                     ;KEY.c: 696: };KEY.c: 697: Alarm_TIME[1] = aSECOND_ten;
 10107                           	movf	(_aSECOND_ten),w
 10108  06F1  083A               	movwf	(??_ModeSwitch+0)+0
 10109  06F2  00E7               	movf	(??_ModeSwitch+0)+0,w
 10110  06F3  0867               	movwf	0+(_Alarm_TIME)+01h
 10111  06F4  00D8               	line	698
 10112                           ;KEY.c: 698: break;
 10113                           	goto	l4685
 10114  06F5  2F53               	line	699
 10115                           ;KEY.c: 699: case 12:
 10116                           	
 10117                           l693:	
 10118  06F6                     	line	700
 10119                           	
 10120                           l4659:	
 10121  06F6                     ;KEY.c: 700: if (key2pushflag == 1) {
 10122                           		decf	((_key2pushflag)),w
 10123  06F6  037B               	btfss	status,2
 10124  06F7  1D03               	goto	u6581
 10125  06F8  2EFA               	goto	u6580
 10126  06F9  2EFB               u6581:
 10127  06FA                     	goto	l4669
 10128  06FA  2F12               u6580:
 10129  06FB                     	line	701
 10130                           	
 10131                           l4661:	
 10132  06FB                     ;KEY.c: 701: aSECOND_unit++;
 10133                           	movlw	low(01h)
 10134  06FB  3001               	movwf	(??_ModeSwitch+0)+0
 10135  06FC  00E7               	movf	(??_ModeSwitch+0)+0,w
 10136  06FD  0867               	addwf	(_aSECOND_unit),f
 10137  06FE  07B9               	line	702
 10138                           ;KEY.c: 702: if (aSECOND_ten == 6) {
 10139                           		movlw	6
 10140  06FF  3006               	xorwf	((_aSECOND_ten)),w
 10141  0700  063A               	btfss	status,2
 10142  0701  1D03               	goto	u6591
 10143  0702  2F04               	goto	u6590
 10144  0703  2F05               u6591:
 10145  0704                     	goto	l4665
 10146  0704  2F07               u6590:
 10147  0705                     	line	703
 10148                           	
 10149                           l4663:	
 10150  0705                     ;KEY.c: 703: aSECOND_unit = 0;
 10151                           	clrf	(_aSECOND_unit)
 10152  0705  01B9               	line	704
 10153                           ;KEY.c: 704: } else {
 10154                           	goto	l696
 10155  0706  2F10               	
 10156                           l695:	
 10157  0707                     	line	705
 10158                           	
 10159                           l4665:	
 10160  0707                     ;KEY.c: 705: if (aSECOND_unit > 9) {
 10161                           	movf	(_aSECOND_unit),w
 10162  0707  0839               	xorlw	80h
 10163  0708  3A80               	addlw	-((0Ah)^80h)
 10164  0709  3E76               	skipc
 10165  070A  1C03               	goto	u6601
 10166  070B  2F0D               	goto	u6600
 10167  070C  2F0E               u6601:
 10168  070D                     	goto	l696
 10169  070D  2F10               u6600:
 10170  070E                     	line	706
 10171                           	
 10172                           l4667:	
 10173  070E                     ;KEY.c: 706: aSECOND_unit = 0;
 10174                           	clrf	(_aSECOND_unit)
 10175  070E  01B9               	goto	l696
 10176  070F  2F10               	line	707
 10177                           	
 10178                           l697:	
 10179  0710                     	line	708
 10180                           	
 10181                           l696:	
 10182  0710                     	line	709
 10183                           ;KEY.c: 707: };KEY.c: 708: };KEY.c: 709: key2pushflag = 0;
 10184                           	clrf	(_key2pushflag)
 10185  0710  01FB               	line	710
 10186                           ;KEY.c: 710: } else if (key3pushflag == 1) {
 10187                           	goto	l4679
 10188  0711  2F27               	
 10189                           l694:	
 10190  0712                     	
 10191                           l4669:	
 10192  0712                     		decf	((_key3pushflag)),w
 10193  0712  0329               	btfss	status,2
 10194  0713  1D03               	goto	u6611
 10195  0714  2F16               	goto	u6610
 10196  0715  2F17               u6611:
 10197  0716                     	goto	l4679
 10198  0716  2F27               u6610:
 10199  0717                     	line	711
 10200                           	
 10201                           l4671:	
 10202  0717                     ;KEY.c: 711: aSECOND_unit--;
 10203                           	movlw	low(-1)
 10204  0717  30FF               	movwf	(??_ModeSwitch+0)+0
 10205  0718  00E7               	movf	(??_ModeSwitch+0)+0,w
 10206  0719  0867               	addwf	(_aSECOND_unit),f
 10207  071A  07B9               	line	712
 10208                           	
 10209                           l4673:	
 10210  071B                     ;KEY.c: 712: if (aSECOND_unit < 0) {
 10211                           	btfss	(_aSECOND_unit),7
 10212  071B  1FB9               	goto	u6621
 10213  071C  2F1E               	goto	u6620
 10214  071D  2F1F               u6621:
 10215  071E                     	goto	l4677
 10216  071E  2F24               u6620:
 10217  071F                     	line	713
 10218                           	
 10219                           l4675:	
 10220  071F                     ;KEY.c: 713: aSECOND_unit = 9;
 10221                           	movlw	low(09h)
 10222  071F  3009               	movwf	(??_ModeSwitch+0)+0
 10223  0720  00E7               	movf	(??_ModeSwitch+0)+0,w
 10224  0721  0867               	movwf	(_aSECOND_unit)
 10225  0722  00B9               	goto	l4677
 10226  0723  2F24               	line	714
 10227                           	
 10228                           l700:	
 10229  0724                     	line	715
 10230                           	
 10231                           l4677:	
 10232  0724                     ;KEY.c: 714: };KEY.c: 715: key3pushflag = 0;
 10233                           	clrf	(_key3pushflag)
 10234  0724  01A9               	goto	l4679
 10235  0725  2F27               	line	716
 10236                           	
 10237                           l699:	
 10238  0726                     	goto	l4679
 10239  0726  2F27               	line	717
 10240                           	
 10241                           l698:	
 10242  0727                     	
 10243                           l4679:	
 10244  0727                     ;KEY.c: 716: };KEY.c: 717: Alarm_TIME[0] = aSECOND_unit;
 10245                           	movf	(_aSECOND_unit),w
 10246  0727  0839               	movwf	(??_ModeSwitch+0)+0
 10247  0728  00E7               	movf	(??_ModeSwitch+0)+0,w
 10248  0729  0867               	movwf	(_Alarm_TIME)
 10249  072A  00D7               	line	718
 10250                           ;KEY.c: 718: break;
 10251                           	goto	l4685
 10252  072B  2F53               	line	719
 10253                           	
 10254                           l4681:	
 10255  072C                     ;KEY.c: 719: }
 10256                           	goto	l4685
 10257  072C  2F53               	line	559
 10258                           	
 10259                           l633:	
 10260  072D                     	
 10261                           l4683:	
 10262  072D                     	movlw	07h
 10263  072D  3007               	bcf	status, 5	;RP0=0, select bank0
 10264  072E  1283               	bcf	status, 6	;RP1=0, select bank0
 10265  072F  1303               	addwf	(_cursor_addr),w
 10266  0730  072A               	movwf	(??_ModeSwitch+0)+0
 10267  0731  00E7               	clrf	1+(??_ModeSwitch+0)+0
 10268  0732  01E8               	skipnc
 10269  0733  1803               	incf	((??_ModeSwitch+0)+0)+1,f
 10270  0734  0AE8               	btfss	(_cursor_addr),7
 10271  0735  1FAA               	goto	u6634
 10272  0736  2F38               	decf	((??_ModeSwitch+0)+0)+1,f
 10273  0737  03E8               	u6634:
 10274  0738                     	
 10275                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10276                           ; Switch size 1, requested type "space"
 10277                           ; Number of cases is 1, Range of values is 0 to 0
 10278                           ; switch strategies available:
 10279                           ; Name         Instructions Cycles
 10280                           ; simple_byte            4     3 (average)
 10281                           ; direct_byte           11     8 (fixed)
 10282                           ; jumptable            260     6 (fixed)
 10283                           ;	Chosen strategy is simple_byte
 10284                           
 10285                           	bcf	status, 5	;RP0=0, select bank0
 10286  0738  1283               	bcf	status, 6	;RP1=0, select bank0
 10287  0739  1303               	movf 1+(??_ModeSwitch+0)+0,w
 10288  073A  0868               	opt asmopt_push
 10289                           	opt asmopt_off
 10290                           	xorlw	0^0	; case 0
 10291  073B  3A00               	skipnz
 10292  073C  1903               	goto	l4805
 10293  073D  2F3F               	goto	l4685
 10294  073E  2F53               	opt asmopt_pop
 10295                           	
 10296                           l4805:	
 10297  073F                     ; Switch size 1, requested type "space"
 10298                           ; Number of cases is 6, Range of values is 7 to 12
 10299                           ; switch strategies available:
 10300                           ; Name         Instructions Cycles
 10301                           ; simple_byte           19    10 (average)
 10302                           ; direct_byte           29    11 (fixed)
 10303                           ; jumptable            263     9 (fixed)
 10304                           ;	Chosen strategy is simple_byte
 10305                           
 10306                           	movf 0+(??_ModeSwitch+0)+0,w
 10307  073F  0867               	opt asmopt_push
 10308                           	opt asmopt_off
 10309                           	xorlw	7^0	; case 7
 10310  0740  3A07               	skipnz
 10311  0741  1903               	goto	l4521
 10312  0742  2D73               	xorlw	8^7	; case 8
 10313  0743  3A0F               	skipnz
 10314  0744  1903               	goto	l4551
 10315  0745  2DC6               	xorlw	9^8	; case 9
 10316  0746  3A01               	skipnz
 10317  0747  1903               	goto	l4577
 10318  0748  2E15               	xorlw	10^9	; case 10
 10319  0749  3A03               	skipnz
 10320  074A  1903               	goto	l4607
 10321  074B  2E66               	xorlw	11^10	; case 11
 10322  074C  3A01               	skipnz
 10323  074D  1903               	goto	l4629
 10324  074E  2EA5               	xorlw	12^11	; case 12
 10325  074F  3A07               	skipnz
 10326  0750  1903               	goto	l4659
 10327  0751  2EF6               	goto	l4685
 10328  0752  2F53               	opt asmopt_pop
 10329                           
 10330                           	line	719
 10331                           	
 10332                           l646:	
 10333  0753                     	line	720
 10334                           	
 10335                           l4685:	
 10336  0753                     ;KEY.c: 720: Trans_Alarm_bit();
 10337                           	fcall	_Trans_Alarm_bit
 10338  0753  160A  118A  23B5  120A  118A  	line	721
 10339                           ;KEY.c: 721: AlarmDataDisplay();
 10340                           	fcall	_AlarmDataDisplay
 10341  0758  120A  158A  253D  120A  118A  	line	722
 10342                           ;KEY.c: 722: break;
 10343                           	goto	l701
 10344  075D  2F6C               	line	724
 10345                           	
 10346                           l4687:	
 10347  075E                     ;KEY.c: 723: };KEY.c: 724: }
 10348                           	goto	l701
 10349  075E  2F6C               	line	173
 10350                           	
 10351                           l492:	
 10352  075F                     	
 10353                           l4689:	
 10354  075F                     	bcf	status, 5	;RP0=0, select bank0
 10355  075F  1283               	bcf	status, 6	;RP1=0, select bank0
 10356  0760  1303               	movf	(_Mode),w
 10357  0761  082B               	; Switch size 1, requested type "space"
 10358                           ; Number of cases is 3, Range of values is 0 to 2
 10359                           ; switch strategies available:
 10360                           ; Name         Instructions Cycles
 10361                           ; simple_byte           10     6 (average)
 10362                           ; direct_byte           17     8 (fixed)
 10363                           ; jumptable            260     6 (fixed)
 10364                           ;	Chosen strategy is simple_byte
 10365                           
 10366                           	opt asmopt_push
 10367                           	opt asmopt_off
 10368                           	xorlw	0^0	; case 0
 10369  0762  3A00               	skipnz
 10370  0763  1903               	goto	l4157
 10371  0764  2839               	xorlw	1^0	; case 1
 10372  0765  3A01               	skipnz
 10373  0766  1903               	goto	l4163
 10374  0767  284E               	xorlw	2^1	; case 2
 10375  0768  3A03               	skipnz
 10376  0769  1903               	goto	l4511
 10377  076A  2D3C               	goto	l701
 10378  076B  2F6C               	opt asmopt_pop
 10379                           
 10380                           	line	724
 10381                           	
 10382                           l494:	
 10383  076C                     	line	725
 10384                           	
 10385                           l701:	
 10386  076C                     	return
 10387  076C  0008               	opt stack 0
 10388                           GLOBAL	__end_of_ModeSwitch
 10389                           	__end_of_ModeSwitch:
 10390  076D                     	signat	_ModeSwitch,89
 10391                           	global	_Y_position
 10392                           
 10393 ;; *************** function _Y_position *****************
 10394 ;; Defined at:
 10395 ;;		line 97 in file "LCD.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;  addr            1    wreg     char 
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;  addr            1    2[COMMON] char 
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  1    wreg      unsigned char 
 10402 ;; Registers used:
 10403 ;;		wreg
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10409 ;;      Params:         0       0       0       0       0
 10410 ;;      Locals:         1       0       0       0       0
 10411 ;;      Temps:          0       0       0       0       0
 10412 ;;      Totals:         1       0       0       0       0
 10413 ;;Total ram usage:        1 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; Hardware stack levels required when called:    1
 10416 ;; This function calls:
 10417 ;;		Nothing
 10418 ;; This function is called by:
 10419 ;;		_ModeSwitch
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
 10423                           	file	"LCD.c"
 10424                           	line	97
 10425                           global __ptext16
 10426                           __ptext16:	;psect for function _Y_position
 10427  1509                     psect	text16
 10428                           	file	"LCD.c"
 10429                           	line	97
 10430                           	global	__size_of_Y_position
 10431                           	__size_of_Y_position	equ	__end_of_Y_position-_Y_position
 10432  0023                     	
 10433                           _Y_position:	
 10434  1509                     ;incstack = 0
 10435                           	opt	stack 5
 10436                           ; Regs used in _Y_position: [wreg]
 10437                           ;Y_position@addr stored from wreg
 10438                           	movwf	(Y_position@addr)
 10439  1509  00F2               	line	100
 10440                           	
 10441                           l2803:	
 10442  150A                     ;LCD.c: 100: if((addr >=0)&&(addr<=6))
 10443                           	btfsc	(Y_position@addr),7
 10444  150A  1BF2               	goto	u2501
 10445  150B  2D0D               	goto	u2500
 10446  150C  2D0E               u2501:
 10447  150D                     	goto	l2813
 10448  150D  2D19               u2500:
 10449  150E                     	
 10450                           l2805:	
 10451  150E                     	movf	(Y_position@addr),w
 10452  150E  0872               	xorlw	80h
 10453  150F  3A80               	addlw	-((07h)^80h)
 10454  1510  3E79               	skipnc
 10455  1511  1803               	goto	u2511
 10456  1512  2D14               	goto	u2510
 10457  1513  2D15               u2511:
 10458  1514                     	goto	l2813
 10459  1514  2D19               u2510:
 10460  1515                     	line	102
 10461                           	
 10462                           l2807:	
 10463  1515                     ;LCD.c: 101: {;LCD.c: 102: return 1;
 10464                           	movlw	low(01h)
 10465  1515  3001               	goto	l130
 10466  1516  2D2B               	
 10467                           l2809:	
 10468  1517                     	goto	l130
 10469  1517  2D2B               	line	103
 10470                           	
 10471                           l2811:	
 10472  1518                     ;LCD.c: 103: }
 10473                           	goto	l130
 10474  1518  2D2B               	line	104
 10475                           	
 10476                           l129:	
 10477  1519                     	
 10478                           l2813:	
 10479  1519                     ;LCD.c: 104: else if((addr>=7)&&(addr<=12))
 10480                           	movf	(Y_position@addr),w
 10481  1519  0872               	xorlw	80h
 10482  151A  3A80               	addlw	-((07h)^80h)
 10483  151B  3E79               	skipc
 10484  151C  1C03               	goto	u2521
 10485  151D  2D1F               	goto	u2520
 10486  151E  2D20               u2521:
 10487  151F                     	goto	l130
 10488  151F  2D2B               u2520:
 10489  1520                     	
 10490                           l2815:	
 10491  1520                     	movf	(Y_position@addr),w
 10492  1520  0872               	xorlw	80h
 10493  1521  3A80               	addlw	-((0Dh)^80h)
 10494  1522  3E73               	skipnc
 10495  1523  1803               	goto	u2531
 10496  1524  2D26               	goto	u2530
 10497  1525  2D27               u2531:
 10498  1526                     	goto	l130
 10499  1526  2D2B               u2530:
 10500  1527                     	line	106
 10501                           	
 10502                           l2817:	
 10503  1527                     ;LCD.c: 105: {;LCD.c: 106: return 2;
 10504                           	movlw	low(02h)
 10505  1527  3002               	goto	l130
 10506  1528  2D2B               	
 10507                           l2819:	
 10508  1529                     	goto	l130
 10509  1529  2D2B               	line	107
 10510                           	
 10511                           l132:	
 10512  152A                     	goto	l130
 10513  152A  2D2B               	line	108
 10514                           	
 10515                           l131:	
 10516  152B                     	
 10517                           l130:	
 10518  152B                     	return
 10519  152B  0008               	opt stack 0
 10520                           GLOBAL	__end_of_Y_position
 10521                           	__end_of_Y_position:
 10522  152C                     	signat	_Y_position,4217
 10523                           	global	_Trans_Time_bit
 10524                           
 10525 ;; *************** function _Trans_Time_bit *****************
 10526 ;; Defined at:
 10527 ;;		line 152 in file "DS1302.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;		None
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;		None
 10532 ;; Return value:  Size  Location     Type
 10533 ;;                  1    wreg      void 
 10534 ;; Registers used:
 10535 ;;		wreg, status,2, status,0
 10536 ;; Tracked objects:
 10537 ;;		On entry : 0/0
 10538 ;;		On exit  : 0/0
 10539 ;;		Unchanged: 0/0
 10540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10541 ;;      Params:         0       0       0       0       0
 10542 ;;      Locals:         0       0       0       0       0
 10543 ;;      Temps:          2       0       0       0       0
 10544 ;;      Totals:         2       0       0       0       0
 10545 ;;Total ram usage:        2 bytes
 10546 ;; Hardware stack levels used:    1
 10547 ;; Hardware stack levels required when called:    1
 10548 ;; This function calls:
 10549 ;;		Nothing
 10550 ;; This function is called by:
 10551 ;;		_ModeSwitch
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
 10555                           	file	"DS1302.c"
 10556                           	line	152
 10557                           global __ptext17
 10558                           __ptext17:	;psect for function _Trans_Time_bit
 10559  0DA4                     psect	text17
 10560                           	file	"DS1302.c"
 10561                           	line	152
 10562                           	global	__size_of_Trans_Time_bit
 10563                           	__size_of_Trans_Time_bit	equ	__end_of_Trans_Time_bit-_Trans_Time_bit
 10564  006E                     	
 10565                           _Trans_Time_bit:	
 10566  0DA4                     ;incstack = 0
 10567                           	opt	stack 5
 10568                           ; Regs used in _Trans_Time_bit: [wreg+status,2+status,0]
 10569                           	line	153
 10570                           	
 10571                           l2843:	
 10572  0DA4                     ;DS1302.c: 153: YEAR_ten = tempTime_Ds1302[6] >> 4;
 10573                           	bcf	status, 5	;RP0=0, select bank0
 10574  0DA4  1283               	bcf	status, 6	;RP1=0, select bank0
 10575  0DA5  1303               	movf	0+(_tempTime_Ds1302)+06h,w
 10576  0DA6  0826               	movwf	(??_Trans_Time_bit+0)+0
 10577  0DA7  00F2               	movlw	04h
 10578  0DA8  3004               u2565:
 10579  0DA9                     	clrc
 10580  0DA9  1003               	rrf	(??_Trans_Time_bit+0)+0,f
 10581  0DAA  0CF2               	addlw	-1
 10582  0DAB  3EFF               	skipz
 10583  0DAC  1D03               	goto	u2565
 10584  0DAD  2DA9               	movf	0+(??_Trans_Time_bit+0)+0,w
 10585  0DAE  0872               	movwf	(??_Trans_Time_bit+1)+0
 10586  0DAF  00F3               	movf	(??_Trans_Time_bit+1)+0,w
 10587  0DB0  0873               	movwf	(_YEAR_ten)
 10588  0DB1  00B8               	line	154
 10589                           	
 10590                           l2845:	
 10591  0DB2                     ;DS1302.c: 154: YEAR_unit = tempTime_Ds1302[6]&0x0f;
 10592                           	movf	0+(_tempTime_Ds1302)+06h,w
 10593  0DB2  0826               	andlw	0Fh
 10594  0DB3  390F               	movwf	(??_Trans_Time_bit+0)+0
 10595  0DB4  00F2               	movf	(??_Trans_Time_bit+0)+0,w
 10596  0DB5  0872               	movwf	(_YEAR_unit)
 10597  0DB6  00B7               	line	155
 10598                           	
 10599                           l2847:	
 10600  0DB7                     ;DS1302.c: 155: WEEK_unit = tempTime_Ds1302[5]&0x0f;
 10601                           	movf	0+(_tempTime_Ds1302)+05h,w
 10602  0DB7  0825               	andlw	0Fh
 10603  0DB8  390F               	movwf	(??_Trans_Time_bit+0)+0
 10604  0DB9  00F2               	movf	(??_Trans_Time_bit+0)+0,w
 10605  0DBA  0872               	movwf	(_WEEK_unit)
 10606  0DBB  00B2               	line	157
 10607                           ;DS1302.c: 157: MONTH_ten = tempTime_Ds1302[4] >> 4;
 10608                           	movf	0+(_tempTime_Ds1302)+04h,w
 10609  0DBC  0824               	movwf	(??_Trans_Time_bit+0)+0
 10610  0DBD  00F2               	movlw	04h
 10611  0DBE  3004               u2575:
 10612  0DBF                     	clrc
 10613  0DBF  1003               	rrf	(??_Trans_Time_bit+0)+0,f
 10614  0DC0  0CF2               	addlw	-1
 10615  0DC1  3EFF               	skipz
 10616  0DC2  1D03               	goto	u2575
 10617  0DC3  2DBF               	movf	0+(??_Trans_Time_bit+0)+0,w
 10618  0DC4  0872               	movwf	(??_Trans_Time_bit+1)+0
 10619  0DC5  00F3               	movf	(??_Trans_Time_bit+1)+0,w
 10620  0DC6  0873               	movwf	(_MONTH_ten)
 10621  0DC7  00B6               	line	158
 10622                           	
 10623                           l2849:	
 10624  0DC8                     ;DS1302.c: 158: MONTH_unit = tempTime_Ds1302[4]&0x0f;
 10625                           	movf	0+(_tempTime_Ds1302)+04h,w
 10626  0DC8  0824               	andlw	0Fh
 10627  0DC9  390F               	movwf	(??_Trans_Time_bit+0)+0
 10628  0DCA  00F2               	movf	(??_Trans_Time_bit+0)+0,w
 10629  0DCB  0872               	movwf	(_MONTH_unit)
 10630  0DCC  00B5               	line	159
 10631                           	
 10632                           l2851:	
 10633  0DCD                     ;DS1302.c: 159: DAY_ten = tempTime_Ds1302[3] >> 4;
 10634                           	movf	0+(_tempTime_Ds1302)+03h,w
 10635  0DCD  0823               	movwf	(??_Trans_Time_bit+0)+0
 10636  0DCE  00F2               	movlw	04h
 10637  0DCF  3004               u2585:
 10638  0DD0                     	clrc
 10639  0DD0  1003               	rrf	(??_Trans_Time_bit+0)+0,f
 10640  0DD1  0CF2               	addlw	-1
 10641  0DD2  3EFF               	skipz
 10642  0DD3  1D03               	goto	u2585
 10643  0DD4  2DD0               	movf	0+(??_Trans_Time_bit+0)+0,w
 10644  0DD5  0872               	movwf	(??_Trans_Time_bit+1)+0
 10645  0DD6  00F3               	movf	(??_Trans_Time_bit+1)+0,w
 10646  0DD7  0873               	movwf	(_DAY_ten)
 10647  0DD8  00B4               	line	160
 10648                           ;DS1302.c: 160: DAY_unit = tempTime_Ds1302[3]&0x0f;
 10649                           	movf	0+(_tempTime_Ds1302)+03h,w
 10650  0DD9  0823               	andlw	0Fh
 10651  0DDA  390F               	movwf	(??_Trans_Time_bit+0)+0
 10652  0DDB  00F2               	movf	(??_Trans_Time_bit+0)+0,w
 10653  0DDC  0872               	movwf	(_DAY_unit)
 10654  0DDD  00B3               	line	161
 10655                           	
 10656                           l2853:	
 10657  0DDE                     ;DS1302.c: 161: HOUR_ten = tempTime_Ds1302[2] >> 4;
 10658                           	movf	0+(_tempTime_Ds1302)+02h,w
 10659  0DDE  0822               	movwf	(??_Trans_Time_bit+0)+0
 10660  0DDF  00F2               	movlw	04h
 10661  0DE0  3004               u2595:
 10662  0DE1                     	clrc
 10663  0DE1  1003               	rrf	(??_Trans_Time_bit+0)+0,f
 10664  0DE2  0CF2               	addlw	-1
 10665  0DE3  3EFF               	skipz
 10666  0DE4  1D03               	goto	u2595
 10667  0DE5  2DE1               	movf	0+(??_Trans_Time_bit+0)+0,w
 10668  0DE6  0872               	movwf	(??_Trans_Time_bit+1)+0
 10669  0DE7  00F3               	movf	(??_Trans_Time_bit+1)+0,w
 10670  0DE8  0873               	movwf	(_HOUR_ten)
 10671  0DE9  00B1               	line	162
 10672                           	
 10673                           l2855:	
 10674  0DEA                     ;DS1302.c: 162: HOUR_unit = tempTime_Ds1302[2]&0x0f;
 10675                           	movf	0+(_tempTime_Ds1302)+02h,w
 10676  0DEA  0822               	andlw	0Fh
 10677  0DEB  390F               	movwf	(??_Trans_Time_bit+0)+0
 10678  0DEC  00F2               	movf	(??_Trans_Time_bit+0)+0,w
 10679  0DED  0872               	movwf	(_HOUR_unit)
 10680  0DEE  00B0               	line	163
 10681                           ;DS1302.c: 163: MINUTE_ten = tempTime_Ds1302[1] >> 4;
 10682                           	movf	0+(_tempTime_Ds1302)+01h,w
 10683  0DEF  0821               	movwf	(??_Trans_Time_bit+0)+0
 10684  0DF0  00F2               	movlw	04h
 10685  0DF1  3004               u2605:
 10686  0DF2                     	clrc
 10687  0DF2  1003               	rrf	(??_Trans_Time_bit+0)+0,f
 10688  0DF3  0CF2               	addlw	-1
 10689  0DF4  3EFF               	skipz
 10690  0DF5  1D03               	goto	u2605
 10691  0DF6  2DF2               	movf	0+(??_Trans_Time_bit+0)+0,w
 10692  0DF7  0872               	movwf	(??_Trans_Time_bit+1)+0
 10693  0DF8  00F3               	movf	(??_Trans_Time_bit+1)+0,w
 10694  0DF9  0873               	movwf	(_MINUTE_ten)
 10695  0DFA  00AF               	line	164
 10696                           	
 10697                           l2857:	
 10698  0DFB                     ;DS1302.c: 164: MINUTE_unit = tempTime_Ds1302[1]&0x0f;
 10699                           	movf	0+(_tempTime_Ds1302)+01h,w
 10700  0DFB  0821               	andlw	0Fh
 10701  0DFC  390F               	movwf	(??_Trans_Time_bit+0)+0
 10702  0DFD  00F2               	movf	(??_Trans_Time_bit+0)+0,w
 10703  0DFE  0872               	movwf	(_MINUTE_unit)
 10704  0DFF  00AE               	line	165
 10705                           	
 10706                           l2859:	
 10707  0E00                     ;DS1302.c: 165: SECOND_ten = tempTime_Ds1302[0] >> 4;
 10708                           	movf	(_tempTime_Ds1302),w
 10709  0E00  0820               	movwf	(??_Trans_Time_bit+0)+0
 10710  0E01  00F2               	movlw	04h
 10711  0E02  3004               u2615:
 10712  0E03                     	clrc
 10713  0E03  1003               	rrf	(??_Trans_Time_bit+0)+0,f
 10714  0E04  0CF2               	addlw	-1
 10715  0E05  3EFF               	skipz
 10716  0E06  1D03               	goto	u2615
 10717  0E07  2E03               	movf	0+(??_Trans_Time_bit+0)+0,w
 10718  0E08  0872               	movwf	(??_Trans_Time_bit+1)+0
 10719  0E09  00F3               	movf	(??_Trans_Time_bit+1)+0,w
 10720  0E0A  0873               	movwf	(_SECOND_ten)
 10721  0E0B  00AD               	line	166
 10722                           ;DS1302.c: 166: SECOND_unit = tempTime_Ds1302[0]&0x0f;
 10723                           	movf	(_tempTime_Ds1302),w
 10724  0E0C  0820               	andlw	0Fh
 10725  0E0D  390F               	movwf	(??_Trans_Time_bit+0)+0
 10726  0E0E  00F2               	movf	(??_Trans_Time_bit+0)+0,w
 10727  0E0F  0872               	movwf	(_SECOND_unit)
 10728  0E10  00AC               	line	167
 10729                           	
 10730                           l254:	
 10731  0E11                     	return
 10732  0E11  0008               	opt stack 0
 10733                           GLOBAL	__end_of_Trans_Time_bit
 10734                           	__end_of_Trans_Time_bit:
 10735  0E12                     	signat	_Trans_Time_bit,89
 10736                           	global	_TimeDataDisplay
 10737                           
 10738 ;; *************** function _TimeDataDisplay *****************
 10739 ;; Defined at:
 10740 ;;		line 171 in file "DS1302.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;		None
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;		None
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  1    wreg      void 
 10747 ;; Registers used:
 10748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10754 ;;      Params:         0       0       0       0       0
 10755 ;;      Locals:         0       0       0       0       0
 10756 ;;      Temps:          0       2       0       0       0
 10757 ;;      Totals:         0       2       0       0       0
 10758 ;;Total ram usage:        2 bytes
 10759 ;; Hardware stack levels used:    1
 10760 ;; Hardware stack levels required when called:    5
 10761 ;; This function calls:
 10762 ;;		_LCD_write_char
 10763 ;;		_LCD_write_string
 10764 ;; This function is called by:
 10765 ;;		_ModeSwitch
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
 10769                           	line	171
 10770                           global __ptext18
 10771                           __ptext18:	;psect for function _TimeDataDisplay
 10772  0E12                     psect	text18
 10773                           	file	"DS1302.c"
 10774                           	line	171
 10775                           	global	__size_of_TimeDataDisplay
 10776                           	__size_of_TimeDataDisplay	equ	__end_of_TimeDataDisplay-_TimeDataDisplay
 10777  00E6                     	
 10778                           _TimeDataDisplay:	
 10779  0E12                     ;incstack = 0
 10780                           	opt	stack 1
 10781                           ; Regs used in _TimeDataDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10782                           	line	173
 10783                           	
 10784                           l3949:	
 10785  0E12                     ;DS1302.c: 173: LCD_write_string(1, 1, "20");
 10786                           	bcf	status, 5	;RP0=0, select bank0
 10787  0E12  1283               	bcf	status, 6	;RP1=0, select bank0
 10788  0E13  1303               	clrf	(LCD_write_string@Y)
 10789  0E14  01E0               	incf	(LCD_write_string@Y),f
 10790  0E15  0AE0               	movlw	low(((STR_14)|8000h))
 10791  0E16  3070               	movwf	(LCD_write_string@s)
 10792  0E17  00E1               	movlw	high(((STR_14)|8000h))
 10793  0E18  308B               	movwf	((LCD_write_string@s))+1
 10794  0E19  00E2               	movlw	low(01h)
 10795  0E1A  3001               	fcall	_LCD_write_string
 10796  0E1B  160A  118A  2708  120A  158A  	line	174
 10797                           	
 10798                           l3951:	
 10799  0E20                     ;DS1302.c: 174: LCD_write_char(3, 1, YEAR_ten + '0');
 10800                           	bcf	status, 5	;RP0=0, select bank0
 10801  0E20  1283               	bcf	status, 6	;RP1=0, select bank0
 10802  0E21  1303               	clrf	(LCD_write_char@y)
 10803  0E22  01E0               	incf	(LCD_write_char@y),f
 10804  0E23  0AE0               	movf	(_YEAR_ten),w
 10805  0E24  0838               	addlw	030h
 10806  0E25  3E30               	movwf	(??_TimeDataDisplay+0)+0
 10807  0E26  00E5               	movf	(??_TimeDataDisplay+0)+0,w
 10808  0E27  0865               	movwf	(LCD_write_char@dat)
 10809  0E28  00E1               	movlw	low(03h)
 10810  0E29  3003               	fcall	_LCD_write_char
 10811  0E2A  160A  118A  236E  120A  158A  	line	175
 10812                           	
 10813                           l3953:	
 10814  0E2F                     ;DS1302.c: 175: LCD_write_char(4, 1, YEAR_unit + '0');
 10815                           	bcf	status, 5	;RP0=0, select bank0
 10816  0E2F  1283               	bcf	status, 6	;RP1=0, select bank0
 10817  0E30  1303               	clrf	(LCD_write_char@y)
 10818  0E31  01E0               	incf	(LCD_write_char@y),f
 10819  0E32  0AE0               	movf	(_YEAR_unit),w
 10820  0E33  0837               	addlw	030h
 10821  0E34  3E30               	movwf	(??_TimeDataDisplay+0)+0
 10822  0E35  00E5               	movf	(??_TimeDataDisplay+0)+0,w
 10823  0E36  0865               	movwf	(LCD_write_char@dat)
 10824  0E37  00E1               	movlw	low(04h)
 10825  0E38  3004               	fcall	_LCD_write_char
 10826  0E39  160A  118A  236E  120A  158A  	line	176
 10827                           	
 10828                           l3955:	
 10829  0E3E                     ;DS1302.c: 176: LCD_write_char(6, 1, MONTH_ten + '0');
 10830                           	bcf	status, 5	;RP0=0, select bank0
 10831  0E3E  1283               	bcf	status, 6	;RP1=0, select bank0
 10832  0E3F  1303               	clrf	(LCD_write_char@y)
 10833  0E40  01E0               	incf	(LCD_write_char@y),f
 10834  0E41  0AE0               	movf	(_MONTH_ten),w
 10835  0E42  0836               	addlw	030h
 10836  0E43  3E30               	movwf	(??_TimeDataDisplay+0)+0
 10837  0E44  00E5               	movf	(??_TimeDataDisplay+0)+0,w
 10838  0E45  0865               	movwf	(LCD_write_char@dat)
 10839  0E46  00E1               	movlw	low(06h)
 10840  0E47  3006               	fcall	_LCD_write_char
 10841  0E48  160A  118A  236E  120A  158A  	line	177
 10842                           	
 10843                           l3957:	
 10844  0E4D                     ;DS1302.c: 177: LCD_write_char(7, 1, MONTH_unit + '0');
 10845                           	bcf	status, 5	;RP0=0, select bank0
 10846  0E4D  1283               	bcf	status, 6	;RP1=0, select bank0
 10847  0E4E  1303               	clrf	(LCD_write_char@y)
 10848  0E4F  01E0               	incf	(LCD_write_char@y),f
 10849  0E50  0AE0               	movf	(_MONTH_unit),w
 10850  0E51  0835               	addlw	030h
 10851  0E52  3E30               	movwf	(??_TimeDataDisplay+0)+0
 10852  0E53  00E5               	movf	(??_TimeDataDisplay+0)+0,w
 10853  0E54  0865               	movwf	(LCD_write_char@dat)
 10854  0E55  00E1               	movlw	low(07h)
 10855  0E56  3007               	fcall	_LCD_write_char
 10856  0E57  160A  118A  236E  120A  158A  	line	178
 10857                           	
 10858                           l3959:	
 10859  0E5C                     ;DS1302.c: 178: LCD_write_char(9, 1, DAY_ten + '0');
 10860                           	bcf	status, 5	;RP0=0, select bank0
 10861  0E5C  1283               	bcf	status, 6	;RP1=0, select bank0
 10862  0E5D  1303               	clrf	(LCD_write_char@y)
 10863  0E5E  01E0               	incf	(LCD_write_char@y),f
 10864  0E5F  0AE0               	movf	(_DAY_ten),w
 10865  0E60  0834               	addlw	030h
 10866  0E61  3E30               	movwf	(??_TimeDataDisplay+0)+0
 10867  0E62  00E5               	movf	(??_TimeDataDisplay+0)+0,w
 10868  0E63  0865               	movwf	(LCD_write_char@dat)
 10869  0E64  00E1               	movlw	low(09h)
 10870  0E65  3009               	fcall	_LCD_write_char
 10871  0E66  160A  118A  236E  120A  158A  	line	179
 10872                           	
 10873                           l3961:	
 10874  0E6B                     ;DS1302.c: 179: LCD_write_char(10, 1, DAY_unit + '0');
 10875                           	bcf	status, 5	;RP0=0, select bank0
 10876  0E6B  1283               	bcf	status, 6	;RP1=0, select bank0
 10877  0E6C  1303               	clrf	(LCD_write_char@y)
 10878  0E6D  01E0               	incf	(LCD_write_char@y),f
 10879  0E6E  0AE0               	movf	(_DAY_unit),w
 10880  0E6F  0833               	addlw	030h
 10881  0E70  3E30               	movwf	(??_TimeDataDisplay+0)+0
 10882  0E71  00E5               	movf	(??_TimeDataDisplay+0)+0,w
 10883  0E72  0865               	movwf	(LCD_write_char@dat)
 10884  0E73  00E1               	movlw	low(0Ah)
 10885  0E74  300A               	fcall	_LCD_write_char
 10886  0E75  160A  118A  236E  120A  158A  	line	180
 10887                           ;DS1302.c: 180: LCD_write_string(13 - 1, 1, week[WEEK_unit - 1]);
 10888                           	bcf	status, 5	;RP0=0, select bank0
 10889  0E7A  1283               	bcf	status, 6	;RP1=0, select bank0
 10890  0E7B  1303               	clrf	(LCD_write_string@Y)
 10891  0E7C  01E0               	incf	(LCD_write_string@Y),f
 10892  0E7D  0AE0               	movf	(_WEEK_unit),w
 10893  0E7E  0832               	movwf	(??_TimeDataDisplay+0)+0
 10894  0E7F  00E5               	addwf	(??_TimeDataDisplay+0)+0,w
 10895  0E80  0765               	addlw	0FEh
 10896  0E81  3EFE               	addlw	low(_week|((0x0)<<8))&0ffh
 10897  0E82  3EA0               	movwf	fsr0
 10898  0E83  0084               	bcf	status, 7	;select IRP bank1
 10899  0E84  1383               		movf	indf,w
 10900  0E85  0800               	movwf	(LCD_write_string@s)
 10901  0E86  00E1               incf	fsr0,f
 10902  0E87  0A84               	movf	indf,w
 10903  0E88  0800               	decf	fsr0,f
 10904  0E89  0384               movwf	(LCD_write_string@s+1)
 10905  0E8A  00E2               
 10906                           	movlw	low(0Ch)
 10907  0E8B  300C               	fcall	_LCD_write_string
 10908  0E8C  160A  118A  2708  120A  158A  	line	184
 10909                           	
 10910                           l3963:	
 10911  0E91                     ;DS1302.c: 184: LCD_write_char(6, 2, HOUR_ten + '0');
 10912                           	movlw	low(02h)
 10913  0E91  3002               	bcf	status, 5	;RP0=0, select bank0
 10914  0E92  1283               	bcf	status, 6	;RP1=0, select bank0
 10915  0E93  1303               	movwf	(??_TimeDataDisplay+0)+0
 10916  0E94  00E5               	movf	(??_TimeDataDisplay+0)+0,w
 10917  0E95  0865               	movwf	(LCD_write_char@y)
 10918  0E96  00E0               	movf	(_HOUR_ten),w
 10919  0E97  0831               	addlw	030h
 10920  0E98  3E30               	movwf	(??_TimeDataDisplay+1)+0
 10921  0E99  00E6               	movf	(??_TimeDataDisplay+1)+0,w
 10922  0E9A  0866               	movwf	(LCD_write_char@dat)
 10923  0E9B  00E1               	movlw	low(06h)
 10924  0E9C  3006               	fcall	_LCD_write_char
 10925  0E9D  160A  118A  236E  120A  158A  	line	185
 10926                           	
 10927                           l3965:	
 10928  0EA2                     ;DS1302.c: 185: LCD_write_char(7, 2, HOUR_unit + '0');
 10929                           	movlw	low(02h)
 10930  0EA2  3002               	bcf	status, 5	;RP0=0, select bank0
 10931  0EA3  1283               	bcf	status, 6	;RP1=0, select bank0
 10932  0EA4  1303               	movwf	(??_TimeDataDisplay+0)+0
 10933  0EA5  00E5               	movf	(??_TimeDataDisplay+0)+0,w
 10934  0EA6  0865               	movwf	(LCD_write_char@y)
 10935  0EA7  00E0               	movf	(_HOUR_unit),w
 10936  0EA8  0830               	addlw	030h
 10937  0EA9  3E30               	movwf	(??_TimeDataDisplay+1)+0
 10938  0EAA  00E6               	movf	(??_TimeDataDisplay+1)+0,w
 10939  0EAB  0866               	movwf	(LCD_write_char@dat)
 10940  0EAC  00E1               	movlw	low(07h)
 10941  0EAD  3007               	fcall	_LCD_write_char
 10942  0EAE  160A  118A  236E  120A  158A  	line	186
 10943                           	
 10944                           l3967:	
 10945  0EB3                     ;DS1302.c: 186: LCD_write_char(9, 2, MINUTE_ten + '0');
 10946                           	movlw	low(02h)
 10947  0EB3  3002               	bcf	status, 5	;RP0=0, select bank0
 10948  0EB4  1283               	bcf	status, 6	;RP1=0, select bank0
 10949  0EB5  1303               	movwf	(??_TimeDataDisplay+0)+0
 10950  0EB6  00E5               	movf	(??_TimeDataDisplay+0)+0,w
 10951  0EB7  0865               	movwf	(LCD_write_char@y)
 10952  0EB8  00E0               	movf	(_MINUTE_ten),w
 10953  0EB9  082F               	addlw	030h
 10954  0EBA  3E30               	movwf	(??_TimeDataDisplay+1)+0
 10955  0EBB  00E6               	movf	(??_TimeDataDisplay+1)+0,w
 10956  0EBC  0866               	movwf	(LCD_write_char@dat)
 10957  0EBD  00E1               	movlw	low(09h)
 10958  0EBE  3009               	fcall	_LCD_write_char
 10959  0EBF  160A  118A  236E  120A  158A  	line	187
 10960                           	
 10961                           l3969:	
 10962  0EC4                     ;DS1302.c: 187: LCD_write_char(10, 2, MINUTE_unit + '0');
 10963                           	movlw	low(02h)
 10964  0EC4  3002               	bcf	status, 5	;RP0=0, select bank0
 10965  0EC5  1283               	bcf	status, 6	;RP1=0, select bank0
 10966  0EC6  1303               	movwf	(??_TimeDataDisplay+0)+0
 10967  0EC7  00E5               	movf	(??_TimeDataDisplay+0)+0,w
 10968  0EC8  0865               	movwf	(LCD_write_char@y)
 10969  0EC9  00E0               	movf	(_MINUTE_unit),w
 10970  0ECA  082E               	addlw	030h
 10971  0ECB  3E30               	movwf	(??_TimeDataDisplay+1)+0
 10972  0ECC  00E6               	movf	(??_TimeDataDisplay+1)+0,w
 10973  0ECD  0866               	movwf	(LCD_write_char@dat)
 10974  0ECE  00E1               	movlw	low(0Ah)
 10975  0ECF  300A               	fcall	_LCD_write_char
 10976  0ED0  160A  118A  236E  120A  158A  	line	188
 10977                           	
 10978                           l3971:	
 10979  0ED5                     ;DS1302.c: 188: LCD_write_char(12, 2, SECOND_ten + '0');
 10980                           	movlw	low(02h)
 10981  0ED5  3002               	bcf	status, 5	;RP0=0, select bank0
 10982  0ED6  1283               	bcf	status, 6	;RP1=0, select bank0
 10983  0ED7  1303               	movwf	(??_TimeDataDisplay+0)+0
 10984  0ED8  00E5               	movf	(??_TimeDataDisplay+0)+0,w
 10985  0ED9  0865               	movwf	(LCD_write_char@y)
 10986  0EDA  00E0               	movf	(_SECOND_ten),w
 10987  0EDB  082D               	addlw	030h
 10988  0EDC  3E30               	movwf	(??_TimeDataDisplay+1)+0
 10989  0EDD  00E6               	movf	(??_TimeDataDisplay+1)+0,w
 10990  0EDE  0866               	movwf	(LCD_write_char@dat)
 10991  0EDF  00E1               	movlw	low(0Ch)
 10992  0EE0  300C               	fcall	_LCD_write_char
 10993  0EE1  160A  118A  236E  120A  158A  	line	189
 10994                           	
 10995                           l3973:	
 10996  0EE6                     ;DS1302.c: 189: LCD_write_char(13, 2, SECOND_unit + '0');
 10997                           	movlw	low(02h)
 10998  0EE6  3002               	bcf	status, 5	;RP0=0, select bank0
 10999  0EE7  1283               	bcf	status, 6	;RP1=0, select bank0
 11000  0EE8  1303               	movwf	(??_TimeDataDisplay+0)+0
 11001  0EE9  00E5               	movf	(??_TimeDataDisplay+0)+0,w
 11002  0EEA  0865               	movwf	(LCD_write_char@y)
 11003  0EEB  00E0               	movf	(_SECOND_unit),w
 11004  0EEC  082C               	addlw	030h
 11005  0EED  3E30               	movwf	(??_TimeDataDisplay+1)+0
 11006  0EEE  00E6               	movf	(??_TimeDataDisplay+1)+0,w
 11007  0EEF  0866               	movwf	(LCD_write_char@dat)
 11008  0EF0  00E1               	movlw	low(0Dh)
 11009  0EF1  300D               	fcall	_LCD_write_char
 11010  0EF2  160A  118A  236E  120A  158A  	line	190
 11011                           	
 11012                           l257:	
 11013  0EF7                     	return
 11014  0EF7  0008               	opt stack 0
 11015                           GLOBAL	__end_of_TimeDataDisplay
 11016                           	__end_of_TimeDataDisplay:
 11017  0EF8                     	signat	_TimeDataDisplay,89
 11018                           	global	_Ds1302WriteTime
 11019                           
 11020 ;; *************** function _Ds1302WriteTime *****************
 11021 ;; Defined at:
 11022 ;;		line 125 in file "DS1302.c"
 11023 ;; Parameters:    Size  Location     Type
 11024 ;;  n               1    wreg     unsigned char 
 11025 ;;  dat             1    6[COMMON] unsigned char 
 11026 ;; Auto vars:     Size  Location     Type
 11027 ;;  n               1    8[COMMON] unsigned char 
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  1    wreg      void 
 11030 ;; Registers used:
 11031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11032 ;; Tracked objects:
 11033 ;;		On entry : 0/0
 11034 ;;		On exit  : 0/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11037 ;;      Params:         1       0       0       0       0
 11038 ;;      Locals:         1       0       0       0       0
 11039 ;;      Temps:          1       0       0       0       0
 11040 ;;      Totals:         3       0       0       0       0
 11041 ;;Total ram usage:        3 bytes
 11042 ;; Hardware stack levels used:    1
 11043 ;; Hardware stack levels required when called:    2
 11044 ;; This function calls:
 11045 ;;		_Ds1302Write
 11046 ;; This function is called by:
 11047 ;;		_ModeSwitch
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
 11051                           	line	125
 11052                           global __ptext19
 11053                           __ptext19:	;psect for function _Ds1302WriteTime
 11054  15A9                     psect	text19
 11055                           	file	"DS1302.c"
 11056                           	line	125
 11057                           	global	__size_of_Ds1302WriteTime
 11058                           	__size_of_Ds1302WriteTime	equ	__end_of_Ds1302WriteTime-_Ds1302WriteTime
 11059  002E                     	
 11060                           _Ds1302WriteTime:	
 11061  15A9                     ;incstack = 0
 11062                           	opt	stack 4
 11063                           ; Regs used in _Ds1302WriteTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11064                           ;Ds1302WriteTime@n stored from wreg
 11065                           	movwf	(Ds1302WriteTime@n)
 11066  15A9  00F8               	line	126
 11067                           	
 11068                           l2823:	
 11069  15AA                     ;DS1302.c: 126: PORTCbits.RC3 = 0;
 11070                           	bcf	status, 5	;RP0=0, select bank0
 11071  15AA  1283               	bcf	status, 6	;RP1=0, select bank0
 11072  15AB  1303               	bcf	(7),3	;volatile
 11073  15AC  1187               	line	127
 11074                           ;DS1302.c: 127: PORTCbits.RC4 = 0;
 11075                           	bcf	(7),4	;volatile
 11076  15AD  1207               	line	128
 11077                           	
 11078                           l2825:	
 11079  15AE                     ;DS1302.c: 128: Ds1302Write(0x8E, 0);
 11080                           	clrf	(Ds1302Write@dat)
 11081  15AE  01F2               	movlw	low(08Eh)
 11082  15AF  308E               	fcall	_Ds1302Write
 11083  15B0  120A  158A  2477  160A  118A  	line	129
 11084                           	
 11085                           l2827:	
 11086  15B5                     ;DS1302.c: 129: Ds1302Write(WriteTimeAddr[n], dat);
 11087                           	movf	(Ds1302WriteTime@dat),w
 11088  15B5  0876               	movwf	(??_Ds1302WriteTime+0)+0
 11089  15B6  00F7               	movf	(??_Ds1302WriteTime+0)+0,w
 11090  15B7  0877               	movwf	(Ds1302Write@dat)
 11091  15B8  00F2               	movf	(Ds1302WriteTime@n),w
 11092  15B9  0878               	addlw	low(((_WriteTimeAddr)|8000h))
 11093  15BA  3EC8               	movwf	fsr0
 11094  15BB  0084               	movlw	high(((_WriteTimeAddr)|8000h))
 11095  15BC  308A               	skipnc
 11096  15BD  1803               	addlw	1
 11097  15BE  3E01               	bcf	status, 5	;RP0=0, select bank0
 11098  15BF  1283               	bcf	status, 6	;RP1=0, select bank0
 11099  15C0  1303               	movwf	btemp+1
 11100  15C1  00FF               	fcall	stringtab
 11101  15C2  120A  158A  2000  160A  118A  	fcall	_Ds1302Write
 11102  15C7  120A  158A  2477  160A  118A  	line	130
 11103                           	
 11104                           l2829:	
 11105  15CC                     ;DS1302.c: 130: Ds1302Write(0x8E, 0x80);
 11106                           	movlw	low(080h)
 11107  15CC  3080               	movwf	(??_Ds1302WriteTime+0)+0
 11108  15CD  00F7               	movf	(??_Ds1302WriteTime+0)+0,w
 11109  15CE  0877               	movwf	(Ds1302Write@dat)
 11110  15CF  00F2               	movlw	low(08Eh)
 11111  15D0  308E               	fcall	_Ds1302Write
 11112  15D1  120A  158A  2477  160A  118A  	line	131
 11113                           	
 11114                           l243:	
 11115  15D6                     	return
 11116  15D6  0008               	opt stack 0
 11117                           GLOBAL	__end_of_Ds1302WriteTime
 11118                           	__end_of_Ds1302WriteTime:
 11119  15D7                     	signat	_Ds1302WriteTime,8313
 11120                           	global	_Ds1302ReadTimeBCD
 11121                           
 11122 ;; *************** function _Ds1302ReadTimeBCD *****************
 11123 ;; Defined at:
 11124 ;;		line 142 in file "DS1302.c"
 11125 ;; Parameters:    Size  Location     Type
 11126 ;;		None
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;  n               1    0[BANK0 ] unsigned char 
 11129 ;; Return value:  Size  Location     Type
 11130 ;;                  1    wreg      void 
 11131 ;; Registers used:
 11132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11133 ;; Tracked objects:
 11134 ;;		On entry : 0/0
 11135 ;;		On exit  : 0/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11138 ;;      Params:         0       0       0       0       0
 11139 ;;      Locals:         0       1       0       0       0
 11140 ;;      Temps:          1       0       0       0       0
 11141 ;;      Totals:         1       1       0       0       0
 11142 ;;Total ram usage:        2 bytes
 11143 ;; Hardware stack levels used:    1
 11144 ;; Hardware stack levels required when called:    2
 11145 ;; This function calls:
 11146 ;;		_Ds1302Read
 11147 ;; This function is called by:
 11148 ;;		_ModeSwitch
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
 11152                           	line	142
 11153                           global __ptext20
 11154                           __ptext20:	;psect for function _Ds1302ReadTimeBCD
 11155  15D7                     psect	text20
 11156                           	file	"DS1302.c"
 11157                           	line	142
 11158                           	global	__size_of_Ds1302ReadTimeBCD
 11159                           	__size_of_Ds1302ReadTimeBCD	equ	__end_of_Ds1302ReadTimeBCD-_Ds1302ReadTimeBCD
 11160  0031                     	
 11161                           _Ds1302ReadTimeBCD:	
 11162  15D7                     ;incstack = 0
 11163                           	opt	stack 4
 11164                           ; Regs used in _Ds1302ReadTimeBCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]

 11165                           	line	144
 11166                           	
 11167                           l3937:	
 11168  15D7                     ;DS1302.c: 143: unsigned char n;;DS1302.c: 144: for (n = 0; n < 7; n++)
 11169                           	bcf	status, 5	;RP0=0, select bank0
 11170  15D7  1283               	bcf	status, 6	;RP1=0, select bank0
 11171  15D8  1303               	clrf	(Ds1302ReadTimeBCD@n)
 11172  15D9  01DD               	
 11173                           l3939:	
 11174  15DA                     	movlw	low(07h)
 11175  15DA  3007               	subwf	(Ds1302ReadTimeBCD@n),w
 11176  15DB  025D               	skipc
 11177  15DC  1C03               	goto	u4771
 11178  15DD  2DDF               	goto	u4770
 11179  15DE  2DE0               u4771:
 11180  15DF                     	goto	l3943
 11181  15DF  2DE2               u4770:
 11182  15E0                     	goto	l251
 11183  15E0  2E07               	
 11184                           l3941:	
 11185  15E1                     	goto	l251
 11186  15E1  2E07               	line	145
 11187                           	
 11188                           l249:	
 11189  15E2                     	line	146
 11190                           	
 11191                           l3943:	
 11192  15E2                     ;DS1302.c: 145: {;DS1302.c: 146: tempTime_Ds1302[n] = Ds1302Read(ReadTimeAddr[n]);
 11193                           	movf	(Ds1302ReadTimeBCD@n),w
 11194  15E2  085D               	addlw	low(((_ReadTimeAddr)|8000h))
 11195  15E3  3ECF               	movwf	fsr0
 11196  15E4  0084               	movlw	high(((_ReadTimeAddr)|8000h))
 11197  15E5  308A               	skipnc
 11198  15E6  1803               	addlw	1
 11199  15E7  3E01               	movwf	btemp+1
 11200  15E8  00FF               	fcall	stringtab
 11201  15E9  120A  158A  2000  160A  118A  	fcall	_Ds1302Read
 11202  15EE  120A  118A  276D  160A  118A  	movwf	(??_Ds1302ReadTimeBCD+0)+0
 11203  15F3  00F9               	bcf	status, 5	;RP0=0, select bank0
 11204  15F4  1283               	bcf	status, 6	;RP1=0, select bank0
 11205  15F5  1303               	movf	(Ds1302ReadTimeBCD@n),w
 11206  15F6  085D               	addlw	low(_tempTime_Ds1302|((0x0)<<8))&0ffh
 11207  15F7  3E20               	movwf	fsr0
 11208  15F8  0084               	movf	(??_Ds1302ReadTimeBCD+0)+0,w
 11209  15F9  0879               	bcf	status, 7	;select IRP bank0
 11210  15FA  1383               	movwf	indf
 11211  15FB  0080               	line	144
 11212                           	
 11213                           l3945:	
 11214  15FC                     	movlw	low(01h)
 11215  15FC  3001               	movwf	(??_Ds1302ReadTimeBCD+0)+0
 11216  15FD  00F9               	movf	(??_Ds1302ReadTimeBCD+0)+0,w
 11217  15FE  0879               	addwf	(Ds1302ReadTimeBCD@n),f
 11218  15FF  07DD               	
 11219                           l3947:	
 11220  1600                     	movlw	low(07h)
 11221  1600  3007               	subwf	(Ds1302ReadTimeBCD@n),w
 11222  1601  025D               	skipc
 11223  1602  1C03               	goto	u4781
 11224  1603  2E05               	goto	u4780
 11225  1604  2E06               u4781:
 11226  1605                     	goto	l3943
 11227  1605  2DE2               u4780:
 11228  1606                     	goto	l251
 11229  1606  2E07               	
 11230                           l250:	
 11231  1607                     	line	148
 11232                           	
 11233                           l251:	
 11234  1607                     	return
 11235  1607  0008               	opt stack 0
 11236                           GLOBAL	__end_of_Ds1302ReadTimeBCD
 11237                           	__end_of_Ds1302ReadTimeBCD:
 11238  1608                     	signat	_Ds1302ReadTimeBCD,89
 11239                           	global	_Ds1302Read
 11240                           
 11241 ;; *************** function _Ds1302Read *****************
 11242 ;; Defined at:
 11243 ;;		line 62 in file "DS1302.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;  addr            1    wreg     unsigned char 
 11246 ;; Auto vars:     Size  Location     Type
 11247 ;;  addr            1    5[COMMON] unsigned char 
 11248 ;;  n               1    8[COMMON] unsigned char 
 11249 ;;  dat             1    7[COMMON] unsigned char 
 11250 ;;  dat1            1    6[COMMON] unsigned char 
 11251 ;; Return value:  Size  Location     Type
 11252 ;;                  1    wreg      unsigned char 
 11253 ;; Registers used:
 11254 ;;		wreg, status,2, status,0
 11255 ;; Tracked objects:
 11256 ;;		On entry : 0/0
 11257 ;;		On exit  : 0/0
 11258 ;;		Unchanged: 0/0
 11259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11260 ;;      Params:         0       0       0       0       0
 11261 ;;      Locals:         4       0       0       0       0
 11262 ;;      Temps:          3       0       0       0       0
 11263 ;;      Totals:         7       0       0       0       0
 11264 ;;Total ram usage:        7 bytes
 11265 ;; Hardware stack levels used:    1
 11266 ;; Hardware stack levels required when called:    1
 11267 ;; This function calls:
 11268 ;;		Nothing
 11269 ;; This function is called by:
 11270 ;;		_Ds1302ReadTimeBCD
 11271 ;; This function uses a non-reentrant model
 11272 ;;
 11273                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
 11274                           	line	62
 11275                           global __ptext21
 11276                           __ptext21:	;psect for function _Ds1302Read
 11277  076D                     psect	text21
 11278                           	file	"DS1302.c"
 11279                           	line	62
 11280                           	global	__size_of_Ds1302Read
 11281                           	__size_of_Ds1302Read	equ	__end_of_Ds1302Read-_Ds1302Read
 11282  0071                     	
 11283                           _Ds1302Read:	
 11284  076D                     ;incstack = 0
 11285                           	opt	stack 4
 11286                           ; Regs used in _Ds1302Read: [wreg+status,2+status,0]
 11287                           ;Ds1302Read@addr stored from wreg
 11288                           	movwf	(Ds1302Read@addr)
 11289  076D  00F5               	line	64
 11290                           	
 11291                           l3861:	
 11292  076E                     ;DS1302.c: 63: unsigned char n, dat, dat1;;DS1302.c: 64: PORTCbits.RC3 = 0;
 11293                           	bcf	status, 5	;RP0=0, select bank0
 11294  076E  1283               	bcf	status, 6	;RP1=0, select bank0
 11295  076F  1303               	bcf	(7),3	;volatile
 11296  0770  1187               	line	65
 11297                           ;DS1302.c: 65: __nop();
 11298                           	opt	asmopt_push
 11299                           	opt	asmopt_off
 11300                           	nop
 11301  0771  0000               	opt	asmopt_pop
 11302                           	line	67
 11303                           ;DS1302.c: 67: PORTCbits.RC4 = 0;
 11304                           	bcf	status, 5	;RP0=0, select bank0
 11305  0772  1283               	bcf	status, 6	;RP1=0, select bank0
 11306  0773  1303               	bcf	(7),4	;volatile
 11307  0774  1207               	line	68
 11308                           ;DS1302.c: 68: __nop();
 11309                           	opt	asmopt_push
 11310                           	opt	asmopt_off
 11311                           	nop
 11312  0775  0000               	opt	asmopt_pop
 11313                           	line	69
 11314                           ;DS1302.c: 69: PORTCbits.RC3 = 1;
 11315                           	bcf	status, 5	;RP0=0, select bank0
 11316  0776  1283               	bcf	status, 6	;RP1=0, select bank0
 11317  0777  1303               	bsf	(7),3	;volatile
 11318  0778  1587               	line	70
 11319                           ;DS1302.c: 70: __nop();
 11320                           	opt	asmopt_push
 11321                           	opt	asmopt_off
 11322                           	nop
 11323  0779  0000               	opt	asmopt_pop
 11324                           	line	72
 11325                           	
 11326                           l3863:	
 11327  077A                     ;DS1302.c: 72: for (n = 0; n < 8; n++)
 11328                           	clrf	(Ds1302Read@n)
 11329  077A  01F8               	
 11330                           l3865:	
 11331  077B                     	movlw	low(08h)
 11332  077B  3008               	subwf	(Ds1302Read@n),w
 11333  077C  0278               	skipc
 11334  077D  1C03               	goto	u4681
 11335  077E  2F80               	goto	u4680
 11336  077F  2F81               u4681:
 11337  0780                     	goto	l3869
 11338  0780  2F83               u4680:
 11339  0781                     	goto	l232
 11340  0781  2FA1               	
 11341                           l3867:	
 11342  0782                     	goto	l232
 11343  0782  2FA1               	line	73
 11344                           	
 11345                           l231:	
 11346  0783                     	line	74
 11347                           	
 11348                           l3869:	
 11349  0783                     ;DS1302.c: 73: {;DS1302.c: 74: PORTCbits.RC5 = addr & 0x01;
 11350                           	movf	(Ds1302Read@addr),w
 11351  0783  0875               	andlw	01h
 11352  0784  3901               	movwf	(??_Ds1302Read+0)+0
 11353  0785  00F2               	swapf	(??_Ds1302Read+0)+0,f
 11354  0786  0EF2               	rlf	(??_Ds1302Read+0)+0,f
 11355  0787  0DF2               	bcf	status, 5	;RP0=0, select bank0
 11356  0788  1283               	bcf	status, 6	;RP1=0, select bank0
 11357  0789  1303               	movf	(7),w	;volatile
 11358  078A  0807               	xorwf	(??_Ds1302Read+0)+0,w
 11359  078B  0672               	andlw	not (((1<<1)-1)<<5)
 11360  078C  39DF               	xorwf	(??_Ds1302Read+0)+0,w
 11361  078D  0672               	movwf	(7)	;volatile
 11362  078E  0087               	line	75
 11363                           	
 11364                           l3871:	
 11365  078F                     ;DS1302.c: 75: addr >>= 1;
 11366                           	clrc
 11367  078F  1003               	rrf	(Ds1302Read@addr),f
 11368  0790  0CF5               
 11369                           	line	76
 11370                           	
 11371                           l3873:	
 11372  0791                     ;DS1302.c: 76: PORTCbits.RC4 = 1;
 11373                           	bsf	(7),4	;volatile
 11374  0791  1607               	line	77
 11375                           	
 11376                           l3875:	
 11377  0792                     ;DS1302.c: 77: __nop();
 11378                           	opt	asmopt_push
 11379                           	opt	asmopt_off
 11380                           	nop
 11381  0792  0000               	opt	asmopt_pop
 11382                           	line	78
 11383                           	
 11384                           l3877:	
 11385  0793                     ;DS1302.c: 78: PORTCbits.RC4 = 0;
 11386                           	bcf	status, 5	;RP0=0, select bank0
 11387  0793  1283               	bcf	status, 6	;RP1=0, select bank0
 11388  0794  1303               	bcf	(7),4	;volatile
 11389  0795  1207               	line	79
 11390                           	
 11391                           l3879:	
 11392  0796                     ;DS1302.c: 79: __nop();
 11393                           	opt	asmopt_push
 11394                           	opt	asmopt_off
 11395                           	nop
 11396  0796  0000               	opt	asmopt_pop
 11397                           	line	72
 11398                           	
 11399                           l3881:	
 11400  0797                     	movlw	low(01h)
 11401  0797  3001               	movwf	(??_Ds1302Read+0)+0
 11402  0798  00F2               	movf	(??_Ds1302Read+0)+0,w
 11403  0799  0872               	addwf	(Ds1302Read@n),f
 11404  079A  07F8               	movlw	low(08h)
 11405  079B  3008               	subwf	(Ds1302Read@n),w
 11406  079C  0278               	skipc
 11407  079D  1C03               	goto	u4691
 11408  079E  2FA0               	goto	u4690
 11409  079F  2FA1               u4691:
 11410  07A0                     	goto	l3869
 11411  07A0  2F83               u4690:
 11412  07A1                     	
 11413                           l232:	
 11414  07A1                     	line	81
 11415                           ;DS1302.c: 80: };DS1302.c: 81: __nop();
 11416                           	opt	asmopt_push
 11417                           	opt	asmopt_off
 11418                           	nop
 11419  07A1  0000               	opt	asmopt_pop
 11420                           	line	82
 11421                           ;DS1302.c: 82: TRISCbits.TRISC5 = 1;
 11422                           	bsf	status, 5	;RP0=1, select bank1
 11423  07A2  1683               	bcf	status, 6	;RP1=0, select bank1
 11424  07A3  1303               	bsf	(135)^080h,5	;volatile
 11425  07A4  1687               	line	83
 11426                           	
 11427                           l3883:	
 11428  07A5                     ;DS1302.c: 83: for (n = 0; n < 8; n++)
 11429                           	clrf	(Ds1302Read@n)
 11430  07A5  01F8               	
 11431                           l3885:	
 11432  07A6                     	movlw	low(08h)
 11433  07A6  3008               	subwf	(Ds1302Read@n),w
 11434  07A7  0278               	skipc
 11435  07A8  1C03               	goto	u4701
 11436  07A9  2FAB               	goto	u4700
 11437  07AA  2FAC               u4701:
 11438  07AB                     	goto	l3889
 11439  07AB  2FAE               u4700:
 11440  07AC                     	goto	l234
 11441  07AC  2FD4               	
 11442                           l3887:	
 11443  07AD                     	goto	l234
 11444  07AD  2FD4               	line	84
 11445                           	
 11446                           l233:	
 11447  07AE                     	line	85
 11448                           	
 11449                           l3889:	
 11450  07AE                     ;DS1302.c: 84: {;DS1302.c: 85: dat1 = PORTCbits.RC5;
 11451                           	movlw	0
 11452  07AE  3000               	bcf	status, 5	;RP0=0, select bank0
 11453  07AF  1283               	bcf	status, 6	;RP1=0, select bank0
 11454  07B0  1303               	btfsc	(7),5	;volatile
 11455  07B1  1A87               	movlw	1
 11456  07B2  3001               	movwf	(Ds1302Read@dat1)
 11457  07B3  00F6               	line	86
 11458                           	
 11459                           l3891:	
 11460  07B4                     ;DS1302.c: 86: dat = (dat >> 1) | (dat1 << 7);
 11461                           	movf	(Ds1302Read@dat1),w
 11462  07B4  0876               	movwf	(??_Ds1302Read+0)+0
 11463  07B5  00F2               	movlw	07h
 11464  07B6  3007               u4715:
 11465  07B7                     	clrc
 11466  07B7  1003               	rlf	(??_Ds1302Read+0)+0,f
 11467  07B8  0DF2               	addlw	-1
 11468  07B9  3EFF               	skipz
 11469  07BA  1D03               	goto	u4715
 11470  07BB  2FB7               	movf	(Ds1302Read@dat),w
 11471  07BC  0877               	movwf	(??_Ds1302Read+1)+0
 11472  07BD  00F3               	clrc
 11473  07BE  1003               	rrf	(??_Ds1302Read+1)+0,w
 11474  07BF  0C73               	iorwf	0+(??_Ds1302Read+0)+0,w
 11475  07C0  0472               	movwf	(??_Ds1302Read+2)+0
 11476  07C1  00F4               	movf	(??_Ds1302Read+2)+0,w
 11477  07C2  0874               	movwf	(Ds1302Read@dat)
 11478  07C3  00F7               	line	87
 11479                           	
 11480                           l3893:	
 11481  07C4                     ;DS1302.c: 87: PORTCbits.RC4 = 1;
 11482                           	bsf	(7),4	;volatile
 11483  07C4  1607               	line	88
 11484                           	
 11485                           l3895:	
 11486  07C5                     ;DS1302.c: 88: __nop();
 11487                           	opt	asmopt_push
 11488                           	opt	asmopt_off
 11489                           	nop
 11490  07C5  0000               	opt	asmopt_pop
 11491                           	line	89
 11492                           	
 11493                           l3897:	
 11494  07C6                     ;DS1302.c: 89: PORTCbits.RC4 = 0;
 11495                           	bcf	status, 5	;RP0=0, select bank0
 11496  07C6  1283               	bcf	status, 6	;RP1=0, select bank0
 11497  07C7  1303               	bcf	(7),4	;volatile
 11498  07C8  1207               	line	90
 11499                           	
 11500                           l3899:	
 11501  07C9                     ;DS1302.c: 90: __nop();
 11502                           	opt	asmopt_push
 11503                           	opt	asmopt_off
 11504                           	nop
 11505  07C9  0000               	opt	asmopt_pop
 11506                           	line	83
 11507                           	
 11508                           l3901:	
 11509  07CA                     	movlw	low(01h)
 11510  07CA  3001               	movwf	(??_Ds1302Read+0)+0
 11511  07CB  00F2               	movf	(??_Ds1302Read+0)+0,w
 11512  07CC  0872               	addwf	(Ds1302Read@n),f
 11513  07CD  07F8               	
 11514                           l3903:	
 11515  07CE                     	movlw	low(08h)
 11516  07CE  3008               	subwf	(Ds1302Read@n),w
 11517  07CF  0278               	skipc
 11518  07D0  1C03               	goto	u4721
 11519  07D1  2FD3               	goto	u4720
 11520  07D2  2FD4               u4721:
 11521  07D3                     	goto	l3889
 11522  07D3  2FAE               u4720:
 11523  07D4                     	
 11524                           l234:	
 11525  07D4                     	line	93
 11526                           ;DS1302.c: 91: };DS1302.c: 93: PORTCbits.RC3 = 0;
 11527                           	bcf	status, 5	;RP0=0, select bank0
 11528  07D4  1283               	bcf	status, 6	;RP1=0, select bank0
 11529  07D5  1303               	bcf	(7),3	;volatile
 11530  07D6  1187               	line	100
 11531                           ;DS1302.c: 100: __nop();
 11532                           	opt	asmopt_push
 11533                           	opt	asmopt_off
 11534                           	nop
 11535  07D7  0000               	opt	asmopt_pop
 11536                           	line	101
 11537                           ;DS1302.c: 101: TRISCbits.TRISC5 = 0;
 11538                           	bsf	status, 5	;RP0=1, select bank1
 11539  07D8  1683               	bcf	status, 6	;RP1=0, select bank1
 11540  07D9  1303               	bcf	(135)^080h,5	;volatile
 11541  07DA  1287               	line	102
 11542                           	
 11543                           l3905:	
 11544  07DB                     ;DS1302.c: 102: return dat;
 11545                           	movf	(Ds1302Read@dat),w
 11546  07DB  0877               	goto	l235
 11547  07DC  2FDD               	
 11548                           l3907:	
 11549  07DD                     	line	103
 11550                           	
 11551                           l235:	
 11552  07DD                     	return
 11553  07DD  0008               	opt stack 0
 11554                           GLOBAL	__end_of_Ds1302Read
 11555                           	__end_of_Ds1302Read:
 11556  07DE                     	signat	_Ds1302Read,4217
 11557                           	global	_ClearScreenOnce
 11558                           
 11559 ;; *************** function _ClearScreenOnce *****************
 11560 ;; Defined at:
 11561 ;;		line 32 in file "KEY.c"
 11562 ;; Parameters:    Size  Location     Type
 11563 ;;		None
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;		None
 11566 ;; Return value:  Size  Location     Type
 11567 ;;                  1    wreg      void 
 11568 ;; Registers used:
 11569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/0
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11575 ;;      Params:         0       0       0       0       0
 11576 ;;      Locals:         0       0       0       0       0
 11577 ;;      Temps:          0       1       0       0       0
 11578 ;;      Totals:         0       1       0       0       0
 11579 ;;Total ram usage:        1 bytes
 11580 ;; Hardware stack levels used:    1
 11581 ;; Hardware stack levels required when called:    6
 11582 ;; This function calls:
 11583 ;;		_FrameworkDisplay
 11584 ;;		_LCD_en_command
 11585 ;;		_LCD_write_string
 11586 ;;		_aFrameworkDisplay
 11587 ;; This function is called by:
 11588 ;;		_main
 11589 ;;		_ModeSwitch
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
 11593                           	file	"KEY.c"
 11594                           	line	32
 11595                           global __ptext22
 11596                           __ptext22:	;psect for function _ClearScreenOnce
 11597  0BBC                     psect	text22
 11598                           	file	"KEY.c"
 11599                           	line	32
 11600                           	global	__size_of_ClearScreenOnce
 11601                           	__size_of_ClearScreenOnce	equ	__end_of_ClearScreenOnce-_ClearScreenOnce
 11602  005B                     	
 11603                           _ClearScreenOnce:	
 11604  0BBC                     ;incstack = 0
 11605                           	opt	stack 0
 11606                           ; Regs used in _ClearScreenOnce: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11607                           	line	33
 11608                           	
 11609                           l3913:	
 11610  0BBC                     ;KEY.c: 33: if (clear_flag) {
 11611                           	btfss	(_clear_flag/8),(_clear_flag)&7
 11612  0BBC  1C7A               	goto	u4731
 11613  0BBD  2BBF               	goto	u4730
 11614  0BBE  2BC0               u4731:
 11615  0BBF                     	goto	l421
 11616  0BBF  2C16               u4730:
 11617  0BC0                     	line	34
 11618                           	
 11619                           l3915:	
 11620  0BC0                     ;KEY.c: 34: LCD_en_command(0x01);
 11621                           	movlw	low(01h)
 11622  0BC0  3001               	fcall	_LCD_en_command
 11623  0BC1  160A  118A  2608  120A  158A  	line	35
 11624                           	
 11625                           l3917:	
 11626  0BC6                     ;KEY.c: 35: cursor_addr = 0;
 11627                           	bcf	status, 5	;RP0=0, select bank0
 11628  0BC6  1283               	bcf	status, 6	;RP1=0, select bank0
 11629  0BC7  1303               	clrf	(_cursor_addr)
 11630  0BC8  01AA               	line	36
 11631                           	
 11632                           l3919:	
 11633  0BC9                     ;KEY.c: 36: if (isMusicMode) {
 11634                           	btfss	(_isMusicMode/8),(_isMusicMode)&7
 11635  0BC9  1CFA               	goto	u4741
 11636  0BCA  2BCC               	goto	u4740
 11637  0BCB  2BCD               u4741:
 11638  0BCC                     	goto	l3925
 11639  0BCC  2BEE               u4740:
 11640  0BCD                     	line	38
 11641                           	
 11642                           l3921:	
 11643  0BCD                     ;KEY.c: 38: LCD_write_string(3, 1, "MUSIC");
 11644                           	clrf	(LCD_write_string@Y)
 11645  0BCD  01E0               	incf	(LCD_write_string@Y),f
 11646  0BCE  0AE0               	movlw	low(((STR_15)|8000h))
 11647  0BCF  3034               	movwf	(LCD_write_string@s)
 11648  0BD0  00E1               	movlw	high(((STR_15)|8000h))
 11649  0BD1  308B               	movwf	((LCD_write_string@s))+1
 11650  0BD2  00E2               	movlw	low(03h)
 11651  0BD3  3003               	fcall	_LCD_write_string
 11652  0BD4  160A  118A  2708  120A  158A  	line	39
 11653                           ;KEY.c: 39: LCD_write_string(0, 2, "NUM:");
 11654                           	movlw	low(02h)
 11655  0BD9  3002               	bcf	status, 5	;RP0=0, select bank0
 11656  0BDA  1283               	bcf	status, 6	;RP1=0, select bank0
 11657  0BDB  1303               	movwf	(??_ClearScreenOnce+0)+0
 11658  0BDC  00E6               	movf	(??_ClearScreenOnce+0)+0,w
 11659  0BDD  0866               	movwf	(LCD_write_string@Y)
 11660  0BDE  00E0               	movlw	low(((STR_16)|8000h))
 11661  0BDF  303A               	movwf	(LCD_write_string@s)
 11662  0BE0  00E1               	movlw	high(((STR_16)|8000h))
 11663  0BE1  308B               	movwf	((LCD_write_string@s))+1
 11664  0BE2  00E2               	movlw	low(0)
 11665  0BE3  3000               	fcall	_LCD_write_string
 11666  0BE4  160A  118A  2708  120A  158A  	line	40
 11667                           	
 11668                           l3923:	
 11669  0BE9                     ;KEY.c: 40: MusicPosition = 0;
 11670                           	bcf	status, 5	;RP0=0, select bank0
 11671  0BE9  1283               	bcf	status, 6	;RP1=0, select bank0
 11672  0BEA  1303               	clrf	(_MusicPosition)
 11673  0BEB  01A7               	clrf	(_MusicPosition+1)
 11674  0BEC  01A8               	line	41
 11675                           ;KEY.c: 41: } else {
 11676                           	goto	l3935
 11677  0BED  2C14               	
 11678                           l415:	
 11679  0BEE                     	line	42
 11680                           	
 11681                           l3925:	
 11682  0BEE                     ;KEY.c: 42: if (Mode == 0 || Mode == 1) {
 11683                           	movf	((_Mode)),w
 11684  0BEE  082B               	btfsc	status,2
 11685  0BEF  1903               	goto	u4751
 11686  0BF0  2BF2               	goto	u4750
 11687  0BF1  2BF3               u4751:
 11688  0BF2                     	goto	l3929
 11689  0BF2  2BF9               u4750:
 11690  0BF3                     	
 11691                           l3927:	
 11692  0BF3                     		decf	((_Mode)),w
 11693  0BF3  032B               	btfss	status,2
 11694  0BF4  1D03               	goto	u4761
 11695  0BF5  2BF7               	goto	u4760
 11696  0BF6  2BF8               u4761:
 11697  0BF7                     	goto	l3931
 11698  0BF7  2BFF               u4760:
 11699  0BF8                     	goto	l3929
 11700  0BF8  2BF9               	
 11701                           l419:	
 11702  0BF9                     	line	43
 11703                           	
 11704                           l3929:	
 11705  0BF9                     ;KEY.c: 43: FrameworkDisplay();
 11706                           	fcall	_FrameworkDisplay
 11707  0BF9  160A  118A  2644  120A  158A  	line	44
 11708                           ;KEY.c: 44: } else {
 11709                           	goto	l3935
 11710  0BFE  2C14               	
 11711                           l417:	
 11712  0BFF                     	line	45
 11713                           	
 11714                           l3931:	
 11715  0BFF                     ;KEY.c: 45: aFrameworkDisplay();
 11716                           	fcall	_aFrameworkDisplay
 11717  0BFF  160A  118A  24C6  120A  158A  	line	46
 11718                           	
 11719                           l3933:	
 11720  0C04                     ;KEY.c: 46: LCD_write_string(1, 1, "SETTING--ALARM");
 11721                           	bcf	status, 5	;RP0=0, select bank0
 11722  0C04  1283               	bcf	status, 6	;RP1=0, select bank0
 11723  0C05  1303               	clrf	(LCD_write_string@Y)
 11724  0C06  01E0               	incf	(LCD_write_string@Y),f
 11725  0C07  0AE0               	movlw	low(((STR_17)|8000h))
 11726  0C08  30FB               	movwf	(LCD_write_string@s)
 11727  0C09  00E1               	movlw	high(((STR_17)|8000h))
 11728  0C0A  308A               	movwf	((LCD_write_string@s))+1
 11729  0C0B  00E2               	movlw	low(01h)
 11730  0C0C  3001               	fcall	_LCD_write_string
 11731  0C0D  160A  118A  2708  120A  158A  	goto	l3935
 11732  0C12  2C14               	line	47
 11733                           	
 11734                           l420:	
 11735  0C13                     	goto	l3935
 11736  0C13  2C14               	line	48
 11737                           	
 11738                           l416:	
 11739  0C14                     	line	49
 11740                           	
 11741                           l3935:	
 11742  0C14                     ;KEY.c: 47: };KEY.c: 48: };KEY.c: 49: clear_flag = 0;
 11743                           	bcf	(_clear_flag/8),(_clear_flag)&7
 11744  0C14  107A               	goto	l421
 11745  0C15  2C16               	line	50
 11746                           	
 11747                           l414:	
 11748  0C16                     	line	51
 11749                           	
 11750                           l421:	
 11751  0C16                     	return
 11752  0C16  0008               	opt stack 0
 11753                           GLOBAL	__end_of_ClearScreenOnce
 11754                           	__end_of_ClearScreenOnce:
 11755  0C17                     	signat	_ClearScreenOnce,89
 11756                           	global	_aFrameworkDisplay
 11757                           
 11758 ;; *************** function _aFrameworkDisplay *****************
 11759 ;; Defined at:
 11760 ;;		line 203 in file "DS1302.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;		None
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;		None
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  1    wreg      void 
 11767 ;; Registers used:
 11768 ;;		wreg, status,2, status,0, pclath, cstack
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11774 ;;      Params:         0       0       0       0       0
 11775 ;;      Locals:         0       0       0       0       0
 11776 ;;      Temps:          0       2       0       0       0
 11777 ;;      Totals:         0       2       0       0       0
 11778 ;;Total ram usage:        2 bytes
 11779 ;; Hardware stack levels used:    1
 11780 ;; Hardware stack levels required when called:    5
 11781 ;; This function calls:
 11782 ;;		_LCD_write_char
 11783 ;; This function is called by:
 11784 ;;		_ClearScreenOnce
 11785 ;; This function uses a non-reentrant model
 11786 ;;
 11787                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
 11788                           	file	"DS1302.c"
 11789                           	line	203
 11790                           global __ptext23
 11791                           __ptext23:	;psect for function _aFrameworkDisplay
 11792  14C6                     psect	text23
 11793                           	file	"DS1302.c"
 11794                           	line	203
 11795                           	global	__size_of_aFrameworkDisplay
 11796                           	__size_of_aFrameworkDisplay	equ	__end_of_aFrameworkDisplay-_aFrameworkDisplay
 11797  0021                     	
 11798                           _aFrameworkDisplay:	
 11799  14C6                     ;incstack = 0
 11800                           	opt	stack 0
 11801                           ; Regs used in _aFrameworkDisplay: [wreg+status,2+status,0+pclath+cstack]
 11802                           	line	204
 11803                           	
 11804                           l3911:	
 11805  14C6                     ;DS1302.c: 204: LCD_write_char(7 + 1, 2, ':');
 11806                           	movlw	low(02h)
 11807  14C6  3002               	bcf	status, 5	;RP0=0, select bank0
 11808  14C7  1283               	bcf	status, 6	;RP1=0, select bank0
 11809  14C8  1303               	movwf	(??_aFrameworkDisplay+0)+0
 11810  14C9  00E4               	movf	(??_aFrameworkDisplay+0)+0,w
 11811  14CA  0864               	movwf	(LCD_write_char@y)
 11812  14CB  00E0               	movlw	low(03Ah)
 11813  14CC  303A               	movwf	(??_aFrameworkDisplay+1)+0
 11814  14CD  00E5               	movf	(??_aFrameworkDisplay+1)+0,w
 11815  14CE  0865               	movwf	(LCD_write_char@dat)
 11816  14CF  00E1               	movlw	low(08h)
 11817  14D0  3008               	fcall	_LCD_write_char
 11818  14D1  160A  118A  236E  160A  118A  	line	205
 11819                           ;DS1302.c: 205: LCD_write_char(10 + 1, 2, ':');
 11820                           	movlw	low(02h)
 11821  14D6  3002               	bcf	status, 5	;RP0=0, select bank0
 11822  14D7  1283               	bcf	status, 6	;RP1=0, select bank0
 11823  14D8  1303               	movwf	(??_aFrameworkDisplay+0)+0
 11824  14D9  00E4               	movf	(??_aFrameworkDisplay+0)+0,w
 11825  14DA  0864               	movwf	(LCD_write_char@y)
 11826  14DB  00E0               	movlw	low(03Ah)
 11827  14DC  303A               	movwf	(??_aFrameworkDisplay+1)+0
 11828  14DD  00E5               	movf	(??_aFrameworkDisplay+1)+0,w
 11829  14DE  0865               	movwf	(LCD_write_char@dat)
 11830  14DF  00E1               	movlw	low(0Bh)
 11831  14E0  300B               	fcall	_LCD_write_char
 11832  14E1  160A  118A  236E  160A  118A  	line	206
 11833                           	
 11834                           l263:	
 11835  14E6                     	return
 11836  14E6  0008               	opt stack 0
 11837                           GLOBAL	__end_of_aFrameworkDisplay
 11838                           	__end_of_aFrameworkDisplay:
 11839  14E7                     	signat	_aFrameworkDisplay,89
 11840                           	global	_LCD_write_string
 11841                           
 11842 ;; *************** function _LCD_write_string *****************
 11843 ;; Defined at:
 11844 ;;		line 84 in file "LCD.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;  X               1    wreg     unsigned char 
 11847 ;;  Y               1    3[BANK0 ] unsigned char 
 11848 ;;  s               2    4[BANK0 ] PTR unsigned char 
 11849 ;;		 -> STR_20(2), STR_19(4), STR_18(2), STR_17(15), 
 11850 ;;		 -> STR_16(5), STR_15(6), STR_14(3), STR_13(5), 
 11851 ;;		 -> STR_12(5), STR_11(5), STR_10(5), STR_9(5), 
 11852 ;;		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
 11853 ;;		 -> RAM(512), 
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;  X               1    7[BANK0 ] unsigned char 
 11856 ;; Return value:  Size  Location     Type
 11857 ;;                  1    wreg      void 
 11858 ;; Registers used:
 11859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11860 ;; Tracked objects:
 11861 ;;		On entry : 0/0
 11862 ;;		On exit  : 0/0
 11863 ;;		Unchanged: 0/0
 11864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11865 ;;      Params:         0       3       0       0       0
 11866 ;;      Locals:         0       1       0       0       0
 11867 ;;      Temps:          0       1       0       0       0
 11868 ;;      Totals:         0       5       0       0       0
 11869 ;;Total ram usage:        5 bytes
 11870 ;; Hardware stack levels used:    1
 11871 ;; Hardware stack levels required when called:    4
 11872 ;; This function calls:
 11873 ;;		_LCD_Busy
 11874 ;;		_LCD_en_dat
 11875 ;;		_LCD_set_xy
 11876 ;; This function is called by:
 11877 ;;		_MusicDisplay
 11878 ;;		_TimeDataDisplay
 11879 ;;		_ClearScreenOnce
 11880 ;;		_ModeSwitch
 11881 ;; This function uses a non-reentrant model
 11882 ;;
 11883                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
 11884                           	file	"LCD.c"
 11885                           	line	84
 11886                           global __ptext24
 11887                           __ptext24:	;psect for function _LCD_write_string
 11888  1708                     psect	text24
 11889                           	file	"LCD.c"
 11890                           	line	84
 11891                           	global	__size_of_LCD_write_string
 11892                           	__size_of_LCD_write_string	equ	__end_of_LCD_write_string-_LCD_write_string
 11893  004A                     	
 11894                           _LCD_write_string:	
 11895  1708                     ;incstack = 0
 11896                           	opt	stack 2
 11897                           ; Regs used in _LCD_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11898                           ;LCD_write_string@X stored from wreg
 11899                           	bcf	status, 5	;RP0=0, select bank0
 11900  1708  1283               	bcf	status, 6	;RP1=0, select bank0
 11901  1709  1303               	movwf	(LCD_write_string@X)
 11902  170A  00E4               	line	86
 11903                           	
 11904                           l3851:	
 11905  170B                     ;LCD.c: 86: LCD_Busy();
 11906                           	fcall	_LCD_Busy
 11907  170B  160A  118A  2311  160A  118A  	line	87
 11908                           ;LCD.c: 87: LCD_set_xy(X,Y);
 11909                           	bcf	status, 5	;RP0=0, select bank0
 11910  1710  1283               	bcf	status, 6	;RP1=0, select bank0
 11911  1711  1303               	movf	(LCD_write_string@Y),w
 11912  1712  0860               	movwf	(??_LCD_write_string+0)+0
 11913  1713  00E3               	movf	(??_LCD_write_string+0)+0,w
 11914  1714  0863               	movwf	(LCD_set_xy@y)
 11915  1715  00F9               	movf	(LCD_write_string@X),w
 11916  1716  0864               	fcall	_LCD_set_xy
 11917  1717  160A  118A  23D0  160A  118A  	line	88
 11918                           ;LCD.c: 88: while(*s)
 11919                           	goto	l3859
 11920  171C  2F40               	
 11921                           l124:	
 11922  171D                     	line	90
 11923                           	
 11924                           l3853:	
 11925  171D                     ;LCD.c: 89: {;LCD.c: 90: PORTD=*s;
 11926                           	bcf	status, 5	;RP0=0, select bank0
 11927  171D  1283               	bcf	status, 6	;RP1=0, select bank0
 11928  171E  1303               	movf	(LCD_write_string@s+1),w
 11929  171F  0862               	movwf	btemp+1
 11930  1720  00FF               	movf	(LCD_write_string@s),w
 11931  1721  0861               	movwf	fsr0
 11932  1722  0084               	fcall	stringtab
 11933  1723  120A  158A  2000  160A  118A  	movwf	(8)	;volatile
 11934  1728  0088               	line	91
 11935                           	
 11936                           l3855:	
 11937  1729                     ;LCD.c: 91: LCD_en_dat(*s);
 11938                           	movf	(LCD_write_string@s+1),w
 11939  1729  0862               	movwf	btemp+1
 11940  172A  00FF               	movf	(LCD_write_string@s),w
 11941  172B  0861               	movwf	fsr0
 11942  172C  0084               	fcall	stringtab
 11943  172D  120A  158A  2000  160A  118A  	fcall	_LCD_en_dat
 11944  1732  160A  118A  2334  160A  118A  	line	92
 11945                           	
 11946                           l3857:	
 11947  1737                     ;LCD.c: 92: s++;
 11948                           	movlw	01h
 11949  1737  3001               	bcf	status, 5	;RP0=0, select bank0
 11950  1738  1283               	bcf	status, 6	;RP1=0, select bank0
 11951  1739  1303               	addwf	(LCD_write_string@s),f
 11952  173A  07E1               	skipnc
 11953  173B  1803               	incf	(LCD_write_string@s+1),f
 11954  173C  0AE2               	movlw	0
 11955  173D  3000               	addwf	(LCD_write_string@s+1),f
 11956  173E  07E2               	goto	l3859
 11957  173F  2F40               	line	93
 11958                           	
 11959                           l123:	
 11960  1740                     	line	88
 11961                           	
 11962                           l3859:	
 11963  1740                     	bcf	status, 5	;RP0=0, select bank0
 11964  1740  1283               	bcf	status, 6	;RP1=0, select bank0
 11965  1741  1303               	movf	(LCD_write_string@s+1),w
 11966  1742  0862               	movwf	btemp+1
 11967  1743  00FF               	movf	(LCD_write_string@s),w
 11968  1744  0861               	movwf	fsr0
 11969  1745  0084               	fcall	stringtab
 11970  1746  120A  158A  2000  160A  118A  	xorlw	0
 11971  174B  3A00               	skipz
 11972  174C  1D03               	goto	u4671
 11973  174D  2F4F               	goto	u4670
 11974  174E  2F50               u4671:
 11975  174F                     	goto	l3853
 11976  174F  2F1D               u4670:
 11977  1750                     	goto	l126
 11978  1750  2F51               	
 11979                           l125:	
 11980  1751                     	line	94
 11981                           	
 11982                           l126:	
 11983  1751                     	return
 11984  1751  0008               	opt stack 0
 11985                           GLOBAL	__end_of_LCD_write_string
 11986                           	__end_of_LCD_write_string:
 11987  1752                     	signat	_LCD_write_string,12409
 11988                           	global	_LCD_Busy
 11989                           
 11990 ;; *************** function _LCD_Busy *****************
 11991 ;; Defined at:
 11992 ;;		line 129 in file "LCD.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;		None
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;  busyFlag        1    5[COMMON] unsigned char 
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  1    wreg      void 
 11999 ;; Registers used:
 12000 ;;		wreg, status,2, pclath, cstack
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/0
 12003 ;;		On exit  : 0/0
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12006 ;;      Params:         0       0       0       0       0
 12007 ;;      Locals:         1       0       0       0       0
 12008 ;;      Temps:          1       0       0       0       0
 12009 ;;      Totals:         2       0       0       0       0
 12010 ;;Total ram usage:        2 bytes
 12011 ;; Hardware stack levels used:    1
 12012 ;; Hardware stack levels required when called:    2
 12013 ;; This function calls:
 12014 ;;		_LCD_Read_dat
 12015 ;; This function is called by:
 12016 ;;		_LCD_write_string
 12017 ;; This function uses a non-reentrant model
 12018 ;;
 12019                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
 12020                           	line	129
 12021                           global __ptext25
 12022                           __ptext25:	;psect for function _LCD_Busy
 12023  1311                     psect	text25
 12024                           	file	"LCD.c"
 12025                           	line	129
 12026                           	global	__size_of_LCD_Busy
 12027                           	__size_of_LCD_Busy	equ	__end_of_LCD_Busy-_LCD_Busy
 12028  0011                     	
 12029                           _LCD_Busy:	
 12030  1311                     ;incstack = 0
 12031                           	opt	stack 3
 12032                           ; Regs used in _LCD_Busy: [wreg+status,2+pclath+cstack]
 12033                           	line	132
 12034                           ;LCD.c: 131: char busyFlag;;LCD.c: 132: while(1)
 12035                           	
 12036                           l141:	
 12037  1311                     	line	134
 12038                           	
 12039                           l2655:	
 12040  1311                     ;LCD.c: 133: {;LCD.c: 134: busyFlag=LCD_Read_dat();
 12041                           	fcall	_LCD_Read_dat
 12042  1311  160A  118A  2384  160A  118A  	movwf	(??_LCD_Busy+0)+0
 12043  1316  00F4               	movf	(??_LCD_Busy+0)+0,w
 12044  1317  0874               	movwf	(LCD_Busy@busyFlag)
 12045  1318  00F5               	line	135
 12046                           	
 12047                           l2657:	
 12048  1319                     ;LCD.c: 135: if((busyFlag&0x80)==0)
 12049                           	btfsc	(LCD_Busy@busyFlag),(7)&7
 12050  1319  1BF5               	goto	u2331
 12051  131A  2B1C               	goto	u2330
 12052  131B  2B1D               u2331:
 12053  131C                     	goto	l141
 12054  131C  2B11               u2330:
 12055  131D                     	goto	l145
 12056  131D  2B21               	line	137
 12057                           	
 12058                           l2659:	
 12059  131E                     ;LCD.c: 136: {;LCD.c: 137: break;
 12060                           	goto	l145
 12061  131E  2B21               	line	138
 12062                           	
 12063                           l142:	
 12064  131F                     	goto	l141
 12065  131F  2B11               	line	139
 12066                           	
 12067                           l144:	
 12068  1320                     	line	132
 12069                           	goto	l141
 12070  1320  2B11               	
 12071                           l143:	
 12072  1321                     	line	140
 12073                           	
 12074                           l145:	
 12075  1321                     	return
 12076  1321  0008               	opt stack 0
 12077                           GLOBAL	__end_of_LCD_Busy
 12078                           	__end_of_LCD_Busy:
 12079  1322                     	signat	_LCD_Busy,89
 12080                           	global	_LCD_Read_dat
 12081                           
 12082 ;; *************** function _LCD_Read_dat *****************
 12083 ;; Defined at:
 12084 ;;		line 48 in file "LCD.c"
 12085 ;; Parameters:    Size  Location     Type
 12086 ;;		None
 12087 ;; Auto vars:     Size  Location     Type
 12088 ;;  dat             1    3[COMMON] unsigned char 
 12089 ;; Return value:  Size  Location     Type
 12090 ;;                  1    wreg      unsigned char 
 12091 ;; Registers used:
 12092 ;;		wreg, status,2
 12093 ;; Tracked objects:
 12094 ;;		On entry : 0/0
 12095 ;;		On exit  : 0/0
 12096 ;;		Unchanged: 0/0
 12097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12098 ;;      Params:         0       0       0       0       0
 12099 ;;      Locals:         1       0       0       0       0
 12100 ;;      Temps:          1       0       0       0       0
 12101 ;;      Totals:         2       0       0       0       0
 12102 ;;Total ram usage:        2 bytes
 12103 ;; Hardware stack levels used:    1
 12104 ;; Hardware stack levels required when called:    1
 12105 ;; This function calls:
 12106 ;;		Nothing
 12107 ;; This function is called by:
 12108 ;;		_LCD_Busy
 12109 ;; This function uses a non-reentrant model
 12110 ;;
 12111                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
 12112                           	line	48
 12113                           global __ptext26
 12114                           __ptext26:	;psect for function _LCD_Read_dat
 12115  1384                     psect	text26
 12116                           	file	"LCD.c"
 12117                           	line	48
 12118                           	global	__size_of_LCD_Read_dat
 12119                           	__size_of_LCD_Read_dat	equ	__end_of_LCD_Read_dat-_LCD_Read_dat
 12120  0017                     	
 12121                           _LCD_Read_dat:	
 12122  1384                     ;incstack = 0
 12123                           	opt	stack 3
 12124                           ; Regs used in _LCD_Read_dat: [wreg+status,2]
 12125                           	line	51
 12126                           	
 12127                           l2623:	
 12128  1384                     ;LCD.c: 50: char dat;;LCD.c: 51: PORTD|=0xff;
 12129                           	movlw	low(0FFh)
 12130  1384  30FF               	bcf	status, 5	;RP0=0, select bank0
 12131  1385  1283               	bcf	status, 6	;RP1=0, select bank0
 12132  1386  1303               	movwf	(8)	;volatile
 12133  1387  0088               	line	52
 12134                           	
 12135                           l2625:	
 12136  1388                     ;LCD.c: 52: PORTEbits.RE0=0;
 12137                           	bcf	(9),0	;volatile
 12138  1388  1009               	line	53
 12139                           	
 12140                           l2627:	
 12141  1389                     ;LCD.c: 53: PORTEbits.RE2=1;__nop();
 12142                           	bsf	(9),2	;volatile
 12143  1389  1509               	
 12144                           l2629:	
 12145  138A                     	opt	asmopt_push
 12146                           	opt	asmopt_off
 12147                           	nop
 12148  138A  0000               	opt	asmopt_pop
 12149                           	line	54
 12150                           	
 12151                           l2631:	
 12152  138B                     ;LCD.c: 54: PORTEbits.RE1=1;
 12153                           	bcf	status, 5	;RP0=0, select bank0
 12154  138B  1283               	bcf	status, 6	;RP1=0, select bank0
 12155  138C  1303               	bsf	(9),1	;volatile
 12156  138D  1489               	line	55
 12157                           ;LCD.c: 55: dat=PORTD;
 12158                           	movf	(8),w	;volatile
 12159  138E  0808               	movwf	(??_LCD_Read_dat+0)+0
 12160  138F  00F2               	movf	(??_LCD_Read_dat+0)+0,w
 12161  1390  0872               	movwf	(LCD_Read_dat@dat)
 12162  1391  00F3               	line	57
 12163                           	
 12164                           l2633:	
 12165  1392                     ;LCD.c: 57: PORTEbits.RE1=0;__nop();
 12166                           	bcf	(9),1	;volatile
 12167  1392  1089               	
 12168                           l2635:	
 12169  1393                     	opt	asmopt_push
 12170                           	opt	asmopt_off
 12171                           	nop
 12172  1393  0000               	opt	asmopt_pop
 12173                           	line	58
 12174                           	
 12175                           l2637:	
 12176  1394                     ;LCD.c: 58: PORTEbits.RE2=0;
 12177                           	bcf	status, 5	;RP0=0, select bank0
 12178  1394  1283               	bcf	status, 6	;RP1=0, select bank0
 12179  1395  1303               	bcf	(9),2	;volatile
 12180  1396  1109               	line	59
 12181                           	
 12182                           l2639:	
 12183  1397                     ;LCD.c: 59: PORTD=0;
 12184                           	clrf	(8)	;volatile
 12185  1397  0188               	line	60
 12186                           	
 12187                           l2641:	
 12188  1398                     ;LCD.c: 60: return dat;
 12189                           	movf	(LCD_Read_dat@dat),w
 12190  1398  0873               	goto	l112
 12191  1399  2B9A               	
 12192                           l2643:	
 12193  139A                     	line	62
 12194                           	
 12195                           l112:	
 12196  139A                     	return
 12197  139A  0008               	opt stack 0
 12198                           GLOBAL	__end_of_LCD_Read_dat
 12199                           	__end_of_LCD_Read_dat:
 12200  139B                     	signat	_LCD_Read_dat,89
 12201                           	global	_FrameworkDisplay
 12202                           
 12203 ;; *************** function _FrameworkDisplay *****************
 12204 ;; Defined at:
 12205 ;;		line 194 in file "DS1302.c"
 12206 ;; Parameters:    Size  Location     Type
 12207 ;;		None
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;		None
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  1    wreg      void 
 12212 ;; Registers used:
 12213 ;;		wreg, status,2, status,0, pclath, cstack
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12219 ;;      Params:         0       0       0       0       0
 12220 ;;      Locals:         0       0       0       0       0
 12221 ;;      Temps:          0       2       0       0       0
 12222 ;;      Totals:         0       2       0       0       0
 12223 ;;Total ram usage:        2 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:    5
 12226 ;; This function calls:
 12227 ;;		_LCD_write_char
 12228 ;; This function is called by:
 12229 ;;		_ClearScreenOnce
 12230 ;; This function uses a non-reentrant model
 12231 ;;
 12232                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
 12233                           	file	"DS1302.c"
 12234                           	line	194
 12235                           global __ptext27
 12236                           __ptext27:	;psect for function _FrameworkDisplay
 12237  1644                     psect	text27
 12238                           	file	"DS1302.c"
 12239                           	line	194
 12240                           	global	__size_of_FrameworkDisplay
 12241                           	__size_of_FrameworkDisplay	equ	__end_of_FrameworkDisplay-_FrameworkDisplay
 12242  003D                     	
 12243                           _FrameworkDisplay:	
 12244  1644                     ;incstack = 0
 12245                           	opt	stack 0
 12246                           ; Regs used in _FrameworkDisplay: [wreg+status,2+status,0+pclath+cstack]
 12247                           	line	195
 12248                           	
 12249                           l3909:	
 12250  1644                     ;DS1302.c: 195: LCD_write_char(4 + 1, 1, '-');
 12251                           	bcf	status, 5	;RP0=0, select bank0
 12252  1644  1283               	bcf	status, 6	;RP1=0, select bank0
 12253  1645  1303               	clrf	(LCD_write_char@y)
 12254  1646  01E0               	incf	(LCD_write_char@y),f
 12255  1647  0AE0               	movlw	low(02Dh)
 12256  1648  302D               	movwf	(??_FrameworkDisplay+0)+0
 12257  1649  00E4               	movf	(??_FrameworkDisplay+0)+0,w
 12258  164A  0864               	movwf	(LCD_write_char@dat)
 12259  164B  00E1               	movlw	low(05h)
 12260  164C  3005               	fcall	_LCD_write_char
 12261  164D  160A  118A  236E  160A  118A  	line	196
 12262                           ;DS1302.c: 196: LCD_write_char(7 + 1, 1, '-');
 12263                           	bcf	status, 5	;RP0=0, select bank0
 12264  1652  1283               	bcf	status, 6	;RP1=0, select bank0
 12265  1653  1303               	clrf	(LCD_write_char@y)
 12266  1654  01E0               	incf	(LCD_write_char@y),f
 12267  1655  0AE0               	movlw	low(02Dh)
 12268  1656  302D               	movwf	(??_FrameworkDisplay+0)+0
 12269  1657  00E4               	movf	(??_FrameworkDisplay+0)+0,w
 12270  1658  0864               	movwf	(LCD_write_char@dat)
 12271  1659  00E1               	movlw	low(08h)
 12272  165A  3008               	fcall	_LCD_write_char
 12273  165B  160A  118A  236E  160A  118A  	line	197
 12274                           ;DS1302.c: 197: LCD_write_char(7 + 1, 2, ':');
 12275                           	movlw	low(02h)
 12276  1660  3002               	bcf	status, 5	;RP0=0, select bank0
 12277  1661  1283               	bcf	status, 6	;RP1=0, select bank0
 12278  1662  1303               	movwf	(??_FrameworkDisplay+0)+0
 12279  1663  00E4               	movf	(??_FrameworkDisplay+0)+0,w
 12280  1664  0864               	movwf	(LCD_write_char@y)
 12281  1665  00E0               	movlw	low(03Ah)
 12282  1666  303A               	movwf	(??_FrameworkDisplay+1)+0
 12283  1667  00E5               	movf	(??_FrameworkDisplay+1)+0,w
 12284  1668  0865               	movwf	(LCD_write_char@dat)
 12285  1669  00E1               	movlw	low(08h)
 12286  166A  3008               	fcall	_LCD_write_char
 12287  166B  160A  118A  236E  160A  118A  	line	198
 12288                           ;DS1302.c: 198: LCD_write_char(10 + 1, 2, ':');
 12289                           	movlw	low(02h)
 12290  1670  3002               	bcf	status, 5	;RP0=0, select bank0
 12291  1671  1283               	bcf	status, 6	;RP1=0, select bank0
 12292  1672  1303               	movwf	(??_FrameworkDisplay+0)+0
 12293  1673  00E4               	movf	(??_FrameworkDisplay+0)+0,w
 12294  1674  0864               	movwf	(LCD_write_char@y)
 12295  1675  00E0               	movlw	low(03Ah)
 12296  1676  303A               	movwf	(??_FrameworkDisplay+1)+0
 12297  1677  00E5               	movf	(??_FrameworkDisplay+1)+0,w
 12298  1678  0865               	movwf	(LCD_write_char@dat)
 12299  1679  00E1               	movlw	low(0Bh)
 12300  167A  300B               	fcall	_LCD_write_char
 12301  167B  160A  118A  236E  160A  118A  	line	199
 12302                           	
 12303                           l260:	
 12304  1680                     	return
 12305  1680  0008               	opt stack 0
 12306                           GLOBAL	__end_of_FrameworkDisplay
 12307                           	__end_of_FrameworkDisplay:
 12308  1681                     	signat	_FrameworkDisplay,89
 12309                           	global	_AlarmDataDisplay
 12310                           
 12311 ;; *************** function _AlarmDataDisplay *****************
 12312 ;; Defined at:
 12313 ;;		line 221 in file "DS1302.c"
 12314 ;; Parameters:    Size  Location     Type
 12315 ;;		None
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;		None
 12318 ;; Return value:  Size  Location     Type
 12319 ;;                  1    wreg      void 
 12320 ;; Registers used:
 12321 ;;		wreg, status,2, status,0, pclath, cstack
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/0
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12327 ;;      Params:         0       0       0       0       0
 12328 ;;      Locals:         0       0       0       0       0
 12329 ;;      Temps:          0       2       0       0       0
 12330 ;;      Totals:         0       2       0       0       0
 12331 ;;Total ram usage:        2 bytes
 12332 ;; Hardware stack levels used:    1
 12333 ;; Hardware stack levels required when called:    5
 12334 ;; This function calls:
 12335 ;;		_LCD_write_char
 12336 ;; This function is called by:
 12337 ;;		_ModeSwitch
 12338 ;; This function uses a non-reentrant model
 12339 ;;
 12340                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
 12341                           	line	221
 12342                           global __ptext28
 12343                           __ptext28:	;psect for function _AlarmDataDisplay
 12344  0D3D                     psect	text28
 12345                           	file	"DS1302.c"
 12346                           	line	221
 12347                           	global	__size_of_AlarmDataDisplay
 12348                           	__size_of_AlarmDataDisplay	equ	__end_of_AlarmDataDisplay-_AlarmDataDisplay
 12349  0067                     	
 12350                           _AlarmDataDisplay:	
 12351  0D3D                     ;incstack = 0
 12352                           	opt	stack 1
 12353                           ; Regs used in _AlarmDataDisplay: [wreg+status,2+status,0+pclath+cstack]
 12354                           	line	222
 12355                           	
 12356                           l3975:	
 12357  0D3D                     ;DS1302.c: 222: LCD_write_char(6, 2, aHOUR_ten + '0');
 12358                           	movlw	low(02h)
 12359  0D3D  3002               	bcf	status, 5	;RP0=0, select bank0
 12360  0D3E  1283               	bcf	status, 6	;RP1=0, select bank0
 12361  0D3F  1303               	movwf	(??_AlarmDataDisplay+0)+0
 12362  0D40  00E4               	movf	(??_AlarmDataDisplay+0)+0,w
 12363  0D41  0864               	movwf	(LCD_write_char@y)
 12364  0D42  00E0               	movf	(_aHOUR_ten),w
 12365  0D43  083E               	addlw	030h
 12366  0D44  3E30               	movwf	(??_AlarmDataDisplay+1)+0
 12367  0D45  00E5               	movf	(??_AlarmDataDisplay+1)+0,w
 12368  0D46  0865               	movwf	(LCD_write_char@dat)
 12369  0D47  00E1               	movlw	low(06h)
 12370  0D48  3006               	fcall	_LCD_write_char
 12371  0D49  160A  118A  236E  120A  158A  	line	223
 12372                           ;DS1302.c: 223: LCD_write_char(7, 2, aHOUR_unit + '0');
 12373                           	movlw	low(02h)
 12374  0D4E  3002               	bcf	status, 5	;RP0=0, select bank0
 12375  0D4F  1283               	bcf	status, 6	;RP1=0, select bank0
 12376  0D50  1303               	movwf	(??_AlarmDataDisplay+0)+0
 12377  0D51  00E4               	movf	(??_AlarmDataDisplay+0)+0,w
 12378  0D52  0864               	movwf	(LCD_write_char@y)
 12379  0D53  00E0               	movf	(_aHOUR_unit),w
 12380  0D54  083D               	addlw	030h
 12381  0D55  3E30               	movwf	(??_AlarmDataDisplay+1)+0
 12382  0D56  00E5               	movf	(??_AlarmDataDisplay+1)+0,w
 12383  0D57  0865               	movwf	(LCD_write_char@dat)
 12384  0D58  00E1               	movlw	low(07h)
 12385  0D59  3007               	fcall	_LCD_write_char
 12386  0D5A  160A  118A  236E  120A  158A  	line	224
 12387                           ;DS1302.c: 224: LCD_write_char(9, 2, aMINUTE_ten + '0');
 12388                           	movlw	low(02h)
 12389  0D5F  3002               	bcf	status, 5	;RP0=0, select bank0
 12390  0D60  1283               	bcf	status, 6	;RP1=0, select bank0
 12391  0D61  1303               	movwf	(??_AlarmDataDisplay+0)+0
 12392  0D62  00E4               	movf	(??_AlarmDataDisplay+0)+0,w
 12393  0D63  0864               	movwf	(LCD_write_char@y)
 12394  0D64  00E0               	movf	(_aMINUTE_ten),w
 12395  0D65  083C               	addlw	030h
 12396  0D66  3E30               	movwf	(??_AlarmDataDisplay+1)+0
 12397  0D67  00E5               	movf	(??_AlarmDataDisplay+1)+0,w
 12398  0D68  0865               	movwf	(LCD_write_char@dat)
 12399  0D69  00E1               	movlw	low(09h)
 12400  0D6A  3009               	fcall	_LCD_write_char
 12401  0D6B  160A  118A  236E  120A  158A  	line	225
 12402                           ;DS1302.c: 225: LCD_write_char(10, 2, aMINUTE_unit + '0');
 12403                           	movlw	low(02h)
 12404  0D70  3002               	bcf	status, 5	;RP0=0, select bank0
 12405  0D71  1283               	bcf	status, 6	;RP1=0, select bank0
 12406  0D72  1303               	movwf	(??_AlarmDataDisplay+0)+0
 12407  0D73  00E4               	movf	(??_AlarmDataDisplay+0)+0,w
 12408  0D74  0864               	movwf	(LCD_write_char@y)
 12409  0D75  00E0               	movf	(_aMINUTE_unit),w
 12410  0D76  083B               	addlw	030h
 12411  0D77  3E30               	movwf	(??_AlarmDataDisplay+1)+0
 12412  0D78  00E5               	movf	(??_AlarmDataDisplay+1)+0,w
 12413  0D79  0865               	movwf	(LCD_write_char@dat)
 12414  0D7A  00E1               	movlw	low(0Ah)
 12415  0D7B  300A               	fcall	_LCD_write_char
 12416  0D7C  160A  118A  236E  120A  158A  	line	226
 12417                           ;DS1302.c: 226: LCD_write_char(12, 2, aSECOND_ten + '0');
 12418                           	movlw	low(02h)
 12419  0D81  3002               	bcf	status, 5	;RP0=0, select bank0
 12420  0D82  1283               	bcf	status, 6	;RP1=0, select bank0
 12421  0D83  1303               	movwf	(??_AlarmDataDisplay+0)+0
 12422  0D84  00E4               	movf	(??_AlarmDataDisplay+0)+0,w
 12423  0D85  0864               	movwf	(LCD_write_char@y)
 12424  0D86  00E0               	movf	(_aSECOND_ten),w
 12425  0D87  083A               	addlw	030h
 12426  0D88  3E30               	movwf	(??_AlarmDataDisplay+1)+0
 12427  0D89  00E5               	movf	(??_AlarmDataDisplay+1)+0,w
 12428  0D8A  0865               	movwf	(LCD_write_char@dat)
 12429  0D8B  00E1               	movlw	low(0Ch)
 12430  0D8C  300C               	fcall	_LCD_write_char
 12431  0D8D  160A  118A  236E  120A  158A  	line	227
 12432                           ;DS1302.c: 227: LCD_write_char(13, 2, aSECOND_unit + '0');
 12433                           	movlw	low(02h)
 12434  0D92  3002               	bcf	status, 5	;RP0=0, select bank0
 12435  0D93  1283               	bcf	status, 6	;RP1=0, select bank0
 12436  0D94  1303               	movwf	(??_AlarmDataDisplay+0)+0
 12437  0D95  00E4               	movf	(??_AlarmDataDisplay+0)+0,w
 12438  0D96  0864               	movwf	(LCD_write_char@y)
 12439  0D97  00E0               	movf	(_aSECOND_unit),w
 12440  0D98  0839               	addlw	030h
 12441  0D99  3E30               	movwf	(??_AlarmDataDisplay+1)+0
 12442  0D9A  00E5               	movf	(??_AlarmDataDisplay+1)+0,w
 12443  0D9B  0865               	movwf	(LCD_write_char@dat)
 12444  0D9C  00E1               	movlw	low(0Dh)
 12445  0D9D  300D               	fcall	_LCD_write_char
 12446  0D9E  160A  118A  236E  120A  158A  	line	228
 12447                           	
 12448                           l269:	
 12449  0DA3                     	return
 12450  0DA3  0008               	opt stack 0
 12451                           GLOBAL	__end_of_AlarmDataDisplay
 12452                           	__end_of_AlarmDataDisplay:
 12453  0DA4                     	signat	_AlarmDataDisplay,89
 12454                           	global	_LCD_write_char
 12455                           
 12456 ;; *************** function _LCD_write_char *****************
 12457 ;; Defined at:
 12458 ;;		line 77 in file "LCD.c"
 12459 ;; Parameters:    Size  Location     Type
 12460 ;;  x               1    wreg     char 
 12461 ;;  y               1    3[BANK0 ] char 
 12462 ;;  dat             1    4[BANK0 ] char 
 12463 ;; Auto vars:     Size  Location     Type
 12464 ;;  x               1    6[BANK0 ] char 
 12465 ;; Return value:  Size  Location     Type
 12466 ;;                  1    wreg      void 
 12467 ;; Registers used:
 12468 ;;		wreg, status,2, status,0, pclath, cstack
 12469 ;; Tracked objects:
 12470 ;;		On entry : 0/0
 12471 ;;		On exit  : 0/0
 12472 ;;		Unchanged: 0/0
 12473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12474 ;;      Params:         0       2       0       0       0
 12475 ;;      Locals:         0       1       0       0       0
 12476 ;;      Temps:          0       1       0       0       0
 12477 ;;      Totals:         0       4       0       0       0
 12478 ;;Total ram usage:        4 bytes
 12479 ;; Hardware stack levels used:    1
 12480 ;; Hardware stack levels required when called:    4
 12481 ;; This function calls:
 12482 ;;		_LCD_en_dat
 12483 ;;		_LCD_set_xy
 12484 ;; This function is called by:
 12485 ;;		_MusicDisplay
 12486 ;;		_TimeDataDisplay
 12487 ;;		_FrameworkDisplay
 12488 ;;		_aFrameworkDisplay
 12489 ;;		_AlarmDataDisplay
 12490 ;; This function uses a non-reentrant model
 12491 ;;
 12492                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 12493                           	file	"LCD.c"
 12494                           	line	77
 12495                           global __ptext29
 12496                           __ptext29:	;psect for function _LCD_write_char
 12497  136E                     psect	text29
 12498                           	file	"LCD.c"
 12499                           	line	77
 12500                           	global	__size_of_LCD_write_char
 12501                           	__size_of_LCD_write_char	equ	__end_of_LCD_write_char-_LCD_write_char
 12502  0016                     	
 12503                           _LCD_write_char:	
 12504  136E                     ;incstack = 0
 12505                           	opt	stack 2
 12506                           ; Regs used in _LCD_write_char: [wreg+status,2+status,0+pclath+cstack]
 12507                           ;LCD_write_char@x stored from wreg
 12508                           	bcf	status, 5	;RP0=0, select bank0
 12509  136E  1283               	bcf	status, 6	;RP1=0, select bank0
 12510  136F  1303               	movwf	(LCD_write_char@x)
 12511  1370  00E3               	line	79
 12512                           	
 12513                           l3849:	
 12514  1371                     ;LCD.c: 79: LCD_set_xy(x,y);
 12515                           	movf	(LCD_write_char@y),w
 12516  1371  0860               	movwf	(??_LCD_write_char+0)+0
 12517  1372  00E2               	movf	(??_LCD_write_char+0)+0,w
 12518  1373  0862               	movwf	(LCD_set_xy@y)
 12519  1374  00F9               	movf	(LCD_write_char@x),w
 12520  1375  0863               	fcall	_LCD_set_xy
 12521  1376  160A  118A  23D0  160A  118A  	line	80
 12522                           ;LCD.c: 80: LCD_en_dat(dat);
 12523                           	bcf	status, 5	;RP0=0, select bank0
 12524  137B  1283               	bcf	status, 6	;RP1=0, select bank0
 12525  137C  1303               	movf	(LCD_write_char@dat),w
 12526  137D  0861               	fcall	_LCD_en_dat
 12527  137E  160A  118A  2334  160A  118A  	line	81
 12528                           	
 12529                           l120:	
 12530  1383                     	return
 12531  1383  0008               	opt stack 0
 12532                           GLOBAL	__end_of_LCD_write_char
 12533                           	__end_of_LCD_write_char:
 12534  1384                     	signat	_LCD_write_char,12409
 12535                           	global	_LCD_set_xy
 12536                           
 12537 ;; *************** function _LCD_set_xy *****************
 12538 ;; Defined at:
 12539 ;;		line 65 in file "LCD.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;  x               1    wreg     unsigned char 
 12542 ;;  y               1    9[COMMON] unsigned char 
 12543 ;; Auto vars:     Size  Location     Type
 12544 ;;  x               1    2[BANK0 ] unsigned char 
 12545 ;;  address         1    1[BANK0 ] unsigned char 
 12546 ;; Return value:  Size  Location     Type
 12547 ;;                  1    wreg      void 
 12548 ;; Registers used:
 12549 ;;		wreg, status,2, status,0, pclath, cstack
 12550 ;; Tracked objects:
 12551 ;;		On entry : 0/0
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12555 ;;      Params:         1       0       0       0       0
 12556 ;;      Locals:         0       2       0       0       0
 12557 ;;      Temps:          0       1       0       0       0
 12558 ;;      Totals:         1       3       0       0       0
 12559 ;;Total ram usage:        4 bytes
 12560 ;; Hardware stack levels used:    1
 12561 ;; Hardware stack levels required when called:    3
 12562 ;; This function calls:
 12563 ;;		_LCD_en_command
 12564 ;; This function is called by:
 12565 ;;		_LCD_write_char
 12566 ;;		_LCD_write_string
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 12570                           	line	65
 12571                           global __ptext30
 12572                           __ptext30:	;psect for function _LCD_set_xy
 12573  13D0                     psect	text30
 12574                           	file	"LCD.c"
 12575                           	line	65
 12576                           	global	__size_of_LCD_set_xy
 12577                           	__size_of_LCD_set_xy	equ	__end_of_LCD_set_xy-_LCD_set_xy
 12578  001C                     	
 12579                           _LCD_set_xy:	
 12580  13D0                     ;incstack = 0
 12581                           	opt	stack 2
 12582                           ; Regs used in _LCD_set_xy: [wreg+status,2+status,0+pclath+cstack]
 12583                           ;LCD_set_xy@x stored from wreg
 12584                           	bcf	status, 5	;RP0=0, select bank0
 12585  13D0  1283               	bcf	status, 6	;RP1=0, select bank0
 12586  13D1  1303               	movwf	(LCD_set_xy@x)
 12587  13D2  00DF               	line	68
 12588                           	
 12589                           l3841:	
 12590  13D3                     ;LCD.c: 67: unsigned char address;;LCD.c: 68: if(y==1)
 12591                           		decf	((LCD_set_xy@y)),w
 12592  13D3  0379               	btfss	status,2
 12593  13D4  1D03               	goto	u4661
 12594  13D5  2BD7               	goto	u4660
 12595  13D6  2BD8               u4661:
 12596  13D7                     	goto	l3845
 12597  13D7  2BDE               u4660:
 12598  13D8                     	line	69
 12599                           	
 12600                           l3843:	
 12601  13D8                     ;LCD.c: 69: {address = (unsigned char)0x80+x;}
 12602                           	movf	(LCD_set_xy@x),w
 12603  13D8  085F               	addlw	080h
 12604  13D9  3E80               	movwf	(??_LCD_set_xy+0)+0
 12605  13DA  00DD               	movf	(??_LCD_set_xy+0)+0,w
 12606  13DB  085D               	movwf	(LCD_set_xy@address)
 12607  13DC  00DE               	goto	l3847
 12608  13DD  2BE4               	line	71
 12609                           	
 12610                           l115:	
 12611  13DE                     	line	72
 12612                           	
 12613                           l3845:	
 12614  13DE                     ;LCD.c: 71: else;LCD.c: 72: {address = 0xC0+x;}
 12615                           	movf	(LCD_set_xy@x),w
 12616  13DE  085F               	addlw	0C0h
 12617  13DF  3EC0               	movwf	(??_LCD_set_xy+0)+0
 12618  13E0  00DD               	movf	(??_LCD_set_xy+0)+0,w
 12619  13E1  085D               	movwf	(LCD_set_xy@address)
 12620  13E2  00DE               	goto	l3847
 12621  13E3  2BE4               	
 12622                           l116:	
 12623  13E4                     	line	73
 12624                           	
 12625                           l3847:	
 12626  13E4                     ;LCD.c: 73: LCD_en_command(0x80|address);
 12627                           	movf	(LCD_set_xy@address),w
 12628  13E4  085E               	iorlw	080h
 12629  13E5  3880               	fcall	_LCD_en_command
 12630  13E6  160A  118A  2608  160A  118A  	line	74
 12631                           	
 12632                           l117:	
 12633  13EB                     	return
 12634  13EB  0008               	opt stack 0
 12635                           GLOBAL	__end_of_LCD_set_xy
 12636                           	__end_of_LCD_set_xy:
 12637  13EC                     	signat	_LCD_set_xy,8313
 12638                           	global	_LCD_en_dat
 12639                           
 12640 ;; *************** function _LCD_en_dat *****************
 12641 ;; Defined at:
 12642 ;;		line 34 in file "LCD.c"
 12643 ;; Parameters:    Size  Location     Type
 12644 ;;  dat             1    wreg     unsigned char 
 12645 ;; Auto vars:     Size  Location     Type
 12646 ;;  dat             1    3[COMMON] unsigned char 
 12647 ;; Return value:  Size  Location     Type
 12648 ;;                  1    wreg      void 
 12649 ;; Registers used:
 12650 ;;		wreg, status,2, status,0, pclath, cstack
 12651 ;; Tracked objects:
 12652 ;;		On entry : 0/0
 12653 ;;		On exit  : 0/0
 12654 ;;		Unchanged: 0/0
 12655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12656 ;;      Params:         0       0       0       0       0
 12657 ;;      Locals:         1       0       0       0       0
 12658 ;;      Temps:          0       0       0       0       0
 12659 ;;      Totals:         1       0       0       0       0
 12660 ;;Total ram usage:        1 bytes
 12661 ;; Hardware stack levels used:    1
 12662 ;; Hardware stack levels required when called:    2
 12663 ;; This function calls:
 12664 ;;		_delay_us
 12665 ;; This function is called by:
 12666 ;;		_LCD_write_char
 12667 ;;		_LCD_write_string
 12668 ;; This function uses a non-reentrant model
 12669 ;;
 12670                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 12671                           	line	34
 12672                           global __ptext31
 12673                           __ptext31:	;psect for function _LCD_en_dat
 12674  1334                     psect	text31
 12675                           	file	"LCD.c"
 12676                           	line	34
 12677                           	global	__size_of_LCD_en_dat
 12678                           	__size_of_LCD_en_dat	equ	__end_of_LCD_en_dat-_LCD_en_dat
 12679  0013                     	
 12680                           _LCD_en_dat:	
 12681  1334                     ;incstack = 0
 12682                           	opt	stack 3
 12683                           ; Regs used in _LCD_en_dat: [wreg+status,2+status,0+pclath+cstack]
 12684                           ;LCD_en_dat@dat stored from wreg
 12685                           	movwf	(LCD_en_dat@dat)
 12686  1334  00F3               	line	36
 12687                           	
 12688                           l2613:	
 12689  1335                     ;LCD.c: 36: PORTEbits.RE1=0;
 12690                           	bcf	status, 5	;RP0=0, select bank0
 12691  1335  1283               	bcf	status, 6	;RP1=0, select bank0
 12692  1336  1303               	bcf	(9),1	;volatile
 12693  1337  1089               	line	37
 12694                           ;LCD.c: 37: PORTEbits.RE0=1;
 12695                           	bsf	(9),0	;volatile
 12696  1338  1409               	line	38
 12697                           ;LCD.c: 38: PORTEbits.RE2=0;
 12698                           	bcf	(9),2	;volatile
 12699  1339  1109               	line	40
 12700                           	
 12701                           l2615:	
 12702  133A                     ;LCD.c: 40: PORTD=dat;
 12703                           	movf	(LCD_en_dat@dat),w
 12704  133A  0873               	movwf	(8)	;volatile
 12705  133B  0088               	line	42
 12706                           	
 12707                           l2617:	
 12708  133C                     ;LCD.c: 42: PORTEbits.RE1=1;
 12709                           	bsf	(9),1	;volatile
 12710  133C  1489               	line	43
 12711                           	
 12712                           l2619:	
 12713  133D                     ;LCD.c: 43: delay_us(8);
 12714                           	movlw	low(08h)
 12715  133D  3008               	fcall	_delay_us
 12716  133E  160A  118A  22D8  160A  118A  	line	44
 12717                           	
 12718                           l2621:	
 12719  1343                     ;LCD.c: 44: PORTEbits.RE1=0;
 12720                           	bcf	status, 5	;RP0=0, select bank0
 12721  1343  1283               	bcf	status, 6	;RP1=0, select bank0
 12722  1344  1303               	bcf	(9),1	;volatile
 12723  1345  1089               	line	45
 12724                           	
 12725                           l109:	
 12726  1346                     	return
 12727  1346  0008               	opt stack 0
 12728                           GLOBAL	__end_of_LCD_en_dat
 12729                           	__end_of_LCD_en_dat:
 12730  1347                     	signat	_LCD_en_dat,4217
 12731                           	global	_MUSIC_init
 12732                           
 12733 ;; *************** function _MUSIC_init *****************
 12734 ;; Defined at:
 12735 ;;		line 85 in file "SONG.c"
 12736 ;; Parameters:    Size  Location     Type
 12737 ;;		None
 12738 ;; Auto vars:     Size  Location     Type
 12739 ;;		None
 12740 ;; Return value:  Size  Location     Type
 12741 ;;                  1    wreg      void 
 12742 ;; Registers used:
 12743 ;;		status,2
 12744 ;; Tracked objects:
 12745 ;;		On entry : 0/0
 12746 ;;		On exit  : 0/0
 12747 ;;		Unchanged: 0/0
 12748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12749 ;;      Params:         0       0       0       0       0
 12750 ;;      Locals:         0       0       0       0       0
 12751 ;;      Temps:          0       0       0       0       0
 12752 ;;      Totals:         0       0       0       0       0
 12753 ;;Total ram usage:        0 bytes
 12754 ;; Hardware stack levels used:    1
 12755 ;; Hardware stack levels required when called:    1
 12756 ;; This function calls:
 12757 ;;		Nothing
 12758 ;; This function is called by:
 12759 ;;		_main
 12760 ;; This function uses a non-reentrant model
 12761 ;;
 12762                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 12763                           	file	"SONG.c"
 12764                           	line	85
 12765                           global __ptext32
 12766                           __ptext32:	;psect for function _MUSIC_init
 12767  12AA                     psect	text32
 12768                           	file	"SONG.c"
 12769                           	line	85
 12770                           	global	__size_of_MUSIC_init
 12771                           	__size_of_MUSIC_init	equ	__end_of_MUSIC_init-_MUSIC_init
 12772  0005                     	
 12773                           _MUSIC_init:	
 12774  12AA                     ;incstack = 0
 12775                           	opt	stack 6
 12776                           ; Regs used in _MUSIC_init: [status,2]
 12777                           	line	87
 12778                           	
 12779                           l3085:	
 12780  12AA                     ;SONG.c: 87: isMusicPlaying = 0;
 12781                           	bcf	(_isMusicPlaying/8),(_isMusicPlaying)&7
 12782  12AA  117A               	line	88
 12783                           	
 12784                           l3087:	
 12785  12AB                     ;SONG.c: 88: SongNum = 0;
 12786                           	bcf	status, 5	;RP0=0, select bank0
 12787  12AB  1283               	bcf	status, 6	;RP1=0, select bank0
 12788  12AC  1303               	clrf	(_SongNum)
 12789  12AD  01C2               	line	89
 12790                           	
 12791                           l784:	
 12792  12AE                     	return
 12793  12AE  0008               	opt stack 0
 12794                           GLOBAL	__end_of_MUSIC_init
 12795                           	__end_of_MUSIC_init:
 12796  12AF                     	signat	_MUSIC_init,89
 12797                           	global	_LED_Init
 12798                           
 12799 ;; *************** function _LED_Init *****************
 12800 ;; Defined at:
 12801 ;;		line 5 in file "LED.c"
 12802 ;; Parameters:    Size  Location     Type
 12803 ;;		None
 12804 ;; Auto vars:     Size  Location     Type
 12805 ;;		None
 12806 ;; Return value:  Size  Location     Type
 12807 ;;                  1    wreg      void 
 12808 ;; Registers used:
 12809 ;;		wreg, status,2, status,0
 12810 ;; Tracked objects:
 12811 ;;		On entry : 0/0
 12812 ;;		On exit  : 0/0
 12813 ;;		Unchanged: 0/0
 12814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12815 ;;      Params:         0       0       0       0       0
 12816 ;;      Locals:         0       0       0       0       0
 12817 ;;      Temps:          1       0       0       0       0
 12818 ;;      Totals:         1       0       0       0       0
 12819 ;;Total ram usage:        1 bytes
 12820 ;; Hardware stack levels used:    1
 12821 ;; Hardware stack levels required when called:    1
 12822 ;; This function calls:
 12823 ;;		Nothing
 12824 ;; This function is called by:
 12825 ;;		_main
 12826 ;; This function uses a non-reentrant model
 12827 ;;
 12828                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 12829                           	file	"LED.c"
 12830                           	line	5
 12831                           global __ptext33
 12832                           __ptext33:	;psect for function _LED_Init
 12833  12CD                     psect	text33
 12834                           	file	"LED.c"
 12835                           	line	5
 12836                           	global	__size_of_LED_Init
 12837                           	__size_of_LED_Init	equ	__end_of_LED_Init-_LED_Init
 12838  000B                     	
 12839                           _LED_Init:	
 12840  12CD                     ;incstack = 0
 12841                           	opt	stack 6
 12842                           ; Regs used in _LED_Init: [wreg+status,2+status,0]
 12843                           	line	6
 12844                           	
 12845                           l3079:	
 12846  12CD                     ;LED.c: 6: TRISC &= 0b11111100;
 12847                           	movlw	low(0FCh)
 12848  12CD  30FC               	movwf	(??_LED_Init+0)+0
 12849  12CE  00F2               	movf	(??_LED_Init+0)+0,w
 12850  12CF  0872               	bsf	status, 5	;RP0=1, select bank1
 12851  12D0  1683               	bcf	status, 6	;RP1=0, select bank1
 12852  12D1  1303               	andwf	(135)^080h,f	;volatile
 12853  12D2  0587               	line	7
 12854                           	
 12855                           l3081:	
 12856  12D3                     ;LED.c: 7: PORTCbits.RC0 = 0;
 12857                           	bcf	status, 5	;RP0=0, select bank0
 12858  12D3  1283               	bcf	status, 6	;RP1=0, select bank0
 12859  12D4  1303               	bcf	(7),0	;volatile
 12860  12D5  1007               	line	8
 12861                           	
 12862                           l3083:	
 12863  12D6                     ;LED.c: 8: PORTCbits.RC1 = 0;
 12864                           	bcf	(7),1	;volatile
 12865  12D6  1087               	line	9
 12866                           	
 12867                           l708:	
 12868  12D7                     	return
 12869  12D7  0008               	opt stack 0
 12870                           GLOBAL	__end_of_LED_Init
 12871                           	__end_of_LED_Init:
 12872  12D8                     	signat	_LED_Init,89
 12873                           	global	_LCD_init
 12874                           
 12875 ;; *************** function _LCD_init *****************
 12876 ;; Defined at:
 12877 ;;		line 24 in file "LCD.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;		None
 12880 ;; Auto vars:     Size  Location     Type
 12881 ;;		None
 12882 ;; Return value:  Size  Location     Type
 12883 ;;                  1    wreg      void 
 12884 ;; Registers used:
 12885 ;;		wreg, status,2, status,0, pclath, cstack
 12886 ;; Tracked objects:
 12887 ;;		On entry : 0/0
 12888 ;;		On exit  : 0/0
 12889 ;;		Unchanged: 0/0
 12890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12891 ;;      Params:         0       0       0       0       0
 12892 ;;      Locals:         0       0       0       0       0
 12893 ;;      Temps:          0       0       0       0       0
 12894 ;;      Totals:         0       0       0       0       0
 12895 ;;Total ram usage:        0 bytes
 12896 ;; Hardware stack levels used:    1
 12897 ;; Hardware stack levels required when called:    3
 12898 ;; This function calls:
 12899 ;;		_LCD_en_command
 12900 ;; This function is called by:
 12901 ;;		_main
 12902 ;; This function uses a non-reentrant model
 12903 ;;
 12904                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 12905                           	file	"LCD.c"
 12906                           	line	24
 12907                           global __ptext34
 12908                           __ptext34:	;psect for function _LCD_init
 12909  1448                     psect	text34
 12910                           	file	"LCD.c"
 12911                           	line	24
 12912                           	global	__size_of_LCD_init
 12913                           	__size_of_LCD_init	equ	__end_of_LCD_init-_LCD_init
 12914  001F                     	
 12915                           _LCD_init:	
 12916  1448                     ;incstack = 0
 12917                           	opt	stack 4
 12918                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
 12919                           	line	26
 12920                           	
 12921                           l4111:	
 12922  1448                     ;LCD.c: 26: LCD_en_command(0x01);
 12923                           	movlw	low(01h)
 12924  1448  3001               	fcall	_LCD_en_command
 12925  1449  160A  118A  2608  160A  118A  	line	27
 12926                           ;LCD.c: 27: LCD_en_command(0x38);
 12927                           	movlw	low(038h)
 12928  144E  3038               	fcall	_LCD_en_command
 12929  144F  160A  118A  2608  160A  118A  	line	28
 12930                           ;LCD.c: 28: LCD_en_command(0x0C);
 12931                           	movlw	low(0Ch)
 12932  1454  300C               	fcall	_LCD_en_command
 12933  1455  160A  118A  2608  160A  118A  	line	29
 12934                           ;LCD.c: 29: LCD_en_command(0x80);
 12935                           	movlw	low(080h)
 12936  145A  3080               	fcall	_LCD_en_command
 12937  145B  160A  118A  2608  160A  118A  	line	30
 12938                           ;LCD.c: 30: LCD_en_command(0x01);
 12939                           	movlw	low(01h)
 12940  1460  3001               	fcall	_LCD_en_command
 12941  1461  160A  118A  2608  160A  118A  	line	31
 12942                           	
 12943                           l106:	
 12944  1466                     	return
 12945  1466  0008               	opt stack 0
 12946                           GLOBAL	__end_of_LCD_init
 12947                           	__end_of_LCD_init:
 12948  1467                     	signat	_LCD_init,89
 12949                           	global	_LCD_MPU_init
 12950                           
 12951 ;; *************** function _LCD_MPU_init *****************
 12952 ;; Defined at:
 12953 ;;		line 111 in file "LCD.c"
 12954 ;; Parameters:    Size  Location     Type
 12955 ;;		None
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;		None
 12958 ;; Return value:  Size  Location     Type
 12959 ;;                  1    wreg      void 
 12960 ;; Registers used:
 12961 ;;		wreg, status,2, status,0
 12962 ;; Tracked objects:
 12963 ;;		On entry : 0/0
 12964 ;;		On exit  : 0/0
 12965 ;;		Unchanged: 0/0
 12966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12967 ;;      Params:         0       0       0       0       0
 12968 ;;      Locals:         0       0       0       0       0
 12969 ;;      Temps:          1       0       0       0       0
 12970 ;;      Totals:         1       0       0       0       0
 12971 ;;Total ram usage:        1 bytes
 12972 ;; Hardware stack levels used:    1
 12973 ;; Hardware stack levels required when called:    1
 12974 ;; This function calls:
 12975 ;;		Nothing
 12976 ;; This function is called by:
 12977 ;;		_main
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
 12981                           	line	111
 12982                           global __ptext35
 12983                           __ptext35:	;psect for function _LCD_MPU_init
 12984  12E5                     psect	text35
 12985                           	file	"LCD.c"
 12986                           	line	111
 12987                           	global	__size_of_LCD_MPU_init
 12988                           	__size_of_LCD_MPU_init	equ	__end_of_LCD_MPU_init-_LCD_MPU_init
 12989  000E                     	
 12990                           _LCD_MPU_init:	
 12991  12E5                     ;incstack = 0
 12992                           	opt	stack 6
 12993                           ; Regs used in _LCD_MPU_init: [wreg+status,2+status,0]
 12994                           	line	113
 12995                           	
 12996                           l3067:	
 12997  12E5                     ;LCD.c: 113: TRISE&=0b11111000;
 12998                           	movlw	low(0F8h)
 12999  12E5  30F8               	movwf	(??_LCD_MPU_init+0)+0
 13000  12E6  00F2               	movf	(??_LCD_MPU_init+0)+0,w
 13001  12E7  0872               	bsf	status, 5	;RP0=1, select bank1
 13002  12E8  1683               	bcf	status, 6	;RP1=0, select bank1
 13003  12E9  1303               	andwf	(137)^080h,f	;volatile
 13004  12EA  0589               	line	114
 13005                           	
 13006                           l3069:	
 13007  12EB                     ;LCD.c: 114: ANSEL=0;
 13008                           	bsf	status, 5	;RP0=1, select bank3
 13009  12EB  1683               	bsf	status, 6	;RP1=1, select bank3
 13010  12EC  1703               	clrf	(392)^0180h	;volatile
 13011  12ED  0188               	line	115
 13012                           	
 13013                           l3071:	
 13014  12EE                     ;LCD.c: 115: ANSELH=0;
 13015                           	clrf	(393)^0180h	;volatile
 13016  12EE  0189               	line	116
 13017                           	
 13018                           l3073:	
 13019  12EF                     ;LCD.c: 116: TRISD=0;
 13020                           	bsf	status, 5	;RP0=1, select bank1
 13021  12EF  1683               	bcf	status, 6	;RP1=0, select bank1
 13022  12F0  1303               	clrf	(136)^080h	;volatile
 13023  12F1  0188               	line	118
 13024                           	
 13025                           l135:	
 13026  12F2                     	return
 13027  12F2  0008               	opt stack 0
 13028                           GLOBAL	__end_of_LCD_MPU_init
 13029                           	__end_of_LCD_MPU_init:
 13030  12F3                     	signat	_LCD_MPU_init,89
 13031                           	global	_KEY_init
 13032                           
 13033 ;; *************** function _KEY_init *****************
 13034 ;; Defined at:
 13035 ;;		line 20 in file "KEY.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;		None
 13038 ;; Auto vars:     Size  Location     Type
 13039 ;;		None
 13040 ;; Return value:  Size  Location     Type
 13041 ;;                  1    wreg      void 
 13042 ;; Registers used:
 13043 ;;		wreg, status,2, status,0
 13044 ;; Tracked objects:
 13045 ;;		On entry : 0/0
 13046 ;;		On exit  : 0/0
 13047 ;;		Unchanged: 0/0
 13048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13049 ;;      Params:         0       0       0       0       0
 13050 ;;      Locals:         0       0       0       0       0
 13051 ;;      Temps:          1       0       0       0       0
 13052 ;;      Totals:         1       0       0       0       0
 13053 ;;Total ram usage:        1 bytes
 13054 ;; Hardware stack levels used:    1
 13055 ;; Hardware stack levels required when called:    1
 13056 ;; This function calls:
 13057 ;;		Nothing
 13058 ;; This function is called by:
 13059 ;;		_main
 13060 ;; This function uses a non-reentrant model
 13061 ;;
 13062                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 13063                           	file	"KEY.c"
 13064                           	line	20
 13065                           global __ptext36
 13066                           __ptext36:	;psect for function _KEY_init
 13067  1322                     psect	text36
 13068                           	file	"KEY.c"
 13069                           	line	20
 13070                           	global	__size_of_KEY_init
 13071                           	__size_of_KEY_init	equ	__end_of_KEY_init-_KEY_init
 13072  0012                     	
 13073                           _KEY_init:	
 13074  1322                     ;incstack = 0
 13075                           	opt	stack 6
 13076                           ; Regs used in _KEY_init: [wreg+status,2+status,0]
 13077                           	line	21
 13078                           	
 13079                           l3089:	
 13080  1322                     ;KEY.c: 21: ANSEL = 0;
 13081                           	bsf	status, 5	;RP0=1, select bank3
 13082  1322  1683               	bsf	status, 6	;RP1=1, select bank3
 13083  1323  1703               	clrf	(392)^0180h	;volatile
 13084  1324  0188               	line	22
 13085                           ;KEY.c: 22: ANSELH = 0;
 13086                           	clrf	(393)^0180h	;volatile
 13087  1325  0189               	line	23
 13088                           	
 13089                           l3091:	
 13090  1326                     ;KEY.c: 23: OPTION_REGbits.nRBPU = 0;
 13091                           	bsf	status, 5	;RP0=1, select bank1
 13092  1326  1683               	bcf	status, 6	;RP1=0, select bank1
 13093  1327  1303               	bcf	(129)^080h,7	;volatile
 13094  1328  1381               	line	24
 13095                           	
 13096                           l3093:	
 13097  1329                     ;KEY.c: 24: TRISB |= 0b11111101;
 13098                           	movlw	low(0FDh)
 13099  1329  30FD               	movwf	(??_KEY_init+0)+0
 13100  132A  00F2               	movf	(??_KEY_init+0)+0,w
 13101  132B  0872               	iorwf	(134)^080h,f	;volatile
 13102  132C  0486               	line	25
 13103                           	
 13104                           l3095:	
 13105  132D                     ;KEY.c: 25: Mode = 0;
 13106                           	bcf	status, 5	;RP0=0, select bank0
 13107  132D  1283               	bcf	status, 6	;RP1=0, select bank0
 13108  132E  1303               	clrf	(_Mode)
 13109  132F  01AB               	line	26
 13110                           	
 13111                           l3097:	
 13112  1330                     ;KEY.c: 26: cursor_addr = 0;
 13113                           	clrf	(_cursor_addr)
 13114  1330  01AA               	line	27
 13115                           	
 13116                           l3099:	
 13117  1331                     ;KEY.c: 27: clear_flag = 1;
 13118                           	bsf	(_clear_flag/8),(_clear_flag)&7
 13119  1331  147A               	line	28
 13120                           	
 13121                           l3101:	
 13122  1332                     ;KEY.c: 28: isMusicMode = 0;
 13123                           	bcf	(_isMusicMode/8),(_isMusicMode)&7
 13124  1332  10FA               	line	29
 13125                           	
 13126                           l411:	
 13127  1333                     	return
 13128  1333  0008               	opt stack 0
 13129                           GLOBAL	__end_of_KEY_init
 13130                           	__end_of_KEY_init:
 13131  1334                     	signat	_KEY_init,89
 13132                           	global	_Initialize_UART
 13133                           
 13134 ;; *************** function _Initialize_UART *****************
 13135 ;; Defined at:
 13136 ;;		line 9 in file "UART.c"
 13137 ;; Parameters:    Size  Location     Type
 13138 ;;		None
 13139 ;; Auto vars:     Size  Location     Type
 13140 ;;		None
 13141 ;; Return value:  Size  Location     Type
 13142 ;;                  1    wreg      void 
 13143 ;; Registers used:
 13144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13145 ;; Tracked objects:
 13146 ;;		On entry : 0/0
 13147 ;;		On exit  : 0/0
 13148 ;;		Unchanged: 0/0
 13149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13150 ;;      Params:         0       0       0       0       0
 13151 ;;      Locals:         0       0       0       0       0
 13152 ;;      Temps:          0       0       0       0       0
 13153 ;;      Totals:         0       0       0       0       0
 13154 ;;Total ram usage:        0 bytes
 13155 ;; Hardware stack levels used:    1
 13156 ;; Hardware stack levels required when called:    3
 13157 ;; This function calls:
 13158 ;;		_UART_send_string
 13159 ;; This function is called by:
 13160 ;;		_main
 13161 ;; This function uses a non-reentrant model
 13162 ;;
 13163                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 13164                           	file	"UART.c"
 13165                           	line	9
 13166                           global __ptext37
 13167                           __ptext37:	;psect for function _Initialize_UART
 13168  1429                     psect	text37
 13169                           	file	"UART.c"
 13170                           	line	9
 13171                           	global	__size_of_Initialize_UART
 13172                           	__size_of_Initialize_UART	equ	__end_of_Initialize_UART-_Initialize_UART
 13173  001F                     	
 13174                           _Initialize_UART:	
 13175  1429                     ;incstack = 0
 13176                           	opt	stack 4
 13177                           ; Regs used in _Initialize_UART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 13178                           	line	11
 13179                           	
 13180                           l3031:	
 13181  1429                     ;UART.c: 11: TRISCbits.TRISC6 = 0;
 13182                           	bsf	status, 5	;RP0=1, select bank1
 13183  1429  1683               	bcf	status, 6	;RP1=0, select bank1
 13184  142A  1303               	bcf	(135)^080h,6	;volatile
 13185  142B  1307               	line	12
 13186                           ;UART.c: 12: TRISCbits.TRISC7 = 1;
 13187                           	bsf	(135)^080h,7	;volatile
 13188  142C  1787               	line	14
 13189                           ;UART.c: 14: BAUDCTLbits.BRG16 = 0;
 13190                           	bsf	status, 5	;RP0=1, select bank3
 13191  142D  1683               	bsf	status, 6	;RP1=1, select bank3
 13192  142E  1703               	bcf	(391)^0180h,3	;volatile
 13193  142F  1187               	line	16
 13194                           ;UART.c: 16: TXSTAbits.TX9 = 0;
 13195                           	bsf	status, 5	;RP0=1, select bank1
 13196  1430  1683               	bcf	status, 6	;RP1=0, select bank1
 13197  1431  1303               	bcf	(152)^080h,6	;volatile
 13198  1432  1318               	line	17
 13199                           ;UART.c: 17: TXSTAbits.TXEN = 1;
 13200                           	bsf	(152)^080h,5	;volatile
 13201  1433  1698               	line	18
 13202                           ;UART.c: 18: TXSTAbits.SYNC = 0;
 13203                           	bcf	(152)^080h,4	;volatile
 13204  1434  1218               	line	19
 13205                           ;UART.c: 19: TXSTAbits.BRGH = 1;
 13206                           	bsf	(152)^080h,2	;volatile
 13207  1435  1518               	line	21
 13208                           	
 13209                           l3033:	
 13210  1436                     ;UART.c: 21: SPBRG = (((4000000/16)/9600) - 1);
 13211                           	movlw	low(019h)
 13212  1436  3019               	movwf	(153)^080h	;volatile
 13213  1437  0099               	line	23
 13214                           	
 13215                           l3035:	
 13216  1438                     ;UART.c: 23: RCSTAbits.SPEN = 1;
 13217                           	bcf	status, 5	;RP0=0, select bank0
 13218  1438  1283               	bcf	status, 6	;RP1=0, select bank0
 13219  1439  1303               	bsf	(24),7	;volatile
 13220  143A  1798               	line	24
 13221                           	
 13222                           l3037:	
 13223  143B                     ;UART.c: 24: RCSTAbits.RX9 = 0;
 13224                           	bcf	(24),6	;volatile
 13225  143B  1318               	line	25
 13226                           	
 13227                           l3039:	
 13228  143C                     ;UART.c: 25: RCSTAbits.CREN = 1;
 13229                           	bsf	(24),4	;volatile
 13230  143C  1618               	line	26
 13231                           	
 13232                           l3041:	
 13233  143D                     ;UART.c: 26: RCSTAbits.ADDEN = 0;
 13234                           	bcf	(24),3	;volatile
 13235  143D  1198               	line	27
 13236                           	
 13237                           l3043:	
 13238  143E                     ;UART.c: 27: UART_send_string("UART Module Initialized and active \r");
 13239                           	movlw	low(((STR_21)|8000h))
 13240  143E  30D6               	movwf	(UART_send_string@Str)
 13241  143F  00F3               	movlw	high(((STR_21)|8000h))
 13242  1440  308A               	movwf	((UART_send_string@Str))+1
 13243  1441  00F4               	fcall	_UART_send_string
 13244  1442  160A  118A  252C  160A  118A  	line	28
 13245                           	
 13246                           l734:	
 13247  1447                     	return
 13248  1447  0008               	opt stack 0
 13249                           GLOBAL	__end_of_Initialize_UART
 13250                           	__end_of_Initialize_UART:
 13251  1448                     	signat	_Initialize_UART,89
 13252                           	global	_UART_send_string
 13253                           
 13254 ;; *************** function _UART_send_string *****************
 13255 ;; Defined at:
 13256 ;;		line 38 in file "UART.c"
 13257 ;; Parameters:    Size  Location     Type
 13258 ;;  Str             2    3[COMMON] PTR unsigned char 
 13259 ;;		 -> STR_21(37), 
 13260 ;; Auto vars:     Size  Location     Type
 13261 ;;		None
 13262 ;; Return value:  Size  Location     Type
 13263 ;;                  1    wreg      void 
 13264 ;; Registers used:
 13265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13266 ;; Tracked objects:
 13267 ;;		On entry : 0/0
 13268 ;;		On exit  : 0/0
 13269 ;;		Unchanged: 0/0
 13270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13271 ;;      Params:         2       0       0       0       0
 13272 ;;      Locals:         0       0       0       0       0
 13273 ;;      Temps:          0       0       0       0       0
 13274 ;;      Totals:         2       0       0       0       0
 13275 ;;Total ram usage:        2 bytes
 13276 ;; Hardware stack levels used:    1
 13277 ;; Hardware stack levels required when called:    2
 13278 ;; This function calls:
 13279 ;;		_UART_send_char
 13280 ;; This function is called by:
 13281 ;;		_Initialize_UART
 13282 ;; This function uses a non-reentrant model
 13283 ;;
 13284                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 13285                           	line	38
 13286                           global __ptext38
 13287                           __ptext38:	;psect for function _UART_send_string
 13288  152C                     psect	text38
 13289                           	file	"UART.c"
 13290                           	line	38
 13291                           	global	__size_of_UART_send_string
 13292                           	__size_of_UART_send_string	equ	__end_of_UART_send_string-_UART_send_string
 13293  0028                     	
 13294                           _UART_send_string:	
 13295  152C                     ;incstack = 0
 13296                           	opt	stack 4
 13297                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 13298                           	line	39
 13299                           	
 13300                           l3013:	
 13301  152C                     ;UART.c: 39: while (*Str != '\0')
 13302                           	goto	l3019
 13303  152C  2D42               	
 13304                           l747:	
 13305  152D                     	line	40
 13306                           	
 13307                           l3015:	
 13308  152D                     ;UART.c: 40: UART_send_char(*Str++);
 13309                           	movf	(UART_send_string@Str+1),w
 13310  152D  0874               	bcf	status, 5	;RP0=0, select bank0
 13311  152E  1283               	bcf	status, 6	;RP1=0, select bank0
 13312  152F  1303               	movwf	btemp+1
 13313  1530  00FF               	movf	(UART_send_string@Str),w
 13314  1531  0873               	movwf	fsr0
 13315  1532  0084               	fcall	stringtab
 13316  1533  120A  158A  2000  160A  118A  	fcall	_UART_send_char
 13317  1538  160A  118A  235A  160A  118A  	
 13318                           l3017:	
 13319  153D                     	movlw	01h
 13320  153D  3001               	addwf	(UART_send_string@Str),f
 13321  153E  07F3               	skipnc
 13322  153F  1803               	incf	(UART_send_string@Str+1),f
 13323  1540  0AF4               	goto	l3019
 13324  1541  2D42               	
 13325                           l746:	
 13326  1542                     	line	39
 13327                           	
 13328                           l3019:	
 13329  1542                     	movf	(UART_send_string@Str+1),w
 13330  1542  0874               	bcf	status, 5	;RP0=0, select bank0
 13331  1543  1283               	bcf	status, 6	;RP1=0, select bank0
 13332  1544  1303               	movwf	btemp+1
 13333  1545  00FF               	movf	(UART_send_string@Str),w
 13334  1546  0873               	movwf	fsr0
 13335  1547  0084               	fcall	stringtab
 13336  1548  120A  158A  2000  160A  118A  	xorlw	0
 13337  154D  3A00               	skipz
 13338  154E  1D03               	goto	u2951
 13339  154F  2D51               	goto	u2950
 13340  1550  2D52               u2951:
 13341  1551                     	goto	l3015
 13342  1551  2D2D               u2950:
 13343  1552                     	goto	l749
 13344  1552  2D53               	
 13345                           l748:	
 13346  1553                     	line	41
 13347                           	
 13348                           l749:	
 13349  1553                     	return
 13350  1553  0008               	opt stack 0
 13351                           GLOBAL	__end_of_UART_send_string
 13352                           	__end_of_UART_send_string:
 13353  1554                     	signat	_UART_send_string,4217
 13354                           	global	_UART_send_char
 13355                           
 13356 ;; *************** function _UART_send_char *****************
 13357 ;; Defined at:
 13358 ;;		line 31 in file "UART.c"
 13359 ;; Parameters:    Size  Location     Type
 13360 ;;  data            1    wreg     unsigned char 
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;  data            1    2[COMMON] unsigned char 
 13363 ;; Return value:  Size  Location     Type
 13364 ;;                  1    wreg      void 
 13365 ;; Registers used:
 13366 ;;		wreg
 13367 ;; Tracked objects:
 13368 ;;		On entry : 0/0
 13369 ;;		On exit  : 0/0
 13370 ;;		Unchanged: 0/0
 13371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13372 ;;      Params:         0       0       0       0       0
 13373 ;;      Locals:         1       0       0       0       0
 13374 ;;      Temps:          0       0       0       0       0
 13375 ;;      Totals:         1       0       0       0       0
 13376 ;;Total ram usage:        1 bytes
 13377 ;; Hardware stack levels used:    1
 13378 ;; Hardware stack levels required when called:    1
 13379 ;; This function calls:
 13380 ;;		Nothing
 13381 ;; This function is called by:
 13382 ;;		_UART_send_string
 13383 ;; This function uses a non-reentrant model
 13384 ;;
 13385                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 13386                           	line	31
 13387                           global __ptext39
 13388                           __ptext39:	;psect for function _UART_send_char
 13389  135A                     psect	text39
 13390                           	file	"UART.c"
 13391                           	line	31
 13392                           	global	__size_of_UART_send_char
 13393                           	__size_of_UART_send_char	equ	__end_of_UART_send_char-_UART_send_char
 13394  0014                     	
 13395                           _UART_send_char:	
 13396  135A                     ;incstack = 0
 13397                           	opt	stack 4
 13398                           ; Regs used in _UART_send_char: [wreg]
 13399                           ;UART_send_char@data stored from wreg
 13400                           	movwf	(UART_send_char@data)
 13401  135A  00F2               	line	32
 13402                           	
 13403                           l2777:	
 13404  135B                     ;UART.c: 32: TXREG = data;
 13405                           	movf	(UART_send_char@data),w
 13406  135B  0872               	bcf	status, 5	;RP0=0, select bank0
 13407  135C  1283               	bcf	status, 6	;RP1=0, select bank0
 13408  135D  1303               	movwf	(25)	;volatile
 13409  135E  0099               	line	33
 13410                           ;UART.c: 33: while (!TXIF);
 13411                           	goto	l737
 13412  135F  2B60               	
 13413                           l738:	
 13414  1360                     	
 13415                           l737:	
 13416  1360                     	btfss	(100/8),(100)&7	;volatile
 13417  1360  1E0C               	goto	u2441
 13418  1361  2B63               	goto	u2440
 13419  1362  2B64               u2441:
 13420  1363                     	goto	l737
 13421  1363  2B60               u2440:
 13422  1364                     	goto	l740
 13423  1364  2B66               	
 13424                           l739:	
 13425  1365                     	line	34
 13426                           ;UART.c: 34: while (TXSTAbits.TRMT == 0);
 13427                           	goto	l740
 13428  1365  2B66               	
 13429                           l741:	
 13430  1366                     	
 13431                           l740:	
 13432  1366                     	bsf	status, 5	;RP0=1, select bank1
 13433  1366  1683               	bcf	status, 6	;RP1=0, select bank1
 13434  1367  1303               	btfss	(152)^080h,1	;volatile
 13435  1368  1C98               	goto	u2451
 13436  1369  2B6B               	goto	u2450
 13437  136A  2B6C               u2451:
 13438  136B                     	goto	l740
 13439  136B  2B66               u2450:
 13440  136C                     	goto	l743
 13441  136C  2B6D               	
 13442                           l742:	
 13443  136D                     	line	35
 13444                           	
 13445                           l743:	
 13446  136D                     	return
 13447  136D  0008               	opt stack 0
 13448                           GLOBAL	__end_of_UART_send_char
 13449                           	__end_of_UART_send_char:
 13450  136E                     	signat	_UART_send_char,4217
 13451                           	global	_Initialize_INT
 13452                           
 13453 ;; *************** function _Initialize_INT *****************
 13454 ;; Defined at:
 13455 ;;		line 3 in file "INT.c"
 13456 ;; Parameters:    Size  Location     Type
 13457 ;;		None
 13458 ;; Auto vars:     Size  Location     Type
 13459 ;;		None
 13460 ;; Return value:  Size  Location     Type
 13461 ;;                  1    wreg      void 
 13462 ;; Registers used:
 13463 ;;		None
 13464 ;; Tracked objects:
 13465 ;;		On entry : 0/0
 13466 ;;		On exit  : 0/0
 13467 ;;		Unchanged: 0/0
 13468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13469 ;;      Params:         0       0       0       0       0
 13470 ;;      Locals:         0       0       0       0       0
 13471 ;;      Temps:          0       0       0       0       0
 13472 ;;      Totals:         0       0       0       0       0
 13473 ;;Total ram usage:        0 bytes
 13474 ;; Hardware stack levels used:    1
 13475 ;; Hardware stack levels required when called:    1
 13476 ;; This function calls:
 13477 ;;		Nothing
 13478 ;; This function is called by:
 13479 ;;		_main
 13480 ;; This function uses a non-reentrant model
 13481 ;;
 13482                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 13483                           	file	"INT.c"
 13484                           	line	3
 13485                           global __ptext40
 13486                           __ptext40:	;psect for function _Initialize_INT
 13487  12B6                     psect	text40
 13488                           	file	"INT.c"
 13489                           	line	3
 13490                           	global	__size_of_Initialize_INT
 13491                           	__size_of_Initialize_INT	equ	__end_of_Initialize_INT-_Initialize_INT
 13492  0007                     	
 13493                           _Initialize_INT:	
 13494  12B6                     ;incstack = 0
 13495                           	opt	stack 6
 13496                           ; Regs used in _Initialize_INT: []
 13497                           	line	5
 13498                           	
 13499                           l3045:	
 13500  12B6                     ;INT.c: 5: INTCONbits.GIE = 1;
 13501                           	bsf	(11),7	;volatile
 13502  12B6  178B               	line	6
 13503                           ;INT.c: 6: INTCONbits.PEIE = 1;
 13504                           	bsf	(11),6	;volatile
 13505  12B7  170B               	line	7
 13506                           ;INT.c: 7: INTCONbits.INTE=1;
 13507                           	bsf	(11),4	;volatile
 13508  12B8  160B               	line	8
 13509                           ;INT.c: 8: OPTION_REGbits.INTEDG=0;
 13510                           	bsf	status, 5	;RP0=1, select bank1
 13511  12B9  1683               	bcf	status, 6	;RP1=0, select bank1
 13512  12BA  1303               	bcf	(129)^080h,6	;volatile
 13513  12BB  1301               	line	9
 13514                           	
 13515                           l715:	
 13516  12BC                     	return
 13517  12BC  0008               	opt stack 0
 13518                           GLOBAL	__end_of_Initialize_INT
 13519                           	__end_of_Initialize_INT:
 13520  12BD                     	signat	_Initialize_INT,89
 13521                           	global	_InitScrn
 13522                           
 13523 ;; *************** function _InitScrn *****************
 13524 ;; Defined at:
 13525 ;;		line 121 in file "LCD.c"
 13526 ;; Parameters:    Size  Location     Type
 13527 ;;		None
 13528 ;; Auto vars:     Size  Location     Type
 13529 ;;		None
 13530 ;; Return value:  Size  Location     Type
 13531 ;;                  1    wreg      void 
 13532 ;; Registers used:
 13533 ;;		wreg, status,2, status,0, pclath, cstack
 13534 ;; Tracked objects:
 13535 ;;		On entry : 0/0
 13536 ;;		On exit  : 0/0
 13537 ;;		Unchanged: 0/0
 13538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13539 ;;      Params:         0       0       0       0       0
 13540 ;;      Locals:         0       0       0       0       0
 13541 ;;      Temps:          0       0       0       0       0
 13542 ;;      Totals:         0       0       0       0       0
 13543 ;;Total ram usage:        0 bytes
 13544 ;; Hardware stack levels used:    1
 13545 ;; Hardware stack levels required when called:    3
 13546 ;; This function calls:
 13547 ;;		_LCD_en_command
 13548 ;;		_delay_ms
 13549 ;; This function is called by:
 13550 ;;		_main
 13551 ;; This function uses a non-reentrant model
 13552 ;;
 13553                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 13554                           	file	"LCD.c"
 13555                           	line	121
 13556                           global __ptext41
 13557                           __ptext41:	;psect for function _InitScrn
 13558  1301                     psect	text41
 13559                           	file	"LCD.c"
 13560                           	line	121
 13561                           	global	__size_of_InitScrn
 13562                           	__size_of_InitScrn	equ	__end_of_InitScrn-_InitScrn
 13563  0010                     	
 13564                           _InitScrn:	
 13565  1301                     ;incstack = 0
 13566                           	opt	stack 4
 13567                           ; Regs used in _InitScrn: [wreg+status,2+status,0+pclath+cstack]
 13568                           	line	123
 13569                           	
 13570                           l4113:	
 13571  1301                     ;LCD.c: 123: LCD_en_command(0x01);
 13572                           	movlw	low(01h)
 13573  1301  3001               	fcall	_LCD_en_command
 13574  1302  160A  118A  2608  160A  118A  	line	124
 13575                           ;LCD.c: 124: delay_ms(10);
 13576                           	movlw	0Ah
 13577  1307  300A               	movwf	(delay_ms@n)
 13578  1308  00F2               	movlw	0
 13579  1309  3000               	movwf	((delay_ms@n))+1
 13580  130A  00F3               	fcall	_delay_ms
 13581  130B  160A  118A  2554  160A  118A  	line	126
 13582                           	
 13583                           l138:	
 13584  1310                     	return
 13585  1310  0008               	opt stack 0
 13586                           GLOBAL	__end_of_InitScrn
 13587                           	__end_of_InitScrn:
 13588  1311                     	signat	_InitScrn,89
 13589                           	global	_LCD_en_command
 13590                           
 13591 ;; *************** function _LCD_en_command *****************
 13592 ;; Defined at:
 13593 ;;		line 6 in file "LCD.c"
 13594 ;; Parameters:    Size  Location     Type
 13595 ;;  command         1    wreg     unsigned char 
 13596 ;; Auto vars:     Size  Location     Type
 13597 ;;  command         1    8[COMMON] unsigned char 
 13598 ;; Return value:  Size  Location     Type
 13599 ;;                  1    wreg      void 
 13600 ;; Registers used:
 13601 ;;		wreg, status,2, status,0, pclath, cstack
 13602 ;; Tracked objects:
 13603 ;;		On entry : 0/0
 13604 ;;		On exit  : 0/0
 13605 ;;		Unchanged: 0/0
 13606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13607 ;;      Params:         0       0       0       0       0
 13608 ;;      Locals:         1       0       0       0       0
 13609 ;;      Temps:          0       0       0       0       0
 13610 ;;      Totals:         1       0       0       0       0
 13611 ;;Total ram usage:        1 bytes
 13612 ;; Hardware stack levels used:    1
 13613 ;; Hardware stack levels required when called:    2
 13614 ;; This function calls:
 13615 ;;		_delay_ms
 13616 ;;		_delay_us
 13617 ;; This function is called by:
 13618 ;;		_LCD_init
 13619 ;;		_LCD_set_xy
 13620 ;;		_InitScrn
 13621 ;;		_ClearScreenOnce
 13622 ;; This function uses a non-reentrant model
 13623 ;;
 13624                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 13625                           	line	6
 13626                           global __ptext42
 13627                           __ptext42:	;psect for function _LCD_en_command
 13628  1608                     psect	text42
 13629                           	file	"LCD.c"
 13630                           	line	6
 13631                           	global	__size_of_LCD_en_command
 13632                           	__size_of_LCD_en_command	equ	__end_of_LCD_en_command-_LCD_en_command
 13633  003C                     	
 13634                           _LCD_en_command:	
 13635  1608                     ;incstack = 0
 13636                           	opt	stack 2
 13637                           ; Regs used in _LCD_en_command: [wreg+status,2+status,0+pclath+cstack]
 13638                           ;LCD_en_command@command stored from wreg
 13639                           	movwf	(LCD_en_command@command)
 13640  1608  00F8               	line	8
 13641                           	
 13642                           l3819:	
 13643  1609                     ;LCD.c: 8: PORTEbits.RE1=0;
 13644                           	bcf	status, 5	;RP0=0, select bank0
 13645  1609  1283               	bcf	status, 6	;RP1=0, select bank0
 13646  160A  1303               	bcf	(9),1	;volatile
 13647  160B  1089               	line	9
 13648                           ;LCD.c: 9: PORTEbits.RE0=0;
 13649                           	bcf	(9),0	;volatile
 13650  160C  1009               	line	10
 13651                           ;LCD.c: 10: PORTEbits.RE2=0;
 13652                           	bcf	(9),2	;volatile
 13653  160D  1109               	line	11
 13654                           	
 13655                           l3821:	
 13656  160E                     ;LCD.c: 11: PORTD=command;
 13657                           	movf	(LCD_en_command@command),w
 13658  160E  0878               	movwf	(8)	;volatile
 13659  160F  0088               	line	12
 13660                           	
 13661                           l3823:	
 13662  1610                     ;LCD.c: 12: delay_us(8);
 13663                           	movlw	low(08h)
 13664  1610  3008               	fcall	_delay_us
 13665  1611  160A  118A  22D8  160A  118A  	line	13
 13666                           	
 13667                           l3825:	
 13668  1616                     ;LCD.c: 13: delay_us(8);
 13669                           	movlw	low(08h)
 13670  1616  3008               	fcall	_delay_us
 13671  1617  160A  118A  22D8  160A  118A  	line	14
 13672                           	
 13673                           l3827:	
 13674  161C                     ;LCD.c: 14: delay_us(8);
 13675                           	movlw	low(08h)
 13676  161C  3008               	fcall	_delay_us
 13677  161D  160A  118A  22D8  160A  118A  	line	15
 13678                           	
 13679                           l3829:	
 13680  1622                     ;LCD.c: 15: delay_us(8);
 13681                           	movlw	low(08h)
 13682  1622  3008               	fcall	_delay_us
 13683  1623  160A  118A  22D8  160A  118A  	line	16
 13684                           	
 13685                           l3831:	
 13686  1628                     ;LCD.c: 16: delay_us(8);
 13687                           	movlw	low(08h)
 13688  1628  3008               	fcall	_delay_us
 13689  1629  160A  118A  22D8  160A  118A  	line	17
 13690                           	
 13691                           l3833:	
 13692  162E                     ;LCD.c: 17: delay_us(8);
 13693                           	movlw	low(08h)
 13694  162E  3008               	fcall	_delay_us
 13695  162F  160A  118A  22D8  160A  118A  	line	18
 13696                           	
 13697                           l3835:	
 13698  1634                     ;LCD.c: 18: PORTEbits.RE1=1;
 13699                           	bcf	status, 5	;RP0=0, select bank0
 13700  1634  1283               	bcf	status, 6	;RP1=0, select bank0
 13701  1635  1303               	bsf	(9),1	;volatile
 13702  1636  1489               	line	19
 13703                           	
 13704                           l3837:	
 13705  1637                     ;LCD.c: 19: delay_ms(1);
 13706                           	movlw	01h
 13707  1637  3001               	movwf	(delay_ms@n)
 13708  1638  00F2               	movlw	0
 13709  1639  3000               	movwf	((delay_ms@n))+1
 13710  163A  00F3               	fcall	_delay_ms
 13711  163B  160A  118A  2554  160A  118A  	line	20
 13712                           	
 13713                           l3839:	
 13714  1640                     ;LCD.c: 20: PORTEbits.RE1=0;
 13715                           	bcf	status, 5	;RP0=0, select bank0
 13716  1640  1283               	bcf	status, 6	;RP1=0, select bank0
 13717  1641  1303               	bcf	(9),1	;volatile
 13718  1642  1089               	line	21
 13719                           	
 13720                           l103:	
 13721  1643                     	return
 13722  1643  0008               	opt stack 0
 13723                           GLOBAL	__end_of_LCD_en_command
 13724                           	__end_of_LCD_en_command:
 13725  1644                     	signat	_LCD_en_command,4217
 13726                           	global	_delay_us
 13727                           
 13728 ;; *************** function _delay_us *****************
 13729 ;; Defined at:
 13730 ;;		line 13 in file "DELAY.c"
 13731 ;; Parameters:    Size  Location     Type
 13732 ;;  n               1    wreg     unsigned char 
 13733 ;; Auto vars:     Size  Location     Type
 13734 ;;  n               1    2[COMMON] unsigned char 
 13735 ;; Return value:  Size  Location     Type
 13736 ;;                  1    wreg      void 
 13737 ;; Registers used:
 13738 ;;		wreg, status,2, status,0
 13739 ;; Tracked objects:
 13740 ;;		On entry : 0/0
 13741 ;;		On exit  : 0/0
 13742 ;;		Unchanged: 0/0
 13743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13744 ;;      Params:         0       0       0       0       0
 13745 ;;      Locals:         1       0       0       0       0
 13746 ;;      Temps:          0       0       0       0       0
 13747 ;;      Totals:         1       0       0       0       0
 13748 ;;Total ram usage:        1 bytes
 13749 ;; Hardware stack levels used:    1
 13750 ;; Hardware stack levels required when called:    1
 13751 ;; This function calls:
 13752 ;;		Nothing
 13753 ;; This function is called by:
 13754 ;;		_LCD_en_command
 13755 ;;		_LCD_en_dat
 13756 ;; This function uses a non-reentrant model
 13757 ;;
 13758                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 13759                           	file	"DELAY.c"
 13760                           	line	13
 13761                           global __ptext43
 13762                           __ptext43:	;psect for function _delay_us
 13763  12D8                     psect	text43
 13764                           	file	"DELAY.c"
 13765                           	line	13
 13766                           	global	__size_of_delay_us
 13767                           	__size_of_delay_us	equ	__end_of_delay_us-_delay_us
 13768  000D                     	
 13769                           _delay_us:	
 13770  12D8                     ;incstack = 0
 13771                           	opt	stack 2
 13772                           ; Regs used in _delay_us: [wreg+status,2+status,0]
 13773                           ;delay_us@n stored from wreg
 13774                           	movwf	(delay_us@n)
 13775  12D8  00F2               	line	15
 13776                           	
 13777                           l2573:	
 13778  12D9                     ;DELAY.c: 15: __nop();
 13779                           	opt	asmopt_push
 13780                           	opt	asmopt_off
 13781                           	nop
 13782  12D9  0000               	opt	asmopt_pop
 13783                           	line	16
 13784                           ;DELAY.c: 16: while (n > 0) {
 13785                           	goto	l2577
 13786  12DA  2ADE               	
 13787                           l301:	
 13788  12DB                     	line	17
 13789                           	
 13790                           l2575:	
 13791  12DB                     ;DELAY.c: 17: n--;
 13792                           	movlw	01h
 13793  12DB  3001               	subwf	(delay_us@n),f
 13794  12DC  02F2               	goto	l2577
 13795  12DD  2ADE               	line	18
 13796                           	
 13797                           l300:	
 13798  12DE                     	line	16
 13799                           	
 13800                           l2577:	
 13801  12DE                     	movf	((delay_us@n)),w
 13802  12DE  0872               	btfss	status,2
 13803  12DF  1D03               	goto	u2281
 13804  12E0  2AE2               	goto	u2280
 13805  12E1  2AE3               u2281:
 13806  12E2                     	goto	l2575
 13807  12E2  2ADB               u2280:
 13808  12E3                     	goto	l303
 13809  12E3  2AE4               	
 13810                           l302:	
 13811  12E4                     	line	19
 13812                           	
 13813                           l303:	
 13814  12E4                     	return
 13815  12E4  0008               	opt stack 0
 13816                           GLOBAL	__end_of_delay_us
 13817                           	__end_of_delay_us:
 13818  12E5                     	signat	_delay_us,4217
 13819                           	global	_delay_ms
 13820                           
 13821 ;; *************** function _delay_ms *****************
 13822 ;; Defined at:
 13823 ;;		line 4 in file "DELAY.c"
 13824 ;; Parameters:    Size  Location     Type
 13825 ;;  n               2    2[COMMON] unsigned int 
 13826 ;; Auto vars:     Size  Location     Type
 13827 ;;  j               2    5[COMMON] unsigned int 
 13828 ;;  k               1    7[COMMON] unsigned char 
 13829 ;; Return value:  Size  Location     Type
 13830 ;;                  1    wreg      void 
 13831 ;; Registers used:
 13832 ;;		wreg, status,2, status,0
 13833 ;; Tracked objects:
 13834 ;;		On entry : 0/0
 13835 ;;		On exit  : 0/0
 13836 ;;		Unchanged: 0/0
 13837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13838 ;;      Params:         2       0       0       0       0
 13839 ;;      Locals:         3       0       0       0       0
 13840 ;;      Temps:          1       0       0       0       0
 13841 ;;      Totals:         6       0       0       0       0
 13842 ;;Total ram usage:        6 bytes
 13843 ;; Hardware stack levels used:    1
 13844 ;; Hardware stack levels required when called:    1
 13845 ;; This function calls:
 13846 ;;		Nothing
 13847 ;; This function is called by:
 13848 ;;		_LCD_en_command
 13849 ;;		_InitScrn
 13850 ;;		_beep_ms
 13851 ;;		_SixteenNoteDelay
 13852 ;;		_check_K1
 13853 ;;		_check_K2
 13854 ;;		_check_K3
 13855 ;;		_check_K4
 13856 ;;		_check_K5
 13857 ;;		_check_K6
 13858 ;;		_ModeSwitch
 13859 ;; This function uses a non-reentrant model
 13860 ;;
 13861                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 13862                           	line	4
 13863                           global __ptext44
 13864                           __ptext44:	;psect for function _delay_ms
 13865  1554                     psect	text44
 13866                           	file	"DELAY.c"
 13867                           	line	4
 13868                           	global	__size_of_delay_ms
 13869                           	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
 13870  0029                     	
 13871                           _delay_ms:	
 13872  1554                     ;incstack = 0
 13873                           	opt	stack 4
 13874                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
 13875                           	line	8
 13876                           	
 13877                           l3807:	
 13878  1554                     ;DELAY.c: 6: unsigned int j;;DELAY.c: 7: char k;;DELAY.c: 8: for (j = 0; j < n; j++)
 13879                           	clrf	(delay_ms@j)
 13880  1554  01F5               	clrf	(delay_ms@j+1)
 13881  1555  01F6               	goto	l292
 13882  1556  2D71               	line	9
 13883                           	
 13884                           l293:	
 13885  1557                     	
 13886                           l3809:	
 13887  1557                     ;DELAY.c: 9: for (k = 108; k > 0; k--)
 13888                           	movlw	low(06Ch)
 13889  1557  306C               	movwf	(??_delay_ms+0)+0
 13890  1558  00F4               	movf	(??_delay_ms+0)+0,w
 13891  1559  0874               	movwf	(delay_ms@k)
 13892  155A  00F7               	
 13893                           l3811:	
 13894  155B                     	movf	((delay_ms@k)),w
 13895  155B  0877               	btfss	status,2
 13896  155C  1D03               	goto	u4631
 13897  155D  2D5F               	goto	u4630
 13898  155E  2D60               u4631:
 13899  155F                     	goto	l294
 13900  155F  2D62               u4630:
 13901  1560                     	goto	l3817
 13902  1560  2D6B               	
 13903                           l3813:	
 13904  1561                     	goto	l3817
 13905  1561  2D6B               	line	10
 13906                           	
 13907                           l294:	
 13908  1562                     ;DELAY.c: 10: __nop();
 13909                           	opt	asmopt_push
 13910                           	opt	asmopt_off
 13911                           	nop
 13912  1562  0000               	opt	asmopt_pop
 13913                           	line	9
 13914                           	
 13915                           l3815:	
 13916  1563                     	movlw	01h
 13917  1563  3001               	subwf	(delay_ms@k),f
 13918  1564  02F7               	movf	((delay_ms@k)),w
 13919  1565  0877               	btfss	status,2
 13920  1566  1D03               	goto	u4641
 13921  1567  2D69               	goto	u4640
 13922  1568  2D6A               u4641:
 13923  1569                     	goto	l294
 13924  1569  2D62               u4640:
 13925  156A                     	goto	l3817
 13926  156A  2D6B               	
 13927                           l295:	
 13928  156B                     	line	8
 13929                           	
 13930                           l3817:	
 13931  156B                     	movlw	01h
 13932  156B  3001               	addwf	(delay_ms@j),f
 13933  156C  07F5               	skipnc
 13934  156D  1803               	incf	(delay_ms@j+1),f
 13935  156E  0AF6               	movlw	0
 13936  156F  3000               	addwf	(delay_ms@j+1),f
 13937  1570  07F6               	
 13938                           l292:	
 13939  1571                     	movf	(delay_ms@n+1),w
 13940  1571  0873               	subwf	(delay_ms@j+1),w
 13941  1572  0276               	skipz
 13942  1573  1D03               	goto	u4655
 13943  1574  2D77               	movf	(delay_ms@n),w
 13944  1575  0872               	subwf	(delay_ms@j),w
 13945  1576  0275               u4655:
 13946  1577                     	skipc
 13947  1577  1C03               	goto	u4651
 13948  1578  2D7A               	goto	u4650
 13949  1579  2D7B               u4651:
 13950  157A                     	goto	l3809
 13951  157A  2D57               u4650:
 13952  157B                     	goto	l297
 13953  157B  2D7C               	
 13954                           l296:	
 13955  157C                     	line	11
 13956                           	
 13957                           l297:	
 13958  157C                     	return
 13959  157C  0008               	opt stack 0
 13960                           GLOBAL	__end_of_delay_ms
 13961                           	__end_of_delay_ms:
 13962  157D                     	signat	_delay_ms,4217
 13963                           	global	_Ds1302_Init
 13964                           
 13965 ;; *************** function _Ds1302_Init *****************
 13966 ;; Defined at:
 13967 ;;		line 135 in file "DS1302.c"
 13968 ;; Parameters:    Size  Location     Type
 13969 ;;		None
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;		None
 13972 ;; Return value:  Size  Location     Type
 13973 ;;                  1    wreg      void 
 13974 ;; Registers used:
 13975 ;;		wreg, status,2, status,0
 13976 ;; Tracked objects:
 13977 ;;		On entry : 0/0
 13978 ;;		On exit  : 0/0
 13979 ;;		Unchanged: 0/0
 13980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13981 ;;      Params:         0       0       0       0       0
 13982 ;;      Locals:         0       0       0       0       0
 13983 ;;      Temps:          1       0       0       0       0
 13984 ;;      Totals:         1       0       0       0       0
 13985 ;;Total ram usage:        1 bytes
 13986 ;; Hardware stack levels used:    1
 13987 ;; Hardware stack levels required when called:    1
 13988 ;; This function calls:
 13989 ;;		Nothing
 13990 ;; This function is called by:
 13991 ;;		_main
 13992 ;; This function uses a non-reentrant model
 13993 ;;
 13994                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
 13995                           	file	"DS1302.c"
 13996                           	line	135
 13997                           global __ptext45
 13998                           __ptext45:	;psect for function _Ds1302_Init
 13999  12AF                     psect	text45
 14000                           	file	"DS1302.c"
 14001                           	line	135
 14002                           	global	__size_of_Ds1302_Init
 14003                           	__size_of_Ds1302_Init	equ	__end_of_Ds1302_Init-_Ds1302_Init
 14004  0007                     	
 14005                           _Ds1302_Init:	
 14006  12AF                     ;incstack = 0
 14007                           	opt	stack 6
 14008                           ; Regs used in _Ds1302_Init: [wreg+status,2+status,0]
 14009                           	line	136
 14010                           	
 14011                           l3047:	
 14012  12AF                     ;DS1302.c: 136: TRISC &= 0b11000111;
 14013                           	movlw	low(0C7h)
 14014  12AF  30C7               	movwf	(??_Ds1302_Init+0)+0
 14015  12B0  00F2               	movf	(??_Ds1302_Init+0)+0,w
 14016  12B1  0872               	bsf	status, 5	;RP0=1, select bank1
 14017  12B2  1683               	bcf	status, 6	;RP1=0, select bank1
 14018  12B3  1303               	andwf	(135)^080h,f	;volatile
 14019  12B4  0587               	line	137
 14020                           	
 14021                           l246:	
 14022  12B5                     	return
 14023  12B5  0008               	opt stack 0
 14024                           GLOBAL	__end_of_Ds1302_Init
 14025                           	__end_of_Ds1302_Init:
 14026  12B6                     	signat	_Ds1302_Init,89
 14027                           	global	_Ds1302Init
 14028                           
 14029 ;; *************** function _Ds1302Init *****************
 14030 ;; Defined at:
 14031 ;;		line 107 in file "DS1302.c"
 14032 ;; Parameters:    Size  Location     Type
 14033 ;;		None
 14034 ;; Auto vars:     Size  Location     Type
 14035 ;;  n               1    7[COMMON] unsigned char 
 14036 ;;  dat             1    0        unsigned char 
 14037 ;; Return value:  Size  Location     Type
 14038 ;;                  1    wreg      void 
 14039 ;; Registers used:
 14040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 14041 ;; Tracked objects:
 14042 ;;		On entry : 0/0
 14043 ;;		On exit  : 0/0
 14044 ;;		Unchanged: 0/0
 14045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14046 ;;      Params:         0       0       0       0       0
 14047 ;;      Locals:         1       0       0       0       0
 14048 ;;      Temps:          1       0       0       0       0
 14049 ;;      Totals:         2       0       0       0       0
 14050 ;;Total ram usage:        2 bytes
 14051 ;; Hardware stack levels used:    1
 14052 ;; Hardware stack levels required when called:    2
 14053 ;; This function calls:
 14054 ;;		_Ds1302Write
 14055 ;;		_Trans_Alarm_bit
 14056 ;; This function is called by:
 14057 ;;		_main
 14058 ;; This function uses a non-reentrant model
 14059 ;;
 14060                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
 14061                           	line	107
 14062                           global __ptext46
 14063                           __ptext46:	;psect for function _Ds1302Init
 14064  16BE                     psect	text46
 14065                           	file	"DS1302.c"
 14066                           	line	107
 14067                           	global	__size_of_Ds1302Init
 14068                           	__size_of_Ds1302Init	equ	__end_of_Ds1302Init-_Ds1302Init
 14069  004A                     	
 14070                           _Ds1302Init:	
 14071  16BE                     ;incstack = 0
 14072                           	opt	stack 5
 14073                           ; Regs used in _Ds1302Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 14074                           	line	109
 14075                           	
 14076                           l3049:	
 14077  16BE                     ;DS1302.c: 108: unsigned char n, dat;;DS1302.c: 109: PORTCbits.RC3 = 0;
 14078                           	bcf	status, 5	;RP0=0, select bank0
 14079  16BE  1283               	bcf	status, 6	;RP1=0, select bank0
 14080  16BF  1303               	bcf	(7),3	;volatile
 14081  16C0  1187               	line	110
 14082                           ;DS1302.c: 110: PORTCbits.RC4 = 0;
 14083                           	bcf	(7),4	;volatile
 14084  16C1  1207               	line	114
 14085                           	
 14086                           l3051:	
 14087  16C2                     ;DS1302.c: 114: Ds1302Write(0x8E, 0);
 14088                           	clrf	(Ds1302Write@dat)
 14089  16C2  01F2               	movlw	low(08Eh)
 14090  16C3  308E               	fcall	_Ds1302Write
 14091  16C4  120A  158A  2477  160A  118A  	line	115
 14092                           	
 14093                           l3053:	
 14094  16C9                     ;DS1302.c: 115: for (n = 0; n < 7; n++)
 14095                           	clrf	(Ds1302Init@n)
 14096  16C9  01F7               	
 14097                           l3055:	
 14098  16CA                     	movlw	low(07h)
 14099  16CA  3007               	subwf	(Ds1302Init@n),w
 14100  16CB  0277               	skipc
 14101  16CC  1C03               	goto	u2981
 14102  16CD  2ECF               	goto	u2980
 14103  16CE  2ED0               u2981:
 14104  16CF                     	goto	l3059
 14105  16CF  2ED2               u2980:
 14106  16D0                     	goto	l3065
 14107  16D0  2EF8               	
 14108                           l3057:	
 14109  16D1                     	goto	l3065
 14110  16D1  2EF8               	line	116
 14111                           	
 14112                           l238:	
 14113  16D2                     	line	117
 14114                           	
 14115                           l3059:	
 14116  16D2                     ;DS1302.c: 116: {;DS1302.c: 117: Ds1302Write(WriteTimeAddr[n], SET_TIME[n]);
 14117                           	movf	(Ds1302Init@n),w
 14118  16D2  0877               	addlw	low(_SET_TIME|((0x0)<<8))&0ffh
 14119  16D3  3E50               	movwf	fsr0
 14120  16D4  0084               	bcf	status, 7	;select IRP bank0
 14121  16D5  1383               	movf	indf,w
 14122  16D6  0800               	movwf	(??_Ds1302Init+0)+0
 14123  16D7  00F6               	movf	(??_Ds1302Init+0)+0,w
 14124  16D8  0876               	movwf	(Ds1302Write@dat)
 14125  16D9  00F2               	movf	(Ds1302Init@n),w
 14126  16DA  0877               	addlw	low(((_WriteTimeAddr)|8000h))
 14127  16DB  3EC8               	movwf	fsr0
 14128  16DC  0084               	movlw	high(((_WriteTimeAddr)|8000h))
 14129  16DD  308A               	skipnc
 14130  16DE  1803               	addlw	1
 14131  16DF  3E01               	bcf	status, 5	;RP0=0, select bank0
 14132  16E0  1283               	bcf	status, 6	;RP1=0, select bank0
 14133  16E1  1303               	movwf	btemp+1
 14134  16E2  00FF               	fcall	stringtab
 14135  16E3  120A  158A  2000  160A  118A  	fcall	_Ds1302Write
 14136  16E8  120A  158A  2477  160A  118A  	line	115
 14137                           	
 14138                           l3061:	
 14139  16ED                     	movlw	low(01h)
 14140  16ED  3001               	movwf	(??_Ds1302Init+0)+0
 14141  16EE  00F6               	movf	(??_Ds1302Init+0)+0,w
 14142  16EF  0876               	addwf	(Ds1302Init@n),f
 14143  16F0  07F7               	
 14144                           l3063:	
 14145  16F1                     	movlw	low(07h)
 14146  16F1  3007               	subwf	(Ds1302Init@n),w
 14147  16F2  0277               	skipc
 14148  16F3  1C03               	goto	u2991
 14149  16F4  2EF6               	goto	u2990
 14150  16F5  2EF7               u2991:
 14151  16F6                     	goto	l3059
 14152  16F6  2ED2               u2990:
 14153  16F7                     	goto	l3065
 14154  16F7  2EF8               	
 14155                           l239:	
 14156  16F8                     	line	119
 14157                           	
 14158                           l3065:	
 14159  16F8                     ;DS1302.c: 118: };DS1302.c: 119: Ds1302Write(0x8E, 0x80);
 14160                           	movlw	low(080h)
 14161  16F8  3080               	movwf	(??_Ds1302Init+0)+0
 14162  16F9  00F6               	movf	(??_Ds1302Init+0)+0,w
 14163  16FA  0876               	movwf	(Ds1302Write@dat)
 14164  16FB  00F2               	movlw	low(08Eh)
 14165  16FC  308E               	fcall	_Ds1302Write
 14166  16FD  120A  158A  2477  160A  118A  	line	120
 14167                           ;DS1302.c: 120: Trans_Alarm_bit();
 14168                           	fcall	_Trans_Alarm_bit
 14169  1702  160A  118A  23B5  160A  118A  	line	121
 14170                           	
 14171                           l240:	
 14172  1707                     	return
 14173  1707  0008               	opt stack 0
 14174                           GLOBAL	__end_of_Ds1302Init
 14175                           	__end_of_Ds1302Init:
 14176  1708                     	signat	_Ds1302Init,89
 14177                           	global	_Trans_Alarm_bit
 14178                           
 14179 ;; *************** function _Trans_Alarm_bit *****************
 14180 ;; Defined at:
 14181 ;;		line 210 in file "DS1302.c"
 14182 ;; Parameters:    Size  Location     Type
 14183 ;;		None
 14184 ;; Auto vars:     Size  Location     Type
 14185 ;;		None
 14186 ;; Return value:  Size  Location     Type
 14187 ;;                  1    wreg      void 
 14188 ;; Registers used:
 14189 ;;		wreg
 14190 ;; Tracked objects:
 14191 ;;		On entry : 0/0
 14192 ;;		On exit  : 0/0
 14193 ;;		Unchanged: 0/0
 14194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14195 ;;      Params:         0       0       0       0       0
 14196 ;;      Locals:         0       0       0       0       0
 14197 ;;      Temps:          1       0       0       0       0
 14198 ;;      Totals:         1       0       0       0       0
 14199 ;;Total ram usage:        1 bytes
 14200 ;; Hardware stack levels used:    1
 14201 ;; Hardware stack levels required when called:    1
 14202 ;; This function calls:
 14203 ;;		Nothing
 14204 ;; This function is called by:
 14205 ;;		_Ds1302Init
 14206 ;;		_ModeSwitch
 14207 ;; This function uses a non-reentrant model
 14208 ;;
 14209                           psect	text47,local,class=CODE,delta=2,merge=1,group=0
 14210                           	line	210
 14211                           global __ptext47
 14212                           __ptext47:	;psect for function _Trans_Alarm_bit
 14213  13B5                     psect	text47
 14214                           	file	"DS1302.c"
 14215                           	line	210
 14216                           	global	__size_of_Trans_Alarm_bit
 14217                           	__size_of_Trans_Alarm_bit	equ	__end_of_Trans_Alarm_bit-_Trans_Alarm_bit
 14218  001B                     	
 14219                           _Trans_Alarm_bit:	
 14220  13B5                     ;incstack = 0
 14221                           	opt	stack 5
 14222                           ; Regs used in _Trans_Alarm_bit: [wreg]
 14223                           	line	211
 14224                           	
 14225                           l2821:	
 14226  13B5                     ;DS1302.c: 211: aHOUR_ten = Alarm_TIME[5];
 14227                           	bcf	status, 5	;RP0=0, select bank0
 14228  13B5  1283               	bcf	status, 6	;RP1=0, select bank0
 14229  13B6  1303               	movf	0+(_Alarm_TIME)+05h,w
 14230  13B7  085C               	movwf	(??_Trans_Alarm_bit+0)+0
 14231  13B8  00F2               	movf	(??_Trans_Alarm_bit+0)+0,w
 14232  13B9  0872               	movwf	(_aHOUR_ten)
 14233  13BA  00BE               	line	212
 14234                           ;DS1302.c: 212: aHOUR_unit = Alarm_TIME[4];
 14235                           	movf	0+(_Alarm_TIME)+04h,w
 14236  13BB  085B               	movwf	(??_Trans_Alarm_bit+0)+0
 14237  13BC  00F2               	movf	(??_Trans_Alarm_bit+0)+0,w
 14238  13BD  0872               	movwf	(_aHOUR_unit)
 14239  13BE  00BD               	line	213
 14240                           ;DS1302.c: 213: aMINUTE_ten = Alarm_TIME[3];
 14241                           	movf	0+(_Alarm_TIME)+03h,w
 14242  13BF  085A               	movwf	(??_Trans_Alarm_bit+0)+0
 14243  13C0  00F2               	movf	(??_Trans_Alarm_bit+0)+0,w
 14244  13C1  0872               	movwf	(_aMINUTE_ten)
 14245  13C2  00BC               	line	214
 14246                           ;DS1302.c: 214: aMINUTE_unit = Alarm_TIME[2];
 14247                           	movf	0+(_Alarm_TIME)+02h,w
 14248  13C3  0859               	movwf	(??_Trans_Alarm_bit+0)+0
 14249  13C4  00F2               	movf	(??_Trans_Alarm_bit+0)+0,w
 14250  13C5  0872               	movwf	(_aMINUTE_unit)
 14251  13C6  00BB               	line	215
 14252                           ;DS1302.c: 215: aSECOND_ten = Alarm_TIME[1];
 14253                           	movf	0+(_Alarm_TIME)+01h,w
 14254  13C7  0858               	movwf	(??_Trans_Alarm_bit+0)+0
 14255  13C8  00F2               	movf	(??_Trans_Alarm_bit+0)+0,w
 14256  13C9  0872               	movwf	(_aSECOND_ten)
 14257  13CA  00BA               	line	216
 14258                           ;DS1302.c: 216: aSECOND_unit = Alarm_TIME[0];
 14259                           	movf	(_Alarm_TIME),w
 14260  13CB  0857               	movwf	(??_Trans_Alarm_bit+0)+0
 14261  13CC  00F2               	movf	(??_Trans_Alarm_bit+0)+0,w
 14262  13CD  0872               	movwf	(_aSECOND_unit)
 14263  13CE  00B9               	line	217
 14264                           	
 14265                           l266:	
 14266  13CF                     	return
 14267  13CF  0008               	opt stack 0
 14268                           GLOBAL	__end_of_Trans_Alarm_bit
 14269                           	__end_of_Trans_Alarm_bit:
 14270  13D0                     	signat	_Trans_Alarm_bit,89
 14271                           	global	_Ds1302Write
 14272                           
 14273 ;; *************** function _Ds1302Write *****************
 14274 ;; Defined at:
 14275 ;;		line 27 in file "DS1302.c"
 14276 ;; Parameters:    Size  Location     Type
 14277 ;;  addr            1    wreg     unsigned char 
 14278 ;;  dat             1    2[COMMON] unsigned char 
 14279 ;; Auto vars:     Size  Location     Type
 14280 ;;  addr            1    4[COMMON] unsigned char 
 14281 ;;  n               1    5[COMMON] unsigned char 
 14282 ;; Return value:  Size  Location     Type
 14283 ;;                  1    wreg      void 
 14284 ;; Registers used:
 14285 ;;		wreg, status,2, status,0
 14286 ;; Tracked objects:
 14287 ;;		On entry : 0/0
 14288 ;;		On exit  : 0/0
 14289 ;;		Unchanged: 0/0
 14290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14291 ;;      Params:         1       0       0       0       0
 14292 ;;      Locals:         2       0       0       0       0
 14293 ;;      Temps:          1       0       0       0       0
 14294 ;;      Totals:         4       0       0       0       0
 14295 ;;Total ram usage:        4 bytes
 14296 ;; Hardware stack levels used:    1
 14297 ;; Hardware stack levels required when called:    1
 14298 ;; This function calls:
 14299 ;;		Nothing
 14300 ;; This function is called by:
 14301 ;;		_Ds1302Init
 14302 ;;		_Ds1302WriteTime
 14303 ;; This function uses a non-reentrant model
 14304 ;;
 14305                           psect	text48,local,class=CODE,delta=2,merge=1,group=0
 14306                           	line	27
 14307                           global __ptext48
 14308                           __ptext48:	;psect for function _Ds1302Write
 14309  0C77                     psect	text48
 14310                           	file	"DS1302.c"
 14311                           	line	27
 14312                           	global	__size_of_Ds1302Write
 14313                           	__size_of_Ds1302Write	equ	__end_of_Ds1302Write-_Ds1302Write
 14314  0061                     	
 14315                           _Ds1302Write:	
 14316  0C77                     ;incstack = 0
 14317                           	opt	stack 4
 14318                           ; Regs used in _Ds1302Write: [wreg+status,2+status,0]
 14319                           ;Ds1302Write@addr stored from wreg
 14320                           	movwf	(Ds1302Write@addr)
 14321  0C77  00F4               	line	29
 14322                           	
 14323                           l2671:	
 14324  0C78                     ;DS1302.c: 28: unsigned char n;;DS1302.c: 29: PORTCbits.RC3 = 0;
 14325                           	bcf	status, 5	;RP0=0, select bank0
 14326  0C78  1283               	bcf	status, 6	;RP1=0, select bank0
 14327  0C79  1303               	bcf	(7),3	;volatile
 14328  0C7A  1187               	line	30
 14329                           ;DS1302.c: 30: __nop();
 14330                           	opt	asmopt_push
 14331                           	opt	asmopt_off
 14332                           	nop
 14333  0C7B  0000               	opt	asmopt_pop
 14334                           	line	32
 14335                           ;DS1302.c: 32: PORTCbits.RC4 = 0;
 14336                           	bcf	status, 5	;RP0=0, select bank0
 14337  0C7C  1283               	bcf	status, 6	;RP1=0, select bank0
 14338  0C7D  1303               	bcf	(7),4	;volatile
 14339  0C7E  1207               	line	33
 14340                           ;DS1302.c: 33: __nop();
 14341                           	opt	asmopt_push
 14342                           	opt	asmopt_off
 14343                           	nop
 14344  0C7F  0000               	opt	asmopt_pop
 14345                           	line	34
 14346                           ;DS1302.c: 34: PORTCbits.RC3 = 1;
 14347                           	bcf	status, 5	;RP0=0, select bank0
 14348  0C80  1283               	bcf	status, 6	;RP1=0, select bank0
 14349  0C81  1303               	bsf	(7),3	;volatile
 14350  0C82  1587               	line	35
 14351                           ;DS1302.c: 35: __nop();
 14352                           	opt	asmopt_push
 14353                           	opt	asmopt_off
 14354                           	nop
 14355  0C83  0000               	opt	asmopt_pop
 14356                           	line	37
 14357                           	
 14358                           l2673:	
 14359  0C84                     ;DS1302.c: 37: for (n = 0; n < 8; n++)
 14360                           	clrf	(Ds1302Write@n)
 14361  0C84  01F5               	
 14362                           l2675:	
 14363  0C85                     	movlw	low(08h)
 14364  0C85  3008               	subwf	(Ds1302Write@n),w
 14365  0C86  0275               	skipc
 14366  0C87  1C03               	goto	u2351
 14367  0C88  2C8A               	goto	u2350
 14368  0C89  2C8B               u2351:
 14369  0C8A                     	goto	l2679
 14370  0C8A  2C8D               u2350:
 14371  0C8B                     	goto	l2693
 14372  0C8B  2CAC               	
 14373                           l2677:	
 14374  0C8C                     	goto	l2693
 14375  0C8C  2CAC               	line	38
 14376                           	
 14377                           l224:	
 14378  0C8D                     	line	39
 14379                           	
 14380                           l2679:	
 14381  0C8D                     ;DS1302.c: 38: {;DS1302.c: 39: PORTCbits.RC5 = addr & 0x01;
 14382                           	movf	(Ds1302Write@addr),w
 14383  0C8D  0874               	andlw	01h
 14384  0C8E  3901               	movwf	(??_Ds1302Write+0)+0
 14385  0C8F  00F3               	swapf	(??_Ds1302Write+0)+0,f
 14386  0C90  0EF3               	rlf	(??_Ds1302Write+0)+0,f
 14387  0C91  0DF3               	bcf	status, 5	;RP0=0, select bank0
 14388  0C92  1283               	bcf	status, 6	;RP1=0, select bank0
 14389  0C93  1303               	movf	(7),w	;volatile
 14390  0C94  0807               	xorwf	(??_Ds1302Write+0)+0,w
 14391  0C95  0673               	andlw	not (((1<<1)-1)<<5)
 14392  0C96  39DF               	xorwf	(??_Ds1302Write+0)+0,w
 14393  0C97  0673               	movwf	(7)	;volatile
 14394  0C98  0087               	line	40
 14395                           	
 14396                           l2681:	
 14397  0C99                     ;DS1302.c: 40: addr >>= 1;
 14398                           	clrc
 14399  0C99  1003               	rrf	(Ds1302Write@addr),f
 14400  0C9A  0CF4               
 14401                           	line	41
 14402                           	
 14403                           l2683:	
 14404  0C9B                     ;DS1302.c: 41: PORTCbits.RC4 = 1;
 14405                           	bsf	(7),4	;volatile
 14406  0C9B  1607               	line	42
 14407                           	
 14408                           l2685:	
 14409  0C9C                     ;DS1302.c: 42: __nop();
 14410                           	opt	asmopt_push
 14411                           	opt	asmopt_off
 14412                           	nop
 14413  0C9C  0000               	opt	asmopt_pop
 14414                           	line	43
 14415                           	
 14416                           l2687:	
 14417  0C9D                     ;DS1302.c: 43: PORTCbits.RC4 = 0;
 14418                           	bcf	status, 5	;RP0=0, select bank0
 14419  0C9D  1283               	bcf	status, 6	;RP1=0, select bank0
 14420  0C9E  1303               	bcf	(7),4	;volatile
 14421  0C9F  1207               	line	44
 14422                           	
 14423                           l2689:	
 14424  0CA0                     ;DS1302.c: 44: __nop();
 14425                           	opt	asmopt_push
 14426                           	opt	asmopt_off
 14427                           	nop
 14428  0CA0  0000               	opt	asmopt_pop
 14429                           	line	37
 14430                           	
 14431                           l2691:	
 14432  0CA1                     	movlw	low(01h)
 14433  0CA1  3001               	movwf	(??_Ds1302Write+0)+0
 14434  0CA2  00F3               	movf	(??_Ds1302Write+0)+0,w
 14435  0CA3  0873               	addwf	(Ds1302Write@n),f
 14436  0CA4  07F5               	movlw	low(08h)
 14437  0CA5  3008               	subwf	(Ds1302Write@n),w
 14438  0CA6  0275               	skipc
 14439  0CA7  1C03               	goto	u2361
 14440  0CA8  2CAA               	goto	u2360
 14441  0CA9  2CAB               u2361:
 14442  0CAA                     	goto	l2679
 14443  0CAA  2C8D               u2360:
 14444  0CAB                     	goto	l2693
 14445  0CAB  2CAC               	
 14446                           l225:	
 14447  0CAC                     	line	46
 14448                           	
 14449                           l2693:	
 14450  0CAC                     ;DS1302.c: 45: };DS1302.c: 46: for (n = 0; n < 8; n++)
 14451                           	clrf	(Ds1302Write@n)
 14452  0CAC  01F5               	
 14453                           l2695:	
 14454  0CAD                     	movlw	low(08h)
 14455  0CAD  3008               	subwf	(Ds1302Write@n),w
 14456  0CAE  0275               	skipc
 14457  0CAF  1C03               	goto	u2371
 14458  0CB0  2CB2               	goto	u2370
 14459  0CB1  2CB3               u2371:
 14460  0CB2                     	goto	l2699
 14461  0CB2  2CB5               u2370:
 14462  0CB3                     	goto	l227
 14463  0CB3  2CD3               	
 14464                           l2697:	
 14465  0CB4                     	goto	l227
 14466  0CB4  2CD3               	line	47
 14467                           	
 14468                           l226:	
 14469  0CB5                     	line	48
 14470                           	
 14471                           l2699:	
 14472  0CB5                     ;DS1302.c: 47: {;DS1302.c: 48: PORTCbits.RC5 = dat & 0x01;
 14473                           	movf	(Ds1302Write@dat),w
 14474  0CB5  0872               	andlw	01h
 14475  0CB6  3901               	movwf	(??_Ds1302Write+0)+0
 14476  0CB7  00F3               	swapf	(??_Ds1302Write+0)+0,f
 14477  0CB8  0EF3               	rlf	(??_Ds1302Write+0)+0,f
 14478  0CB9  0DF3               	bcf	status, 5	;RP0=0, select bank0
 14479  0CBA  1283               	bcf	status, 6	;RP1=0, select bank0
 14480  0CBB  1303               	movf	(7),w	;volatile
 14481  0CBC  0807               	xorwf	(??_Ds1302Write+0)+0,w
 14482  0CBD  0673               	andlw	not (((1<<1)-1)<<5)
 14483  0CBE  39DF               	xorwf	(??_Ds1302Write+0)+0,w
 14484  0CBF  0673               	movwf	(7)	;volatile
 14485  0CC0  0087               	line	49
 14486                           	
 14487                           l2701:	
 14488  0CC1                     ;DS1302.c: 49: dat >>= 1;
 14489                           	clrc
 14490  0CC1  1003               	rrf	(Ds1302Write@dat),f
 14491  0CC2  0CF2               
 14492                           	line	50
 14493                           	
 14494                           l2703:	
 14495  0CC3                     ;DS1302.c: 50: PORTCbits.RC4 = 1;
 14496                           	bsf	(7),4	;volatile
 14497  0CC3  1607               	line	51
 14498                           	
 14499                           l2705:	
 14500  0CC4                     ;DS1302.c: 51: __nop();
 14501                           	opt	asmopt_push
 14502                           	opt	asmopt_off
 14503                           	nop
 14504  0CC4  0000               	opt	asmopt_pop
 14505                           	line	52
 14506                           	
 14507                           l2707:	
 14508  0CC5                     ;DS1302.c: 52: PORTCbits.RC4 = 0;
 14509                           	bcf	status, 5	;RP0=0, select bank0
 14510  0CC5  1283               	bcf	status, 6	;RP1=0, select bank0
 14511  0CC6  1303               	bcf	(7),4	;volatile
 14512  0CC7  1207               	line	53
 14513                           	
 14514                           l2709:	
 14515  0CC8                     ;DS1302.c: 53: __nop();
 14516                           	opt	asmopt_push
 14517                           	opt	asmopt_off
 14518                           	nop
 14519  0CC8  0000               	opt	asmopt_pop
 14520                           	line	46
 14521                           	
 14522                           l2711:	
 14523  0CC9                     	movlw	low(01h)
 14524  0CC9  3001               	movwf	(??_Ds1302Write+0)+0
 14525  0CCA  00F3               	movf	(??_Ds1302Write+0)+0,w
 14526  0CCB  0873               	addwf	(Ds1302Write@n),f
 14527  0CCC  07F5               	movlw	low(08h)
 14528  0CCD  3008               	subwf	(Ds1302Write@n),w
 14529  0CCE  0275               	skipc
 14530  0CCF  1C03               	goto	u2381
 14531  0CD0  2CD2               	goto	u2380
 14532  0CD1  2CD3               u2381:
 14533  0CD2                     	goto	l2699
 14534  0CD2  2CB5               u2380:
 14535  0CD3                     	
 14536                           l227:	
 14537  0CD3                     	line	56
 14538                           ;DS1302.c: 54: };DS1302.c: 56: PORTCbits.RC3 = 0;
 14539                           	bcf	status, 5	;RP0=0, select bank0
 14540  0CD3  1283               	bcf	status, 6	;RP1=0, select bank0
 14541  0CD4  1303               	bcf	(7),3	;volatile
 14542  0CD5  1187               	line	57
 14543                           ;DS1302.c: 57: __nop();
 14544                           	opt	asmopt_push
 14545                           	opt	asmopt_off
 14546                           	nop
 14547  0CD6  0000               	opt	asmopt_pop
 14548                           	line	58
 14549                           	
 14550                           l228:	
 14551  0CD7                     	return
 14552  0CD7  0008               	opt stack 0
 14553                           GLOBAL	__end_of_Ds1302Write
 14554                           	__end_of_Ds1302Write:
 14555  0CD8                     	signat	_Ds1302Write,8313
 14556                           	global	_ISR
 14557                           
 14558 ;; *************** function _ISR *****************
 14559 ;; Defined at:
 14560 ;;		line 93 in file "main.c"
 14561 ;; Parameters:    Size  Location     Type
 14562 ;;		None
 14563 ;; Auto vars:     Size  Location     Type
 14564 ;;		None
 14565 ;; Return value:  Size  Location     Type
 14566 ;;                  1    wreg      void 
 14567 ;; Registers used:
 14568 ;;		wreg, status,0
 14569 ;; Tracked objects:
 14570 ;;		On entry : 0/0
 14571 ;;		On exit  : 0/0
 14572 ;;		Unchanged: 0/0
 14573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14574 ;;      Params:         0       0       0       0       0
 14575 ;;      Locals:         0       0       0       0       0
 14576 ;;      Temps:          2       0       0       0       0
 14577 ;;      Totals:         2       0       0       0       0
 14578 ;;Total ram usage:        2 bytes
 14579 ;; Hardware stack levels used:    1
 14580 ;; This function calls:
 14581 ;;		Nothing
 14582 ;; This function is called by:
 14583 ;;		Interrupt level 1
 14584 ;; This function uses a non-reentrant model
 14585 ;;
 14586                           psect	text49,local,class=CODE,delta=2,merge=1,group=0
 14587                           	file	"main.c"
 14588                           	line	93
 14589                           global __ptext49
 14590                           __ptext49:	;psect for function _ISR
 14591  140A                     psect	text49
 14592                           	file	"main.c"
 14593                           	line	93
 14594                           	global	__size_of_ISR
 14595                           	__size_of_ISR	equ	__end_of_ISR-_ISR
 14596  001F                     	
 14597                           _ISR:	
 14598  140A                     ;incstack = 0
 14599                           	opt	stack 0
 14600                           ; Regs used in _ISR: [wreg+status,0]
 14601                           psect	intentry,class=CODE,delta=2
 14602                           global __pintentry
 14603                           __pintentry:
 14604  0004                     global interrupt_function
 14605                           interrupt_function:
 14606  0004                     	global saved_w
 14607                           	saved_w	set	btemp+0
 14608  007E                     	movwf	saved_w
 14609  0004  00FE               	swapf	status,w
 14610  0005  0E03               	movwf	(??_ISR+0)
 14611  0006  00F0               	movf	pclath,w
 14612  0007  080A               	movwf	(??_ISR+1)
 14613  0008  00F1               	ljmp	_ISR
 14614  0009  160A  118A  2C0A   psect	text49
 14615                           	line	95
 14616                           	
 14617                           i1l3767:	
 14618  140A                     ;main.c: 95: if(INTF)
 14619                           	btfss	(89/8),(89)&7	;volatile
 14620  140A  1C8B               	goto	u460_21
 14621  140B  2C0D               	goto	u460_20
 14622  140C  2C0E               u460_21:
 14623  140D                     	goto	i1l80
 14624  140D  2C22               u460_20:
 14625  140E                     	line	97
 14626                           	
 14627                           i1l3769:	
 14628  140E                     ;main.c: 96: {;main.c: 97: INTF=0;
 14629                           	bcf	(89/8),(89)&7	;volatile
 14630  140E  108B               	line	98
 14631                           	
 14632                           i1l3771:	
 14633  140F                     ;main.c: 98: PORTCbits.RC0=!PORTCbits.RC0;
 14634                           	clrc
 14635  140F  1003               	bcf	status, 5	;RP0=0, select bank0
 14636  1410  1283               	bcf	status, 6	;RP1=0, select bank0
 14637  1411  1303               	btfss	(7),0	;volatile
 14638  1412  1C07               	setc
 14639  1413  1403               	btfsc	status,0
 14640  1414  1803               	goto	u461_21
 14641  1415  2C17               	goto	u461_20
 14642  1416  2C1B               	
 14643                           u461_21:
 14644  1417                     	bcf	status, 5	;RP0=0, select bank0
 14645  1417  1283               	bcf	status, 6	;RP1=0, select bank0
 14646  1418  1303               	bsf	(7),0	;volatile
 14647  1419  1407               	goto	u462_24
 14648  141A  2C1E               u461_20:
 14649  141B                     	bcf	status, 5	;RP0=0, select bank0
 14650  141B  1283               	bcf	status, 6	;RP1=0, select bank0
 14651  141C  1303               	bcf	(7),0	;volatile
 14652  141D  1007               u462_24:
 14653  141E                     	line	99
 14654                           	
 14655                           i1l3773:	
 14656  141E                     ;main.c: 99: isMusicMode=~isMusicMode;
 14657                           	movlw	1<<((_isMusicMode)&7)
 14658  141E  3002               	xorwf	((_isMusicMode)/8),f
 14659  141F  06FA               	line	100
 14660                           	
 14661                           i1l3775:	
 14662  1420                     ;main.c: 100: clear_flag=1;
 14663                           	bsf	(_clear_flag/8),(_clear_flag)&7
 14664  1420  147A               	goto	i1l80
 14665  1421  2C22               	line	101
 14666                           	
 14667                           i1l79:	
 14668  1422                     	line	102
 14669                           	
 14670                           i1l80:	
 14671  1422                     	movf	(??_ISR+1),w
 14672  1422  0871               	movwf	pclath
 14673  1423  008A               	swapf	(??_ISR+0)^0FFFFFF80h,w
 14674  1424  0E70               	movwf	status
 14675  1425  0083               	swapf	saved_w,f
 14676  1426  0EFE               	swapf	saved_w,w
 14677  1427  0E7E               	retfie
 14678  1428  0009               	opt stack 0
 14679                           GLOBAL	__end_of_ISR
 14680                           	__end_of_ISR:
 14681  1429                     	signat	_ISR,89
 14682                           global	___latbits
 14683                           ___latbits	equ	2
 14684  0002                     	global	btemp
 14685                           	btemp set 07Eh
 14686  007E                     
 14687                           	DABS	1,126,2	;btemp
 14688                           	global	wtemp0
 14689                           	wtemp0 set btemp+0
 14690  007E                     	end


Data Sizes:
    Strings     157
    Constant    708
    Data        40
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     12      73
    BANK1            80      0      14
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@Str	PTR unsigned char  size(2) Largest target is 37
		 -> STR_21(CODE[37]), 

    week	PTR const int [7] size(2) Largest target is 5
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 
		 -> STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[5]), 

    LCD_write_string@s	PTR unsigned char  size(2) Largest target is 512
		 -> STR_20(CODE[2]), STR_19(CODE[4]), STR_18(CODE[2]), STR_17(CODE[15]), 
		 -> STR_16(CODE[5]), STR_15(CODE[6]), STR_14(CODE[3]), STR_13(CODE[5]), 
		 -> STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[5]), 
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _main->_MusicPlay
    _keyscan->_check_K1
    _keyscan->_check_K4
    _keyscan->_check_K5
    _check_K6->_delay_ms
    _check_K5->_delay_ms
    _check_K4->_delay_ms
    _check_K3->_delay_ms
    _check_K2->_delay_ms
    _check_K1->_delay_ms
    _beep_ms->_PwmTone
    _MusicPlay->_PwmTone
    _MusicPlay->_SixteenNoteDelay
    _SixteenNoteDelay->_delay_ms
    _ModeSwitch->_Ds1302ReadTimeBCD
    _Ds1302WriteTime->_Ds1302Write
    _Ds1302ReadTimeBCD->_Ds1302Read
    _LCD_write_string->_LCD_set_xy
    _LCD_Busy->_LCD_Read_dat
    _LCD_write_char->_LCD_set_xy
    _LCD_set_xy->_LCD_en_command
    _LCD_en_dat->_delay_us
    _LCD_init->_LCD_en_command
    _Initialize_UART->_UART_send_string
    _UART_send_string->_UART_send_char
    _InitScrn->_LCD_en_command
    _LCD_en_command->_delay_ms
    _Ds1302Init->_Ds1302Write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ModeSwitch
    _main->_MusicDisplay
    _check_Alarm->_beep_ms
    _MusicPlay->_SixteenNoteDelay
    _MusicDisplay->_LCD_write_string
    _ModeSwitch->_ClearScreenOnce
    _ModeSwitch->_TimeDataDisplay
    _TimeDataDisplay->_LCD_write_string
    _ClearScreenOnce->_FrameworkDisplay
    _ClearScreenOnce->_aFrameworkDisplay
    _aFrameworkDisplay->_LCD_write_char
    _LCD_write_string->_LCD_set_xy
    _FrameworkDisplay->_LCD_write_char
    _AlarmDataDisplay->_LCD_write_char
    _LCD_write_char->_LCD_set_xy

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   87829
                    _ClearScreenOnce
                         _Ds1302Init
                        _Ds1302_Init
                           _InitScrn
                     _Initialize_INT
                    _Initialize_UART
                           _KEY_init
                       _LCD_MPU_init
                           _LCD_init
                           _LED_Init
                         _MUSIC_init
                         _ModeSwitch
                       _MusicDisplay
                          _MusicPlay
                            _PwmInit
                        _check_Alarm
                            _keyscan
 ---------------------------------------------------------------------------------
 (1) _keyscan                                              0     0      0    8376
                           _check_K1
                           _check_K2
                           _check_K3
                           _check_K4
                           _check_K5
                           _check_K6
 ---------------------------------------------------------------------------------
 (2) _check_K6                                             0     0      0    1396
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _check_K5                                             1     1      0    1396
                                              8 COMMON     1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _check_K4                                             1     1      0    1396
                                              8 COMMON     1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _check_K3                                             0     0      0    1396
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _check_K2                                             0     0      0    1396
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _check_K1                                             1     1      0    1396
                                              8 COMMON     1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _check_Alarm                                          0     0      0    1606
                            _beep_ms
 ---------------------------------------------------------------------------------
 (2) _beep_ms                                              2     0      2    1606
                                              0 BANK0      2     0      2
                            _PwmTone
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _PwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MusicPlay                                            1     1      0    1584
                                              9 COMMON     1     1      0
                            _PwmTone
                   _SixteenNoteDelay
 ---------------------------------------------------------------------------------
 (2) _SixteenNoteDelay                                     3     3      0    1495
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _PwmTone                                              7     7      0      89
                                              2 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _MusicDisplay                                         4     4      0   10387
                                              8 BANK0      4     4      0
                     _LCD_write_char
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (1) _ModeSwitch                                           2     2      0   42518
                                             10 BANK0      2     2      0
                   _AlarmDataDisplay
                    _ClearScreenOnce
                  _Ds1302ReadTimeBCD
                    _Ds1302WriteTime
                   _LCD_write_string
                    _TimeDataDisplay
                    _Trans_Alarm_bit
                     _Trans_Time_bit
                         _Y_position
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _Y_position                                           1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Trans_Time_bit                                       2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TimeDataDisplay                                      2     2      0   10387
                                              8 BANK0      2     2      0
                     _LCD_write_char
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (2) _Ds1302WriteTime                                      3     2      1    1626
                                              6 COMMON     3     2      1
                        _Ds1302Write
 ---------------------------------------------------------------------------------
 (2) _Ds1302ReadTimeBCD                                    2     2      0     399
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                         _Ds1302Read
 ---------------------------------------------------------------------------------
 (3) _Ds1302Read                                           7     7      0     269
                                              2 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (2) _ClearScreenOnce                                      1     1      0   18235
                                              9 BANK0      1     1      0
                   _FrameworkDisplay
                     _LCD_en_command
                   _LCD_write_string
                  _aFrameworkDisplay
 ---------------------------------------------------------------------------------
 (3) _aFrameworkDisplay                                    2     2      0    6398
                                              7 BANK0      2     2      0
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     5     2      3    3989
                                              3 BANK0      5     2      3
                           _LCD_Busy
                         _LCD_en_dat
                         _LCD_set_xy
                         _Y_position (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_Busy                                             2     2      0      46
                                              4 COMMON     2     2      0
                       _LCD_Read_dat
 ---------------------------------------------------------------------------------
 (4) _LCD_Read_dat                                         2     2      0      23
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _FrameworkDisplay                                     2     2      0    6398
                                              7 BANK0      2     2      0
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _AlarmDataDisplay                                     2     2      0    6398
                                              7 BANK0      2     2      0
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       4     2      2    6398
                                              3 BANK0      4     2      2
                         _LCD_en_dat
                         _LCD_set_xy
 ---------------------------------------------------------------------------------
 (3) _LCD_set_xy                                           4     3      1    1760
                                              9 COMMON     1     0      1
                                              0 BANK0      3     3      0
                     _LCD_en_command
 ---------------------------------------------------------------------------------
 (3) _LCD_en_dat                                           1     1      0      45
                                              3 COMMON     1     1      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _MUSIC_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Init                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0    1450
                     _LCD_en_command
 ---------------------------------------------------------------------------------
 (1) _LCD_MPU_init                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _KEY_init                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_UART                                      0     0      0     143
                   _UART_send_string
 ---------------------------------------------------------------------------------
 (2) _UART_send_string                                     2     0      2     143
                                              3 COMMON     2     0      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (3) _UART_send_char                                       1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_INT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitScrn                                             0     0      0    2846
                     _LCD_en_command
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _LCD_en_command                                       1     1      0    1450
                                              8 COMMON     1     1      0
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             6     4      2    1396
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Ds1302_Init                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ds1302Init                                           3     3      0     684
                                              6 COMMON     2     2      0
                        _Ds1302Write
                    _Trans_Alarm_bit
 ---------------------------------------------------------------------------------
 (2) _Trans_Alarm_bit                                      1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Ds1302Write                                          4     3      1     594
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearScreenOnce
     _FrameworkDisplay
       _LCD_write_char
         _LCD_en_dat
           _delay_us
         _LCD_set_xy
           _LCD_en_command
             _delay_ms
             _delay_us
     _LCD_en_command
       _delay_ms
       _delay_us
     _LCD_write_string
       _LCD_Busy
         _LCD_Read_dat
       _LCD_en_dat
         _delay_us
       _LCD_set_xy
         _LCD_en_command
           _delay_ms
           _delay_us
       _Y_position (ARG)
     _aFrameworkDisplay
       _LCD_write_char
         _LCD_en_dat
           _delay_us
         _LCD_set_xy
           _LCD_en_command
             _delay_ms
             _delay_us
   _Ds1302Init
     _Ds1302Write
     _Trans_Alarm_bit
   _Ds1302_Init
   _InitScrn
     _LCD_en_command
       _delay_ms
       _delay_us
     _delay_ms
   _Initialize_INT
   _Initialize_UART
     _UART_send_string
       _UART_send_char
   _KEY_init
   _LCD_MPU_init
   _LCD_init
     _LCD_en_command
       _delay_ms
       _delay_us
   _LED_Init
   _MUSIC_init
   _ModeSwitch
     _AlarmDataDisplay
       _LCD_write_char
         _LCD_en_dat
           _delay_us
         _LCD_set_xy
           _LCD_en_command
             _delay_ms
             _delay_us
     _ClearScreenOnce
       _FrameworkDisplay
         _LCD_write_char
           _LCD_en_dat
             _delay_us
           _LCD_set_xy
             _LCD_en_command
               _delay_ms
               _delay_us
       _LCD_en_command
         _delay_ms
         _delay_us
       _LCD_write_string
         _LCD_Busy
           _LCD_Read_dat
         _LCD_en_dat
           _delay_us
         _LCD_set_xy
           _LCD_en_command
             _delay_ms
             _delay_us
         _Y_position (ARG)
       _aFrameworkDisplay
         _LCD_write_char
           _LCD_en_dat
             _delay_us
           _LCD_set_xy
             _LCD_en_command
               _delay_ms
               _delay_us
     _Ds1302ReadTimeBCD
       _Ds1302Read
     _Ds1302WriteTime
       _Ds1302Write
     _LCD_write_string
       _LCD_Busy
         _LCD_Read_dat
       _LCD_en_dat
         _delay_us
       _LCD_set_xy
         _LCD_en_command
           _delay_ms
           _delay_us
       _Y_position (ARG)
     _TimeDataDisplay
       _LCD_write_char
         _LCD_en_dat
           _delay_us
         _LCD_set_xy
           _LCD_en_command
             _delay_ms
             _delay_us
       _LCD_write_string
         _LCD_Busy
           _LCD_Read_dat
         _LCD_en_dat
           _delay_us
         _LCD_set_xy
           _LCD_en_command
             _delay_ms
             _delay_us
         _Y_position (ARG)
     _Trans_Alarm_bit
     _Trans_Time_bit
     _Y_position
     _delay_ms
   _MusicDisplay
     _LCD_write_char
       _LCD_en_dat
         _delay_us
       _LCD_set_xy
         _LCD_en_command
           _delay_ms
           _delay_us
     _LCD_write_string
       _LCD_Busy
         _LCD_Read_dat
       _LCD_en_dat
         _delay_us
       _LCD_set_xy
         _LCD_en_command
           _delay_ms
           _delay_us
       _Y_position (ARG)
   _MusicPlay
     _PwmTone
     _SixteenNoteDelay
       _delay_ms
   _PwmInit
   _check_Alarm
     _beep_ms
       _PwmTone
       _delay_ms
   _keyscan
     _check_K1
       _delay_ms
     _check_K2
       _delay_ms
     _check_K3
       _delay_ms
     _check_K4
       _delay_ms
     _check_K5
       _delay_ms
     _check_K6
       _delay_ms

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       E       7       17.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      49       5       91.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      63      12        0.0%
ABS                  0      0      63       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun May 17 15:50:06 2020

         ?_FrameworkDisplay 0070                           pc 0002         ??_Ds1302ReadTimeBCD 0079  
               __CFG_CP$OFF 0000          ??_FrameworkDisplay 0064                          l61 0C67  
                        l62 0C76                          l70 0D38                          l63 0C76  
                        l71 0D37                          l72 0D39                          l73 0D3A  
                        l74 0D3A                          l68 0D0F                          l69 0D23  
   __size_of_LCD_en_command 003C    __end_of_AlarmDataDisplay 0DA4                          fsr 0004  
  __size_of_Trans_Alarm_bit 001B                 __CFG_LVP$ON 0000                 ?_LCD_en_dat 0070  
                       l103 1643                         l120 1383                         l112 139A  
                       l106 1466                         l130 152B                         l115 13DE  
                       l123 1740                         l131 152B                         l300 12DE  
                       l116 13E4                         l124 171D                         l132 152A  
                       l301 12DB                         l109 1346                         l117 13EB  
                       l141 1311                         l125 1751                         l302 12E4  
                       l142 131F                         l126 1751                         l303 12E4  
                       l135 12F2                         l143 1321                         l231 0783  
                       l224 0C8D                         l240 1707                         l144 1320  
                       l232 07A1                         l225 0CAC                         l145 1321  
                       l233 07AE                         l129 1519                         l226 0CB5  
                       l138 1310                         l234 07D4                         l250 1607  
                       l306 14F5                         l227 0CD3                         l411 1333  
                       l235 07DD                         l251 1607                         l243 15D6  
                       l307 1508                         l228 0CD7                         l260 1680  
                       l420 0C13                         l500 00AD                         l308 1508  
                       l421 0C16                         l501 00AC                         l238 16D2  
                       l246 12B5                         l414 0C16                         l254 0E11  
                       l510 0103                         l502 00AA                         l430 15A8  
                       l239 16F8                         l263 14E6                         l415 0BEE  
                       l503 0536                         l511 012A                         l416 0C14  
                       l600 03FF                         l520 014E                         l512 011F  
                       l504 00C2                         l272 1409                         l280 0B91  
                       l424 15A8                         l417 0BFF                         l249 15E2  
                       l257 0EF7                         l601 041D                         l521 014D  
                       l513 011E                         l505 00D7                         l281 0BB9  
                       l425 15A7                         l433 14A5                         l441 14C5  
                       l266 13CF                         l610 0452                         l602 0412  
                       l530 01A5                         l522 0166                         l514 0128  
                       l506 00D5                         l282 0B9A                         l426 1594  
                       l434 14A4                         l442 14C4                         l450 17A7  
                       l419 0BF9                         l611 0479                         l603 041B  
                       l531 01A4                         l523 018B                         l515 0128  
                       l507 00EE                         l283 0BB8                         l275 0B7F  
                       l427 1594                         l435 149D                         l443 14BD  
                       l451 1769                         l292 1571                         l700 0724  
                       l620 049F                         l612 046E                         l604 041B  
                       l540 0217                         l532 01AF                         l524 0180  
                       l516 0151                         l508 00ED                         l284 0BA3  
                       l276 0BBB                         l428 1598                         l436 149D  
                       l444 14BD                         l460 17A3                         l452 1769  
                       l293 1557                         l269 0DA3                         l621 049E  
                       l613 046D                         l605 043D                         l541 0216  
                       l533 01AE                         l525 017F                         l517 0150  
                       l509 00EB                         l701 076C                         l277 0BBB  
                       l285 0BB7                         l429 15A5                         l437 14A1  
                       l445 14C1                         l461 17A2                         l453 176D  
                       l294 1562                         l630 04F2                         l622 04B7  
                       l614 0477                         l606 043C                         l550 0250  
                       l542 020A                         l534 01C7                         l526 0189  
                       l518 0144                         l286 0BAC                         l278 0B88  
                       l438 14A5                         l446 14C5                         l454 1780  
                       l462 17A8                         l470 17D7                         l295 156B  
                       l631 04F1                         l623 04D5                         l615 0477  
                       l607 0430                         l551 0250                         l543 0209  
                       l535 01EE                         l527 0189                         l519 0143  
                       l279 0BBA                         l287 0BB6                         l455 177E  
                       l471 17D5                         l296 157C                         l640 05C1  
                       l632 053C                         l624 04CA                         l616 04A2  
                       l608 043A                         l560 02B0                         l552 0278  
                       l544 0214                         l536 01E3                         l528 01B2  
                       l800 0FAD                         l456 17A5                         l472 17FC  
                       l297 157C                         l633 072D                         l641 05C0  
                       l625 04D3                         l617 04A1                         l609 0439  
                       l561 02C9                         l553 0277                         l545 0213  
                       l537 01E2                         l529 01B1                         l801 0FAC  
                       l449 17A8                         l457 1793                         l465 17FF  
                       l473 17EA                         l481 07FF                         l650 05DE  
                       l642 05B4                         l634 0573                         l626 04D3  
                       l618 0495                         l570 0322                         l562 02C8  
                       l554 026B                         l546 022C                         l538 01EC  
                       l802 0FCC                         l458 1792                         l466 17FE  
                       l474 17E9                         l482 07FE                         l715 12BC  
                       l651 05E8                         l643 05B3                         l635 059A  
                       l627 04F5                         l619 0494                         l571 0321  
                       l563 02C6                         l555 026A                         l547 0252  
                       l539 01EC                         l803 0FE1                         l459 17A4  
                       l475 17FB                         l467 17C0                         l483 07F5  
                       l740 1366                         l708 12D7                         l492 075F  
                       l660 063A                         l652 05E8                         l644 05BE  
                       l636 058F                         l628 04F4                         l580 035B  
                       l572 0315                         l564 02D4                         l556 0275  
                       l548 0247                         l804 0FDD                         l476 17FA  
                       l468 17C0                         l484 07F5                         l741 1366  
                       l661 062F                         l653 0610                         l645 05BD  
                       l637 058E                         l629 04E8                         l581 035B  
                       l573 0314                         l565 02FB                         l557 0274  
                       l549 0246                         l493 0039                         l477 17F9  
                       l469 17C4                         l485 07FA                         l742 136D  
                       l734 1447                         l494 076C                         l646 0753  
                       l670 065D                         l662 062E                         l654 060F  
                       l638 0598                         l590 03B6                         l582 0385  
                       l574 031F                         l566 02F0                         l558 028D  
                       l478 17FF                         l486 07FF                         l743 136D  
                       l671 0666                         l663 0638                         l655 0603  
                       l647 05C6                         l639 0598                         l591 03B5  
                       l583 0384                         l575 031E                         l567 02EF  
                       l559 02B2                         l495 004E                         l680 069C  
                       l672 0682                         l664 0638                         l656 0602  
                       l648 05EA                         l496 050B                         l592 03BF  
                       l584 0378                         l576 0337                         l568 02F9  
                       l737 1360                         l681 06A5                         l673 0677  
                       l665 0661                         l657 060D                         l649 05DF  
                       l593 03BF                         l585 0377                         l577 035D  
                       l569 02F9                         l497 0081                         l489 1485  
                       l738 1360                         l746 1542                         l690 06E3  
                       l682 06CA                         l674 0680                         l666 0660  
                       l658 060C                         l594 03EA                         l586 0382  
                       l578 0352                         l498 0096                         l739 1365  
                       l747 152D                         l691 06EE                         l683 06BF  
                       l675 0680                         l667 0654                         l659 0615  
                       l595 03E9                         l587 0381                         l579 0351  
                       l499 0094                         l748 1553                         l692 06ED  
                       l684 06BE                         l676 06A0                         l668 0653  
                       l596 03DD                         l588 039A                         l749 1553  
                       l693 06F6                         l685 06C8                         l677 069F  
                       l669 065E                         l597 03DC                         l589 03C1  
                       l694 0712                         l686 06C8                         l678 0693  
                       l598 03E7                         l790 16BD                         l695 0707  
                       l687 06F1                         l679 069D                         l599 03E6  
                       l784 12AE                         l696 0710                         l688 06F0  
                       l697 0710                         l689 06E4                         l793 0EFE  
                       l698 0727                         l794 0FFF                         l699 0726  
                       l795 0F2A                         l787 12C4                         l796 0FAF  
                       l797 0F54                         l798 0FAE                         l799 0F7F  
                       _PR2 0092                __CFG_CPD$OFF 0000                         _ISR 140A  
               ?_Ds1302Init 0070                 ?_Ds1302Read 0070                         fsr0 0004  
                       indf 0000                 ?_LCD_set_xy 0079            LCD_Busy@busyFlag 0075  
            Ds1302Read@dat1 0076              Ds1302Read@addr 0075                __CFG_IESO$ON 0000  
              __CFG_FOSC$HS 0000               ?_LCD_Read_dat 0070                        ?_ISR 0070  
 __end_of_Ds1302ReadTimeBCD 1608                        l3013 152C                        l3101 1332  
                      l3015 152D                        l3031 1429                        l3103 12BD  
                      l3017 153D                        l3041 143D                        l3033 1436  
                      l3105 12C1                        l4001 158C                        l3051 16C2  
                      l3019 1542                        l3043 143E                        l3035 1438  
                      l4011 15A6                        l4003 1593                        l3061 16ED  
                      l3053 16C9                        l3045 12B6                        l3037 143B  
                      l4101 0C17                        l4005 1599                        l4013 1486  
                      l4021 14A6                        l3063 16F1                        l3055 16CA  
                      l3047 12AF                        l3039 143C                        l3071 12EE  
                      l4111 1448                        l4103 0C28                        l4007 159D  
                      l4015 148C                        l4023 14AC                        l4031 1758  
                      l3057 16D1                        l3065 16F8                        l3049 16BE  
                      l4113 1301                        l3073 12EF                        l3081 12D3  
                      l4201 00E2                        l4105 0C54                        l4121 0B7E  
                      l4009 15A3                        l4017 1495                        l4025 14B5  
                      l4041 1779                        l4033 1761                        l3059 16D2  
                      l3091 1326                        l3067 12E5                        l3083 12D6  
                      l4211 0108                        l4203 00E6                        l4107 0C58  
                      l4131 0B8F                        l4123 0B7F                        l4019 149C  
                      l4027 14BC                        l4051 1793                        l4043 177E  
                      l4035 1768                        l4115 1467                        l2701 0CC1  
                      l3093 1329                        l3069 12EB                        l3085 12AA  
                      l2621 1343                        l2613 1335                        l4301 0244  
                      l4221 0126                        l4213 010E                        l4205 00EB  
                      l4109 0C67                        l4141 0B9A                        l4133 0B90  
                      l4125 0B86                        l4117 0B74                        l4053 1799  
                      l4037 1771                        l4045 1780                        l4029 1752  
                      l4061 17AF                        l2711 0CC9                        l2703 0CC3  
                      l3095 132D                        l3079 12CD                        l3087 12AB  
                      l2615 133A                        l2631 138B                        l2623 1384  
                      l4311 0263                        l4303 0247                        l4231 0140  
                      l4215 0115                        l4223 012A                        l4207 00EE  
                      l4151 0BAB                        l4143 0BA1                        l4135 0B91  
                      l4127 0B87                        l4119 0B7D                        l4055 179D  
                      l4047 1789                        l4039 1775                        l4071 17D3  
                      l4063 17B8                        l2705 0CC4                        l3097 1330  
                      l3089 1322                        l2617 133C                        l2641 1398  
                      l2633 1392                        l2625 1388                        l4401 039A  
                      l4321 028D                        l4313 0267                        l4305 024E  
                      l4241 016B                        l4233 0148                        l4225 0131  
                      l4217 011C                        l4209 0103                        l4161 0048  
                      l4153 0BAC                        l4145 0BA2                        l4137 0B98  
                      l4129 0B88                        l4057 17A6                        l4049 178D  
                      l4081 17EA                        l4073 17D5                        l4065 17BF  
                      l2707 0CC5                        l3099 1331                        l2619 133D  
                      l2643 139A                        l2635 1393                        l2627 1389  
                      l2811 1518                        l2803 150A                        l4411 03B6  
                      l4403 039F                        l4331 02B0                        l4323 029B  
                      l4315 026F                        l4307 0252                        l4243 0176  
                      l4251 018B                        l4235 014E                        l4227 0135  
                      l4219 011F                        l4171 0086                        l4163 004E  
                      l4155 0038                        l4147 0BA3                        l4139 0B99  
                      l4083 17F0                        l4067 17C8                        l4075 17D7  
                      l4059 17A9                        l4091 07E4                        l2709 0CC8  
                      l2821 13B5                        l2573 12D9                        l2637 1394  
                      l2629 138A                        l2805 150E                        l2813 1519  
                      l4501 04F2                        l4421 03D3                        l4413 03BD  
                      l4405 03A5                        l4341 02C6                        l4325 02A0  
                      l4333 02B2                        l4317 0275                        l4309 0259  
                      l4261 01AF                        l4253 0192                        l4245 017D  
                      l4229 013C                        l4237 0151                        l4181 00A1  
                      l4173 008C                        l4165 0053                        l4157 0039  
                      l4149 0BAA                        l4085 17F7                        l4077 17E0  
                      l4069 17CC                        l4093 07ED                        l2671 0C78  
                      l2575 12DB                        l2639 1397                        l2655 1311  
                      l2823 15AA                        l2815 1520                        l2807 1515  
                      l4511 053C                        l4503 04F5                        l4431 03FF  
                      l4423 03D7                        l4407 03AC                        l4415 03C1  
                      l4351 02E6                        l4335 02B9                        l4343 02C9  
                      l4327 02A6                        l4319 0278                        l4271 01D9  
                      l4255 019B                        l4263 01B2                        l4247 0180  
                      l4239 0166                        l4191 00C7                        l4183 00A5  
                      l4175 0093                        l4167 005C                        l4159 0043  
                      l4087 17FD                        l4079 17E7                        l4095 07F4  
                      l2681 0C99                        l2673 0C84                        l2577 12DE  
                      l2657 1319                        l2825 15AE                        l2817 1527  
                      l2809 1517                        l4601 0658                        l4521 0573  
                      l4513 0541                        l4505 050A                        l4433 0404  
                      l4441 041D                        l4425 03E1                        l4417 03C8  
                      l4409 03B3                        l4361 0302                        l4353 02ED  
                      l4345 02D4                        l4337 02BD                        l4329 02AD  
                      l4281 01F5                        l4273 01E0                        l4265 01C7  
                      l4257 019F                        l4249 0187                        l4193 00CD  
                      l4185 00AA                        l4177 0096                        l4169 0081  
                      l4097 07FA                        l4089 07DE                        l2691 0CA1  
                      l2683 0C9B                        l2675 0C85                        l3811 155B  
                      l2659 131E                        l2827 15B5                        l2851 0DCD  
                      l2843 0DA4                        l2819 1529                        l4611 0675  
                      l4603 065E                        l4531 058F                        l4523 0578  
                      l4515 0546                        l4443 0424                        l4451 043D  
                      l4435 0410                        l4427 03E7                        l4419 03CC  
                      l4371 031F                        l4363 0306                        l4355 02F0  
                      l4347 02D9                        l4339 02C1                        l4291 0214  
                      l4283 01F9                        l4275 01E3                        l4267 01CC  
                      l4259 01A9                        l4195 00D4                        l4179 009D  
                      l4187 00AD                        l4507 050B                        l2771 16B6  
                      l4099 07FD                        l2685 0C9C                        l2677 0C8C  
                      l2693 0CAC                        l3813 1561                        l3821 160E  
                      l3901 07CA                        l2829 15CC                        l2853 0DDE  
                      l2845 0DB2                        l4621 0691                        l4613 0677  
                      l4605 0661                        l4541 05AC                        l4533 0596  
                      l4525 057E                        l4517 054B                        l4461 046B  
                      l4453 0452                        l4445 042E                        l4437 0412  
                      l4429 03EA                        l4381 034F                        l4365 030D  
                      l4373 0322                        l4357 02F7                        l4349 02DF  
                      l4285 0200                        l4293 0217                        l4277 01EA  
                      l4269 01D2                        l4197 00D7                        l4189 00C2  
                      l4509 0536                        l2773 16BB                        l2765 1682  
                      l4701 0EFE                        l2695 0CAD                        l2687 0C9D  
                      l2679 0C8D                        l3815 1563                        l3807 1554  
                      l3831 1628                        l3823 1610                        l3911 14C6  
                      l3903 07CE                        l2855 0DEA                        l2847 0DB7  
                      l4631 06AA                        l4623 0697                        l4615 067E  
                      l4607 0666                        l4551 05C6                        l4543 05B0  
                      l4527 0585                        l4535 059A                        l4519 0554  
                      l4471 0484                        l4463 046E                        l4455 0457  
                      l4447 0434                        l4439 0419                        l4391 036E  
                      l4383 0352                        l4375 0337                        l4367 0311  
                      l4359 02FB                        l4295 022C                        l4287 0204  
                      l4279 01EE                        l4199 00DE                        l2775 16BC  
                      l2767 1686                        l4711 0F5A                        l4703 0F05  
                      l2697 0CB4                        l2689 0CA0                        l3817 156B  
                      l3809 1557                        l3833 162E                        l3825 1616  
                      l2777 135B                        l3841 13D3                        l3921 0BCD  
                      l3913 0BBC                        l3905 07DB                        l2857 0DFB  
                      l2849 0DC8                        l4641 06C6                        l4633 06AE  
                      l4625 069D                        l4609 066B                        l4617 0682  
                      l4561 05E6                        l4553 05CB                        l4545 05B8  
                      l4537 05A1                        l4529 058C                        l4473 048B  
                      l4481 04A2                        l4465 0475                        l4457 045D  
                      l4449 043A                        l4393 0372                        l4385 0359  
                      l4377 033C                        l4369 0319                        l4297 0231  
                      l4289 020E                        l2769 1698                        l4721 0FB7  
                      l4713 0F7F                        l4705 0F2A                        l2699 0CB5  
                      l3835 1634                        l3827 161C                        l3819 1609  
                      l3843 13D8                        l3851 170B                        l3931 0BFF  
                      l3923 0BE9                        l3915 0BC0                        l3907 07DD  
                      l2859 0E00                        l4651 06DE                        l4635 06B5  
                      l4643 06CA                        l4619 0687                        l4627 06A0  
                      l4571 0607                        l4555 05D5                        l4563 05EA  
                      l4547 05BE                        l4539 05A5                        l4491 04D1  
                      l4483 04B7                        l4475 048F                        l4459 0464  
                      l4467 0479                        l4395 037C                        l4379 0348  
                      l4387 035D                        l4299 023D                        l4731 0FD1  
                      l4723 0FBF                        l4715 0F85                        l4707 0F2F  
                      l3837 1637                        l3829 1622                        l3845 13DE  
                      l3909 1644                        l3853 171D                        l3933 0C04  
                      l3925 0BEE                        l3917 0BC6                        l3861 076E  
                      l3941 15E1                        l4805 073F                        l4661 06FB  
                      l4653 06E8                        l4645 06CF                        l4637 06BC  
                      l4629 06A5                        l4581 061E                        l4573 060D  
                      l4565 05EF                        l4557 05DC                        l4549 05C1  
                      l4485 04BC                        l4493 04D5                        l4477 0499  
                      l4469 0480                        l4397 0382                        l4389 0364  
                      l4741 0FF4                        l4733 0FD5                        l4725 0FC2  
                      l4709 0F54                        l4717 0FAF                        l3839 1640  
                      l3847 13E4                        l3855 1729                        l3927 0BF3  
                      l3935 0C14                        l3919 0BC9                        l3871 078F  
                      l3863 077A                        l3943 15E2                        l3951 0E20  
                      l4671 0717                        l4663 0705                        l4655 06EE  
                      l4647 06D3                        l4639 06BF                        l4583 0625  
                      l4591 063A                        l4567 05F9                        l4575 0610  
                      l4559 05DF                        l4495 04DC                        l4487 04C8  
                      l4479 049F                        l4399 0385                        l4743 0FFC  
                      l4735 0FDC                        l4727 0FCB                        l4719 0FB4  
                      l4751 0CE7                        l3849 1371                        l3857 1737  
                      l3929 0BF9                        l3881 0797                        l3873 0791  
                      l3865 077B                        l3945 15FC                        l3937 15D7  
                      l3961 0E6B                        l3953 0E2F                        l4681 072C  
                      l4673 071B                        l4665 0707                        l4649 06DA  
                      l4657 06F1                        l4593 063F                        l4585 062C  
                      l4577 0615                        l4569 05FD                        l4497 04E6  
                      l4489 04CA                        l4737 0FE0                        l4729 0FCC  
                      l4761 0D00                        l4753 0CEC                        l4745 0CD8  
                      l3859 1740                        l3891 07B4                        l3883 07A5  
                      l3875 0792                        l3867 0782                        l3947 1600  
                      l3939 15DA                        l3971 0ED5                        l3963 0E91  
                      l3955 0E3E                        l4675 071F                        l4667 070E  
                      l4659 06F6                        l4595 0643                        l4587 062F  
                      l4579 061A                        l4683 072D                        l4499 04EC  
                      l4739 0FE4                        l4771 0D2D                        l4763 0D14  
                      l4755 0CF1                        l4747 0CDD                        l3893 07C4  
                      l3885 07A6                        l3877 0793                        l3869 0783  
                      l3973 0EE6                        l3965 0EA2                        l3957 0E4D  
                      l3949 0E12                        l4677 0724                        l4669 0712  
                      l4597 064A                        l4589 0636                        l4685 0753  
                      l3981 1403                        l4773 0D31                        l4765 0D18  
                      l4757 0CF6                        l4749 0CE2                        l3975 0D3D  
                      l3895 07C5                        l3887 07AD                        l3879 0796  
                      l3967 0EB3                        l3959 0E5C                        l4687 075E  
                      l4679 0727                        l4599 064E                        l3991 14F5  
                      l3983 1406                        l4767 0D1D                        l4759 0CFB  
                      l3897 07C6                        l3889 07AE                        l3969 0EC4  
                      l4689 075F                        l3993 14FE                        l3985 14EA  
                      l4697 0EF8                        l3977 13EC                        l4769 0D23  
                      l3899 07C9                        l3995 1502                        l3987 14EE  
                      l4699 0EFD                        l3979 13F2                        l3989 14F4  
                      l3997 157D                        l3999 1583                        STR_1 0B20  
                      STR_2 0B0A                        STR_3 0B15                        STR_4 0B2B  
                      STR_5 0B67                        STR_6 0B62                        STR_7 0B4E  
                      STR_8 0B44                        STR_9 0B3F                        u2330 131D  
                      u2331 131C                        u2500 150E                        u2501 150D  
                      u2350 0C8B                        u2510 1515                        u2351 0C8A  
                      u2511 1514                        u2360 0CAB                        u2280 12E3  
                      u2440 1364                        u2520 1520                        u5000 17AF  
                      u2361 0CAA                        u2281 12E2                        u2441 1363  
                      u2521 151F                        u5001 17AE                        u2370 0CB3  
                      u2450 136C                        u2530 1527                        u5010 17BE  
                      u2371 0CB2                        u2451 136B                        u2531 1526  
                      u5011 17BD                        u2380 0CD3                        u5020 17C4  
                      u5100 07F3                  _Alarm_TIME 0057                        u2381 0CD2  
                      u2605 0DF2                        u5021 17C3                        u5101 07F2  
                      u5030 17C8                        u5110 07F9                        u2615 0E03  
                      u5031 17C7                        u5111 07F8                        u6000 0424  
                      u5200 0086                        u5040 17D3                        u6001 0423  
                      u5201 0085                        u5041 17D2                        u6010 042E  
                      u5210 0093                        u5130 0C58                        u5050 17E0  
                      u6011 042D                        u5211 0092                        u5131 0C57  
                      u5051 17DF                        u6100 048F                        u6020 0434  
                      u5300 0108                        u5220 009D                        u5140 0B7C  
                      u5060 17E7                        u2565 0DA9                        u6101 048E  
                      u6021 0433                        u5301 0107                        u5221 009C  
                      u5125 0C31                        u5141 0B7B                        u5061 17E6  
                      u6110 0499                        u5310 0115                        u5230 00A5  
                      u5150 0B85                        u5070 17F0                        u2575 0DBF  
                      u6111 0498                        u5311 0114                        u5231 00A4  
                      u5151 0B84                        u5071 17EF                        u6200 0578  
                      u6040 0457                        u5400 0176                        u5320 011C  
                      u5160 0B8E                        u5080 17F7                        u2585 0DD0  
                      u6201 0577                        u6041 0456                        u5401 0175  
                      u5321 011B                        u5161 0B8D                        u5081 17F6  
                      u6210 0585                        u6130 04BC                        u6050 0464  
                      u5410 017D                        u5330 0126                        u5250 00C7  
                      u5170 0B97                        u5090 07E4                        u2595 0DE1  
                      u6211 0584                        u6131 04BB                        u6051 0463  
                      u6035 0440                        u5411 017C                        u5331 0125  
                      u5251 00C6                        u5171 0B96                        u5091 07E3  
                      u4700 07AC                        u6300 05DC                        u6220 058C  
                      u6140 04C8                        u6060 046B                        u5500 01E0  
                      u5420 0187                        u5340 0131                        u5260 00D4  
                      u5180 0BA0                        u4701 07AB                        u6301 05DB  
                      u6221 058B                        u6141 04C7                        u6125 04A5  
                      u6061 046A                        u5501 01DF                        u5421 0186  
                      u5341 0130                        u5261 00D3                        u5245 00B0  
                      u5181 0B9F                        u4630 1560                        u2950 1552  
                      u6310 05E6                        u6230 0596                        u6150 04D1  
                      u6070 0475                        u5510 01EA                        u5430 0192  
                      u5350 013C                        u5270 00DE                        u5190 0BA9  
                      _INTF 0059                        u4631 155F                        u2951 1551  
                      u6311 05E5                        u6231 0595                        u6151 04D0  
                      u6071 0474                        u5511 01E9                        u5431 0191  
                      u5351 013B                        u5271 00DD                        u5191 0BA8  
                      u4640 156A                        u4720 07D4                        u6400 063F  
                      u6320 05EF                        u6240 05A1                        u6160 04DC  
                      u6080 0480                        u5600 024E                        u5520 01F5  
                      u5440 019B                        u5360 0140                        u5280 00E6  
                      u4800 1507                        u4641 1569                        u4721 07D3  
                      u6401 063E                        u6321 05EE                        u6241 05A0  
                      u6161 04DB                        u6081 047F                        u5601 024D  
                      u5521 01F4                        u5441 019A                        u5361 013F  
                      u5281 00E5                        u4801 1506                        u4650 157B  
                      u4730 0BC0                        u6410 064A                        u6330 05F9  
                      u6250 05AC                        u6170 04E6                        u6090 048B  
                      u5610 0259                        u5530 0200                        u5450 019F  
                      u5370 0148                        u4810 1583                        u4651 157A  
                      u4731 0BBF                        u4715 07B7                        u6411 0649  
                      u6331 05F8                        u6251 05AB                        u6171 04E5  
                      u6091 048A                        u5611 0258                        u5531 01FF  
                      u5451 019E                        u5371 0147                        u4811 1582  
                      u2980 16D0                        u4660 13D8                        u4740 0BCD  
                      u6500 06AA                        u6420 064E                        u6340 05FD  
                      u6260 05B0                        u6180 04EC                        u5700 02D9  
                      u5620 0263                        u5540 0204                        u5460 01A9  
                      u4820 1592                        u4900 14C1                        u2981 16CF  
                      u4661 13D7                        u4741 0BCC                        u6501 06A9  
                      u6421 064D                        u6341 05FC                        u6261 05AF  
                      u6181 04EB                        u5701 02D8                        u5621 0262  
                      u5541 0203                        u5461 01A8                        u4821 1591  
                      u4901 14C0                        u2990 16F7                        u4670 1750  
                      u4750 0BF3                        u6510 06B5                        u6430 0658  
                      u6350 0607                        u6270 05B8                        u5710 02E6  
                      u5630 0267                        u5550 020E                        u5390 016B  
                      u4830 1598                        u4910 1758                        u2991 16F6  
                      u4655 1577                        u4671 174F                        u4751 0BF2  
                      u6511 06B4                        u6431 0657                        u6351 0606  
                      u6271 05B7                        u5711 02E5                        u5631 0266  
                      u5551 020D                        u5391 016A                        u5295 00F1  
                      u4831 1597                        u4911 1757                        i1l80 1422  
                      u4760 0BF8                        u4680 0781                        u6600 070E  
                      u6520 06BC                        u6440 066B                        u6360 061A  
                      u6280 05CB                        u5800 0348                        u5720 02ED  
                      u5640 026F                        u5480 01CC                        u4840 15A3  
                      u4920 1767                        u4761 0BF7                        u4681 0780  
                      u6601 070D                        u6521 06BB                        u6441 066A  
                      u6361 0619                        u6281 05CA                        u5801 0347  
                      u5721 02EC                        u5641 026E                        u5481 01CB  
                      u5385 0154                        u4841 15A2                        u4921 1766  
                      u4690 07A1                        u4770 15E0                        u6610 0717  
                      u6530 06C6                        u6450 0675                        u6370 0625  
                      u6290 05D5                        u5810 034F                        u5730 02F7  
                      u5570 0231                        u5490 01D9                        u4850 148C  
                      u4930 176D                        u4691 07A0                        u4771 15DF  
                      u6611 0716                        u6531 06C5                        u6451 0674  
                      u6371 0624                        u6291 05D4                        u6195 04F8  
                      u5811 034E                        u5731 02F6                        u5571 0230  
                      u5491 01D8                        u5475 01B5                        u4851 148B  
                      u4931 176C                        u4780 1606                        u6620 071F  
                      u6540 06CF                        u6460 067E                        u6380 062C  
                      u5900 03B3                        u5820 0359                        u5740 0302  
                      u5660 02A0                        u5580 023D                        u6700 0FD1  
                      u4860 149B                        u4940 1771                        u4781 1605  
                      u6621 071E                        u6541 06CE                        u6461 067D  
                      u6381 062B                        u5901 03B2                        u5821 0358  
                      u5741 0301                        u5661 029F                        u5581 023C  
                      u5565 021A                        u6701 0FD0                        u4861 149A  
                      u4941 1770                        u6550 06DA                        u6470 0687  
                      u6390 0636                        u5910 03BD                        u5830 0364  
                      u5750 030D                        u5670 02AD                        u5590 0244  
                      u4790 14F3                        u6710 0FDC                        u4870 14A1  
                      u4950 1779                        i1l79 1422                        u6551 06D9  
                      u6471 0686                        u6391 0635                        u5911 03BC  
                      u5831 0363                        u5751 030C                        u5671 02AC  
                      u5655 027B                        u5591 0243                        u4791 14F2  
                      u6711 0FDB                        u4871 14A0                        u4951 1778  
                      u6560 06DE                        u6480 0691                        u5920 03C8  
                      u5840 036E                        u5760 0311                        u5680 02B9  
                      u6640 0EFC                        u4880 14AC                        u4960 1789  
                      u6720 0D18                        u6561 06DD                        u6481 0690  
                      u5921 03C7                        u5841 036D                        u5761 0310  
                      u5681 02B8                        u6641 0EFB                        u4881 14AB  
                      u4961 1788                        u6721 0D17                        u6634 0738  
                      u6570 06E8                        u6490 0697                        u5930 03D3  
                      u5850 0372                        u5770 0319                        u5690 02C1  
                      u6650 0F05                        u4890 14BB                        u4970 178D  
                      u6730 0D31                        u6571 06E7                        u6491 0696  
                      u5931 03D2                        u5851 0371                        u5771 0318  
                      u5691 02C0                        u6651 0F04                        u4891 14BA  
                      u4971 178C                        u6731 0D30                        u6580 06FB  
                      u5940 03D7                        u5860 037C                        u6660 0F2F  
                      u4980 1799                        u6581 06FA                        u5941 03D6  
                      u5861 037B                        u6661 0F2E                        u4981 1798  
                      u6590 0705                        u5950 03E1                        u5790 033C  
                      u6670 0F5A                        u4990 179D                        u6591 0704  
                      u5951 03E0                        u5791 033B                        u6671 0F59  
                      u4991 179C                        u5880 039F                        u6680 0F85  
                      u5881 039E                        u5785 0325                        u6681 0F84  
                      u5970 0404                        u5890 03AC                        u6690 0FB4  
                      u5971 0403                        u5891 03AB                        u5875 0388  
                      u6691 0FB3                        u5980 0410                        u5981 040F  
                      u5965 03ED                        u5990 0419                        u5991 0418  
                      _TXIF 0064                ?_Ds1302_Init 0070                        _Mode 002B  
              __CFG_WRT$OFF 0000               __CFG_FCMEN$ON 0000                ?_Ds1302Write 0072  
                      _main 0CD8                        _week 00A0                        btemp 007E  
             __CFG_BOREN$ON 0000              ??_LCD_MPU_init 0072                        start 000C  
             __CFG_MCLRE$ON 0000   __size_of_SixteenNoteDelay 0022                       ??_ISR 0070  
 __size_of_UART_send_string 0028              Y_position@addr 0072            __end_of_LCD_Busy 1322  
           __end_of_SkyCity 093B            __end_of_LED_Init 12D8             __end_of_PwmInit 12C5  
           __end_of_PwmTone 16BE            __end_of_LCD_init 1467             _TimeDataDisplay 0E12  
                     ?_main 0070                       STR_10 0B5D                       STR_11 0B49  
                     STR_20 0B6E                       STR_12 0B58                       STR_21 0AD6  
                     STR_13 0B53                       STR_14 0B70                       STR_15 0B34  
                     STR_16 0B3A                       STR_17 0AFB               __CFG_WDTE$OFF 0000  
                     STR_18 0B6E                       STR_19 0B6C                       _ANSEL 0188  
                     _T2CON 0012                  _aHOUR_unit 003D                       _SPBRG 0099  
                     _PORTD 0008        __size_of_check_Alarm 0048             __end_of_beep_ms 140A  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                 ?_MUSIC_init 0070            __end_of_KEY_init 1334  
                     _TXREG 0019              ??_LCD_Read_dat 0072             LCD_Read_dat@dat 0073  
            Ds1302Write@dat 0072             __end_of_keyscan 1486              __pbitbssCOMMON 03D0  
          ?_ClearScreenOnce 0070                       pclath 000A                       status 0003  
                     wtemp0 007E            ??_Trans_Time_bit 0072         __size_of_LCD_en_dat 0013  
                _JingleBell 093B         __size_of_Ds1302Init 004A         __size_of_Ds1302Read 0071  
               Ds1302Init@n 0077                 Ds1302Read@n 0078         __size_of_LCD_set_xy 001C  
           __initialization 000F     __size_of_Initialize_INT 0007                __end_of_main 0D3D  
          __end_of_InitScrn 1311              _isMusicPlaying 03D2                 LCD_set_xy@x 005F  
               LCD_set_xy@y 0079                  _ModeSwitch 0038           ?_LCD_write_string 0060  
                    ??_main 007A                 _LcdTimeAddr 0043          ??_LCD_write_string 0063  
               _aMINUTE_ten 003C                 _aSECOND_ten 003A            __end_of_SongName 0AC8  
         ??_Trans_Alarm_bit 0072    __size_of_Ds1302WriteTime 002E                  _LittleLamb 0A16  
                _LittleStar 0A99                      _CCPR1L 0015  __size_of_Ds1302ReadTimeBCD 0031  
                    _ANSELH 0189                      i1l3771 140F                      i1l3773 141E  
                    i1l3775 1420                      i1l3767 140A                      i1l3769 140E  
                    u460_20 140E                      u460_21 140D                      u461_20 141B  
                    u461_21 1417                      u462_24 141E            __end_of_check_K1 15A9  
          __end_of_check_K2 14A6            __end_of_check_K3 14C6            __end_of_check_K4 17A9  
          __end_of_check_K5 1800            __end_of_check_K6 0800            __end_of_delay_ms 157D  
          __end_of_delay_us 12E5              __CFG_PWRTE$OFF 0000               _WriteTimeAddr 0AC8  
       __size_of_MUSIC_init 0005                   ??_PwmInit 0072     __end_of_TimeDataDisplay 0EF8  
           Ds1302Write@addr 0074                   ??_PwmTone 0072              _LCD_en_command 1608  
   __size_of_LCD_write_char 0016                   ??_beep_ms 0079          __size_of_MusicPlay 0108  
      __end_of_LCD_MPU_init 12F3                   ??_keyscan 0079                      saved_w 007E  
                _Y_position 1509     __end_of__initialization 0034                   ?_LCD_Busy 0070  
                 ?_LED_Init 0070                   ?_LCD_init 0070        __size_of_Ds1302_Init 0007  
      __size_of_Ds1302Write 0061        __end_of_LCD_Read_dat 139B                   ?_KEY_init 0070  
    __end_of_LCD_en_command 1644              __pcstackCOMMON 0070            _SixteenNoteDelay 14E7  
              __pidataBANK0 139B                __pidataBANK1 12F3                Ds1302Write@n 0075  
          _UART_send_string 152C    __size_of_Initialize_UART 001F           ?_AlarmDataDisplay 0070  
               ?_ModeSwitch 0070                ??_LCD_en_dat 0073                ??_Ds1302Init 0076  
              ??_Ds1302Read 0072                  _backup_pos 0041          ??_AlarmDataDisplay 0064  
            _OPTION_REGbits 0081                ??_LCD_set_xy 005D   __size_of_FrameworkDisplay 003D  
                __pbssBANK0 0020                   ?_InitScrn 0070                  ??_LCD_Busy 0074  
         ??_Ds1302WriteTime 0077                  ??_LED_Init 0072        __end_of_ReadTimeAddr 0AD6  
                ??_LCD_init 0079           __end_of_MusicPlay 1000                _aMINUTE_unit 003B  
        __end_of_LCD_en_dat 1347                _aSECOND_unit 0039          __end_of_Ds1302Init 1708  
        __end_of_Ds1302Read 07DE                  _clear_flag 03D0                  __pmaintext 0CD8  
                ??_KEY_init 0072              _Initialize_INT 12B6             ?_LCD_en_command 0070  
          ?_TimeDataDisplay 0070          __end_of_LCD_set_xy 13EC                  __pintentry 0004  
                   _DAY_ten 0034                   ?_check_K1 0070                   ?_check_K2 0070  
                 ?_check_K3 0070                ??_MUSIC_init 0072                   ?_check_K4 0070  
                 ?_check_K5 0070                   ?_check_K6 0070               ?_MusicDisplay 0070  
                 ?_delay_ms 0072                   ?_delay_us 0070     __size_of_UART_send_char 0014  
               ?_Y_position 0070                  __stringtab 0800                  ??_InitScrn 0079  
       __size_of_ModeSwitch 0735      __end_of_Initialize_INT 12BD           SixteenNoteDelay@n 005D  
         SixteenNoteDelay@x 005E                     _SkyCity 0812                     _PwmInit 12BD  
        __end_of_MUSIC_init 12AF                     _SongNum 0042                     _PwmTone 1681  
            _LCD_write_char 136E             _Trans_Alarm_bit 13B5                     _beep_ms 13EC  
     __size_of_LCD_MPU_init 000E               ??_check_Alarm 0079            Ds1302WriteTime@n 0078  
                   __ptext1 1467                     __ptext2 07DE                     __ptext3 17A9  
                   __ptext4 1752                     __ptext5 14A6                     __ptext6 1486  
                   __ptext7 157D                     __ptext8 0B74                     __ptext9 13EC  
              __size_of_ISR 001F                  ??_check_K1 0078                  ??_check_K2 0078  
                ??_check_K3 0078                  ??_check_K4 0078                  ??_check_K5 0078  
                ??_check_K6 0078           ??_Initialize_UART 0075                     _keyscan 1467  
            ??_MusicDisplay 0065                  ??_delay_ms 0074                  ??_delay_us 0072  
                   clrloop0 12C6        end_of_initialization 0034   __size_of_LCD_write_string 004A  
     __size_of_LCD_Read_dat 0017             ?_Initialize_INT 0070                _LCD_MPU_init 12E5  
                 _HOUR_unit 0030    __size_of_ClearScreenOnce 005B      __end_of_LCD_write_char 1384  
                 _RCSTAbits 0018               LCD_en_dat@dat 0073                   _MONTH_ten 0036  
       __size_of_Y_position 0023                __pstringtext 0800                _key2pushflag 007B  
              _key3pushflag 0029                   _PORTBbits 0006                   _WEEK_unit 0032  
                 _PORTCbits 0007                   _PORTEbits 0009                   _YEAR_unit 0037  
          _FrameworkDisplay 1644                   _TRISCbits 0087         __end_of_check_Alarm 0BBC  
              _LCD_Read_dat 1384    __end_of_SixteenNoteDelay 1509           _aFrameworkDisplay 14C6  
  __end_of_UART_send_string 1554          ?_aFrameworkDisplay 0070               Ds1302Read@dat 0077  
               _CCP1CONbits 0017                   _TXSTAbits 0098           __size_of_LCD_Busy 0011  
       ??_aFrameworkDisplay 0064     __end_of_Trans_Alarm_bit 13D0           __size_of_LED_Init 000B  
         __size_of_LCD_init 001F             ?_LCD_write_char 0060           __size_of_KEY_init 0012  
                 _aHOUR_ten 003E     __size_of_Trans_Time_bit 006E                 _BAUDCTLbits 0187  
              ??_ModeSwitch 0067                _ReadTimeAddr 0ACF         start_initialization 000F  
 __end_of_aFrameworkDisplay 14E7             _Ds1302WriteTime 15A9              _UART_send_char 135A  
               __end_of_ISR 1429          __end_of_JingleBell 0A16          Ds1302ReadTimeBCD@n 005D  
             ??_Ds1302_Init 0072   __size_of_AlarmDataDisplay 0067               ??_Ds1302Write 0073  
          ??_LCD_en_command 0078          __end_of_ModeSwitch 076D           __size_of_InitScrn 0010  
                 _TempMetre 003F        __end_of_MusicDisplay 0C77                   _MusicPlay 0EF8  
                init_fetch0 1347                 __pdataBANK0 0043                 __pdataBANK1 00A0  
        __end_of_LittleLamb 0A99          __end_of_LittleStar 0AB8           ??_ClearScreenOnce 0066  
               _check_Alarm 0B74      __end_of_UART_send_char 136E                 __pbssCOMMON 007B  
                 ___latbits 0002               __pcstackBANK0 005D                ??_Y_position 0072  
         __size_of_check_K1 002C           __size_of_check_K2 0020           __size_of_check_K3 0020  
         __size_of_check_K4 0057           __size_of_check_K5 0057           __size_of_check_K6 0022  
         __size_of_delay_ms 0029           __size_of_delay_us 000D           LCD_set_xy@address 005E  
          _LCD_write_string 1708          Ds1302WriteTime@dat 0076         __end_of_Ds1302_Init 12B6  
          ?_Trans_Alarm_bit 0070         __end_of_Ds1302Write 0CD8                    ?_PwmInit 0070  
                  ?_PwmTone 0070             _Initialize_UART 1429                  ?_MusicPlay 0070  
        __end_of_Y_position 152C                    ?_beep_ms 005D     __end_of_Ds1302WriteTime 15D7  
       UART_send_string@Str 0073    __size_of_TimeDataDisplay 00E6             ?_UART_send_char 0070  
                  ?_keyscan 0070  __size_of_aFrameworkDisplay 0021               _MusicPosition 0027  
          ??_Initialize_INT 0072             LCD_write_char@x 0063             LCD_write_char@y 0060  
                  _DAY_unit 0033           interrupt_function 0004                    _LCD_Busy 1311  
                  _LED_Init 12CD                   delay_ms@j 0075                   delay_ms@k 0077  
                 delay_ms@n 0072                   delay_us@n 0072                    _LCD_init 1448  
                 clear_ram0 12C5       __end_of_WriteTimeAddr 0ACF          UART_send_char@data 0072  
                  _HOUR_ten 0031    __end_of_FrameworkDisplay 1681                    _KEY_init 1322  
                  _SET_TIME 0050              _Trans_Time_bit 0DA4                    _YEAR_ten 0038  
               __stringbase 0812                 _isMusicMode 03D1           ?_SixteenNoteDelay 0070  
         ?_UART_send_string 0073            _AlarmDataDisplay 0D3D          ??_SixteenNoteDelay 0078  
               _Ds1302_Init 12AF                    _InitScrn 1301       __size_of_MusicDisplay 0060  
               _Ds1302Write 0C77            ??_LCD_write_char 0062          ??_UART_send_string 0075  
   __end_of_Initialize_UART 1448                    _TempTone 0040      __end_of_Trans_Time_bit 0E12  
                  _SongName 0AB8                 ??_MusicPlay 0079                    PwmTone@X 0077  
          __size_of_PwmInit 0008                    PwmTone@n 0076            __size_of_PwmTone 003D  
          ?_Ds1302WriteTime 0076            __size_of_beep_ms 001E          __end_of__stringtab 0812  
                  _check_K1 157D                    _check_K2 1486                    _check_K3 14A6  
                  _check_K4 1752                    _check_K5 17A9                    _check_K6 07DE  
               _MINUTE_unit 002E                 _SECOND_unit 002C                    _delay_ms 1554  
          __size_of_keyscan 001F                    _delay_us 12D8                _MusicDisplay 0C17  
                  __ptext10 12BD                    __ptext11 0EF8                    __ptext20 15D7  
                  __ptext12 14E7                 _cursor_addr 002A                    __ptext21 076D  
                  __ptext13 1681                    __ptext30 13D0                    __ptext22 0BBC  
                  __ptext14 0C17                    __ptext31 1334                    __ptext23 14C6  
                  __ptext15 0038                    __ptext40 12B6                    __ptext32 12AA  
                  __ptext24 1708                    __ptext16 1509                    __ptext41 1301  
                  __ptext33 12CD                    __ptext25 1311                    __ptext17 0DA4  
                  __ptext42 1608                    __ptext34 1448                    __ptext26 1384  
                  __ptext18 0E12                    __ptext43 12D8                    __ptext35 12E5  
                  __ptext27 1644                    __ptext19 15A9                    __ptext44 1554  
                  __ptext36 1322                    __ptext28 0D3D                    __ptext45 12AF  
                  __ptext37 1429                    __ptext29 136E                    __ptext46 16BE  
                  __ptext38 152C                    __ptext47 13B5                    __ptext39 135A  
                  __ptext48 0C77                    __ptext49 140A           __CFG_BOR4V$BOR40V 0000  
         ??_TimeDataDisplay 0065                    beep_ms@n 005D           LCD_write_char@dat 0061  
             __size_of_main 0065             _ClearScreenOnce 0BBC             ?_Trans_Time_bit 0070  
     LCD_en_command@command 0078    __end_of_LCD_write_string 1752                ?_check_Alarm 0070  
                _LCD_en_dat 1334                  _Ds1302Init 16BE                  _Ds1302Read 076D  
           _tempTime_Ds1302 0020                  _INTCONbits 000B                  _LCD_set_xy 13D0  
                  init_ram0 134B           LCD_write_string@X 0064           LCD_write_string@Y 0060  
         LCD_write_string@s 0061                    intlevel1 0000                  _MINUTE_ten 002F  
                _SECOND_ten 002D            ?_Initialize_UART 0070                   stringcode 080A  
                _MONTH_unit 0035            ??_UART_send_char 0072                  _MUSIC_init 12AA  
                  stringtab 0800     __end_of_ClearScreenOnce 0C17           _Ds1302ReadTimeBCD 15D7  
        ?_Ds1302ReadTimeBCD 0070               ?_LCD_MPU_init 0070  
